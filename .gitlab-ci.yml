.project-infrastructure-cicd-ref: &project-infrastructure-cicd-ref 0.0.370

.project-infrastructure-cicd: &project-infrastructure-cicd
  project: securetrading-gl/st-server-project/project-infrastructure-cicd
  ref: *project-infrastructure-cicd-ref

include:
  - file: /cicd_js.yml
    <<: *project-infrastructure-cicd

  - local: '/.gitlab/others/services.yml'
  - local: '/.gitlab/build.yml'
  - local: '/.gitlab/post-build.yml'
  - local: '/.gitlab/fast-tests.yml'
  - local: '/.gitlab/publish-to-cdn.yml'
  - local: '/.gitlab/extended-tests.yml'
  - local: '/.gitlab/post-release.yml'
  - local: '/.gitlab/pre-smoke-tests.yml'
  - local: '/.gitlab/smoke-tests.yml'

variables:
  PROJECT_INFRASTRUCTURE_CICD_REF: *project-infrastructure-cicd-ref

  IMAGE_JS_PAYMENTS_APP_HTML_RELEASE: ${CI_REGISTRY_IMAGE}/app-html-release:${CI_PIPELINE_ID}
  IMAGE_JS_PAYMENTS_APP_HTML_MOCK: ${CI_REGISTRY_IMAGE}/app-html-mock:${CI_PIPELINE_ID}
  IMAGE_JS_PAYMENTS_APP_HTML_LOCAL: ${CI_REGISTRY_IMAGE}/app-html-local:${CI_PIPELINE_ID}
  IMAGE_JS_PAYMENTS_APP_HTML_SMOKE: ${CI_REGISTRY_IMAGE}/app-html-smoke:${CI_PIPELINE_ID}

  IMAGE_JS_PAYMENTS_TESTS: ${CI_REGISTRY_IMAGE}/payments-tests:${CI_PIPELINE_ID}
  IMAGE_JS_PAYMENTS_WIREMOCK: ${CI_REGISTRY_IMAGE}/wiremock:${CI_PIPELINE_ID}

  SMOKE_MOCK_TESTS_TAG: '@smoke_mock_test'
  SMOKE_E2E_TESTS_TAG: '@smoke_e2e_test'
  VISUAL_TESTS_TAG: '@visual_regression'
  VISUAL_STYLING_TESTS_TAG: '@visual_regression_styling'
  VISUAL_TESTS_SAFARI_TAG: '@visual_regression_safari'
  VISUAL_STYLING_TESTS_SAFARI_TAG: '@visual_regression_styling_safari'
  SMOKE_TESTS_WITH_APPLE_PAY: '@smoke_mock_test,@apple_pay_smoke_test'
  EXTENDED_TESTS_TAG: '@extended_tests_part_1,@extended_tests_part_2'
  ARTIFACT_RELEASE_DESCRIPTION_TYPE: "EXTENDED"

  ### Disabled Jobs:
  # Initialize
  # DISABLE_JOB_copy_cicd_scripts: 'true'
  # Pre-build
  # DISABLE_JOB_print_variables: 'true'
  # DISABLE_JOB_export_cleanup_artifacts: 'true'
  # DISABLE_JOB_docker_images_build: 'true'
  # DISABLE_JOB_docker_images_pull: 'true'
  # Build
  # utility-images-build - No need to disabling. Extends to enable.
  # Fast Tests
   DISABLE_JOB_unit_tests: 'true'
  # DISABLE_JOB_ts_static_analysis: 'true'
  # DISABLE_JOB_py_static_analysis: 'true' # TODO https://securetrading.atlassian.net/browse/STJS-950
   DISABLE_JOB_vuln_check: 'true'
  # Extended Tests
  # DISABLE_JOB_extended_tests: 'true'
  # Validate merge request description
  # DISABLE_JOB_validate_merge_request_description: 'true'
  # Release
  # DISABLE_JOB_release: 'true'
  # DISABLE_JOB_release_generate_version: "true"
  # Post-Release
  DISABLE_JOB_npm_publish: 'true'
  ### Disabled Jobs : End

  ### Disabled Activities
  # DISABLE_ACTIVITY_docker_image_build_cache: 'true'
  # DISABLE_ACTIVITY_generate_lerna_artifacts: 'true'
  ### Disabled Activities : End

  ##### Others - project specific #####
  # BUILD_IMAGES: "true"
  # CI_DEBUG_TRACE: "true" # For CI/CD extra logs (like actually using variables)
  # LOG_LEVEL: DEBUG # For bash and python scripts

py-static-analysis:
  variables:
    PYTHONPATH: tests
  before_script:
    - touch src/skipy_mypy_analysis_for_src_directory.py
    - cd tests && . ${PROJECT_VENV_DIR}/bin/activate && poetry install && cd ..

stages:
  - initialize
  - pre-build
  - build
  - post-build
  - publish-to-cdn
# Tests
  - fast-tests
  - extended-tests
  - validate-merge-request-description
# Release package
  - release
  - post-release
# Smoke tests
  - pre-smoke-tests
  - smoke-tests

