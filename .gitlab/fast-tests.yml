.component-tests:
  image: ${IMAGE_JS_PAYMENTS_TESTS}
  variables:
    BEHAVE_LOGGING_LEVEL: INFO
    FF_NETWORK_PER_BUILD: 'true' # https://docs.gitlab.com/runner/configuration/feature-flags.html
    FEATURE_FILES_DIR: 'features'

.component-tests-services:
  services:
    - name: "${IMAGE_JS_PAYMENTS_APP_HTML_TEST}"
      alias: library.securetrading.net
    - name: "${IMAGE_JS_PAYMENTS_APP_HTML_TEST}"
      alias: merchant.securetrading.net
    - name: "${IMAGE_JS_PAYMENTS_WIREMOCK}"
      alias: webservices.securetrading.net
      command: ["--https-port", "8443", "--https-keystore", "/home/wiremock/keystore"]
    - name: "${IMAGE_JS_PAYMENTS_WIREMOCK}"
      alias: thirdparty.example.com
      command: ["--https-port", "8443", "--https-keystore", "/home/wiremock/keystore"]

.sequentially-tests:
  variables:
    FEATURE_FILE_NAME: "TO-FILL" # To be fill in child job - it have to be file name
  script:
    - . .cicd_scripts/execute/tests.sh
    - cd ${IMAGE_JS_PAYMENTS_TESTS_WORKDIR}
    - . venv/bin/activate
    - execute_tests_sequentially "${BEHAVE_LOGGING_LEVEL}" "${FEATURE_FILES_DIR}" "${FEATURE_FILE_NAME}"

.parallel-tests:
  variables:
    IGNORED_FILES: "TO-FILL" # list containing feature files that should not be run in parallel, eg. content: IGNORED_FILES="file1|file2"
    FEATURE_FILES_NAMES_CONTAINS: '' # To be fill in child job - it can be prefix, suffix or part of filenames
  script:
    - . .cicd_scripts/execute/tests.sh
    - cd ${IMAGE_JS_PAYMENTS_TESTS_WORKDIR}
    - . venv/bin/activate
    - execute_tests_in_parallel "${BEHAVE_LOGGING_LEVEL}" "${FEATURE_FILES_DIR}" "${FEATURE_FILES_NAMES_CONTAINS}"

card-payments-headless-component-tests:
  extends:
    - .fast-tests
    - .component-tests
    - .component-tests-services
    - .parallel-tests
  variables:
    FEATURE_FILES_NAMES_CONTAINS: 'mock_'
  parallel: 15

visa-checkout-headless-component-tests:
  extends:
    - .fast-tests
    - .component-tests
    - .component-tests-services
    - .sequentially-tests
  variables:
    FEATURE_FILE_NAME: 'visa_checkout_tests.feature'

.browserstack:
  variables:
    BS_ACCESS_KEY: $BROWSERSTACK_ACCESS_KEY
    BS_USERNAME: $BROWSERSTACK_USERNAME
    BUILD_NAME: ${CI_COMMIT_REF_SLUG}/${CI_PIPELINE_ID}/${CI_JOB_NAME}
    REMOTE: "true"
  before_script:
    - BS_LOCAL_IDENTIFIER=gitlab_${CI_PIPELINE_ID}_${CI_JOB_NAME}_$(date +%Y-%m-%d_%H-%M-%S)
    - export BS_LOCAL_IDENTIFIER
    - wget --quiet https://www.browserstack.com/browserstack-local/BrowserStackLocal-linux-x64.zip
    - unzip BrowserStackLocal-linux-x64.zip
    - ./BrowserStackLocal ${BROWSERSTACK_ACCESS_KEY} --force-local --local-identifier ${BS_LOCAL_IDENTIFIER} --daemon start
  script:
    - cd ${IMAGE_JS_PAYMENTS_TESTS_WORKDIR}
    - . venv/bin/activate
    - |
      poetry run behave \
        --logging-level="${BEHAVE_LOGGING_LEVEL}" \
        --tags=${POETRY_TAGS} \
        ${FEATURE_FILES_DIR}
  retry: 2 # TODO https://securetrading.atlassian.net/browse/STJS-896
  timeout: 24h # We're executing a lot of browserstack tests, which can wait in browserstack queue

.apple-test-browserstack-component-test:
  extends:
    - .fast-tests
    - .component-tests
    - .component-tests-services
    - .browserstack
  variables:
    OS: "OS X"
    OS_VERSION: Mojave
    BROWSER: Safari
    BROWSER_VERSION: '12.1'

apple-test-part1-browserstack-component-test:
  extends: .apple-test-browserstack-component-test
  variables:
    POETRY_TAGS: apple_test_part1

apple-test-part2-browserstack-component-test:
  extends: .apple-test-browserstack-component-test
  variables:
    POETRY_TAGS: apple_test_part2

.e2e-tests:
  image: ${IMAGE_JS_PAYMENTS_TESTS}
  variables:
    BEHAVE_LOGGING_LEVEL: INFO
    FF_NETWORK_PER_BUILD: 'true' # https://docs.gitlab.com/runner/configuration/feature-flags.html
    FEATURE_FILES_DIR: 'features/e2e_tests'
  before_script:
    - test -n "${EMAIL_LOGIN:-}"
    - test -n "${EMAIL_PASSWORD:-}"
    - test -n "${JWT_ISS_KEY:-}"
    - test -n "${JWT_SECRET_KEY_BASE64:-}"
    - JWT_SECRET_KEY=$(echo ${JWT_SECRET_KEY_BASE64} | base64 -d)
    - export JWT_SECRET_KEY
    - test -n "${JWT_SECRET_KEY:-}"

.e2e-tests-services:
  services:
    - name: "${IMAGE_JS_PAYMENTS_APP_HTML_DEV}"
      alias: library.securetrading.net
    - name: "${IMAGE_JS_PAYMENTS_APP_HTML_DEV}"
      alias: merchant.securetrading.net

#e2e-tests: # TODO INFRA-228
#  extends:
#    - .fast-tests
#    - .e2e-tests
#    - .e2e-tests-services
#    - .parallel-tests
#  parallel: 9
