document.querySelector('mutation-test-report-app').report = {"files":{"C:\\workspace\\trust-payments\\js-payments\\src\\application\\components\\animated-card\\AnimatedCard.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":4,"line":17},"start":{"column":90,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3","location":{"end":{"column":44,"line":14},"start":{"column":36,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4","location":{"end":{"column":77,"line":14},"start":{"column":69,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"5","location":{"end":{"column":88,"line":14},"start":{"column":81,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"6","location":{"end":{"column":4,"line":38},"start":{"column":35,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"7","location":{"end":{"column":6,"line":23},"start":{"column":96,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"8","location":{"end":{"column":47,"line":22},"start":{"column":43,"line":22}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"9","location":{"end":{"column":6,"line":27},"start":{"column":100,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"10","location":{"end":{"column":51,"line":26},"start":{"column":47,"line":26}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"11","location":{"end":{"column":6,"line":31},"start":{"column":98,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"12","location":{"end":{"column":49,"line":30},"start":{"column":45,"line":30}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"13","location":{"end":{"column":6,"line":34},"start":{"column":97,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2","location":{"end":{"column":48,"line":13},"start":{"column":30,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1","location":{"end":{"column":6,"line":15},"start":{"column":26,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"14","location":{"end":{"column":6,"line":37},"start":{"column":96,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import Card from '@securetrading/js-payments-card/stcard';\nimport { Service } from 'typedi';\nimport { BrowserLocalStorage } from '../../../shared/services/storage/BrowserLocalStorage';\nimport { IFormFieldState } from '../../core/models/IFormFieldState';\nimport { MessageBus } from '../../core/shared/message-bus/MessageBus';\n\n@Service()\nexport class AnimatedCard {\n  private card: Card;\n\n  constructor(private localStorage: BrowserLocalStorage, private messageBus: MessageBus) {\n    this.card = new Card({\n      animatedCardContainer: 'st-animated-card',\n      locale: localStorage.getItem('locale') ? localStorage.getItem('locale') : 'en_GB'\n    });\n    this.initSubscribers();\n  }\n\n  private initSubscribers(): void {\n    this.messageBus.subscribe(MessageBus.EVENTS.CHANGE_CARD_NUMBER, (data: IFormFieldState) => {\n      const { value } = data;\n      this.card.onCardNumberChange(value, true);\n    });\n    this.messageBus.subscribe(MessageBus.EVENTS.CHANGE_EXPIRATION_DATE, (data: IFormFieldState) => {\n      const { value } = data;\n      this.card.onExpirationDateChange(value, true);\n    });\n    this.messageBus.subscribe(MessageBus.EVENTS.CHANGE_SECURITY_CODE, (data: IFormFieldState) => {\n      const { value } = data;\n      this.card.onSecurityCodeChange(value, true);\n    });\n    this.messageBus.subscribe(MessageBus.EVENTS.FOCUS_SECURITY_CODE, (data: IFormFieldState) => {\n      this.card.onFieldFocusOrBlur(data);\n    });\n    this.messageBus.subscribe(MessageBus.EVENTS.BLUR_SECURITY_CODE, (data: IFormFieldState) => {\n      this.card.onFieldFocusOrBlur(data);\n    });\n  }\n}\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\components\\animated-card\\animated-card.ts":{"language":"typescript","mutants":[{"id":"15","location":{"end":{"column":2,"line":14},"start":{"column":8,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"16","location":{"end":{"column":48,"line":11},"start":{"column":7,"line":11}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"17","location":{"end":{"column":48,"line":11},"start":{"column":7,"line":11}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"20","location":{"end":{"column":4,"line":13},"start":{"column":50,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"19","location":{"end":{"column":47,"line":11},"start":{"column":37,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"18","location":{"end":{"column":48,"line":11},"start":{"column":7,"line":11}},"mutatorName":"LogicalOperator","replacement":"Card || document.URL.includes('animated')","status":"Survived"}],"source":"import '@securetrading/js-payments-card/stcardstyle.css';\r\n// @ts-ignore\r\nimport Card from '@securetrading/js-payments-card/stcard.js';\r\nimport { Container } from 'typedi';\r\nimport '../../core/shared/override-domain/OverrideDomain';\r\nimport { ComponentBootstrap } from '../../core/component-bootstrap/ComponentBootstrap';\r\nimport { AnimatedCard } from './AnimatedCard';\r\nimport { ANIMATED_CARD_COMPONENT_IFRAME } from '../../core/models/constants/Selectors';\r\n\r\n(() => {\r\n  if (Card && document.URL.includes('animated')) {\r\n    Container.get(ComponentBootstrap).run(ANIMATED_CARD_COMPONENT_IFRAME, AnimatedCard);\r\n  }\r\n})();\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\components\\card-number\\CardNumber.ts":{"language":"typescript","mutants":[{"id":"21","location":{"end":{"column":119,"line":26},"start":{"column":33,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"22","location":{"end":{"column":57,"line":28},"start":{"column":47,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"23","location":{"end":{"column":63,"line":29},"start":{"column":43,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"24","location":{"end":{"column":51,"line":30},"start":{"column":43,"line":30}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"26","location":{"end":{"column":94,"line":34},"start":{"column":48,"line":34}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"25","location":{"end":{"column":50,"line":30},"start":{"column":44,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"27","location":{"end":{"column":35,"line":55},"start":{"column":31,"line":55}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"30","location":{"end":{"column":78,"line":57},"start":{"column":24,"line":57}},"mutatorName":"LogicalOperator","replacement":"this.configProvider.getConfig().placeholders.pan && ''","status":"Survived"},{"id":"28","location":{"end":{"column":78,"line":57},"start":{"column":24,"line":57}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"29","location":{"end":{"column":78,"line":57},"start":{"column":24,"line":57}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"31","location":{"end":{"column":78,"line":57},"start":{"column":76,"line":57}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"33","location":{"end":{"column":53,"line":72},"start":{"column":11,"line":72}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"32","location":{"end":{"column":6,"line":80},"start":{"column":69,"line":70}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"34","location":{"end":{"column":53,"line":72},"start":{"column":11,"line":72}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"35","location":{"end":{"column":8,"line":79},"start":{"column":55,"line":72}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"36","location":{"end":{"column":27,"line":74},"start":{"column":11,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"37","location":{"end":{"column":33,"line":75},"start":{"column":11,"line":75}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"39","location":{"end":{"column":28,"line":76},"start":{"column":12,"line":76}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"38","location":{"end":{"column":57,"line":76},"start":{"column":11,"line":76}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"40","location":{"end":{"column":56,"line":76},"start":{"column":30,"line":76}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"42","location":{"end":{"column":32,"line":77},"start":{"column":12,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"41","location":{"end":{"column":77,"line":77},"start":{"column":11,"line":77}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"43","location":{"end":{"column":64,"line":77},"start":{"column":34,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"45","location":{"end":{"column":4,"line":85},"start":{"column":32,"line":83}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"44","location":{"end":{"column":76,"line":77},"start":{"column":66,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"46","location":{"end":{"column":4,"line":91},"start":{"column":22,"line":87}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"48","location":{"end":{"column":4,"line":102},"start":{"column":35,"line":98}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"47","location":{"end":{"column":4,"line":96},"start":{"column":35,"line":93}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"49","location":{"end":{"column":4,"line":108},"start":{"column":44,"line":104}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"50","location":{"end":{"column":4,"line":112},"start":{"column":46,"line":110}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"51","location":{"end":{"column":4,"line":120},"start":{"column":45,"line":114}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"52","location":{"end":{"column":34,"line":116},"start":{"column":9,"line":116}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"53","location":{"end":{"column":34,"line":116},"start":{"column":9,"line":116}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"54","location":{"end":{"column":6,"line":119},"start":{"column":36,"line":116}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"55","location":{"end":{"column":4,"line":124},"start":{"column":32,"line":122}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"58","location":{"end":{"column":4,"line":141},"start":{"column":40,"line":134}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"56","location":{"end":{"column":4,"line":128},"start":{"column":31,"line":126}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"57","location":{"end":{"column":4,"line":132},"start":{"column":33,"line":130}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"59","location":{"end":{"column":6,"line":139},"start":{"column":47,"line":136}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"61","location":{"end":{"column":14,"line":144},"start":{"column":9,"line":144}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"60","location":{"end":{"column":4,"line":148},"start":{"column":52,"line":143}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"62","location":{"end":{"column":14,"line":144},"start":{"column":9,"line":144}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"64","location":{"end":{"column":6,"line":146},"start":{"column":16,"line":144}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"63","location":{"end":{"column":14,"line":144},"start":{"column":9,"line":144}},"mutatorName":"BooleanLiteral","replacement":"type","status":"Survived"},{"id":"65","location":{"end":{"column":4,"line":160},"start":{"column":61,"line":150}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"66","location":{"end":{"column":18,"line":154},"start":{"column":9,"line":154}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"68","location":{"end":{"column":6,"line":156},"start":{"column":20,"line":154}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"67","location":{"end":{"column":18,"line":154},"start":{"column":9,"line":154}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"69","location":{"end":{"column":13,"line":157},"start":{"column":9,"line":157}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"70","location":{"end":{"column":13,"line":157},"start":{"column":9,"line":157}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"71","location":{"end":{"column":6,"line":159},"start":{"column":15,"line":157}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"73","location":{"end":{"column":80,"line":163},"start":{"column":56,"line":163}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"72","location":{"end":{"column":4,"line":165},"start":{"column":53,"line":162}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"74","location":{"end":{"column":4,"line":169},"start":{"column":58,"line":167}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"75","location":{"end":{"column":101,"line":172},"start":{"column":28,"line":171}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"76","location":{"end":{"column":101,"line":175},"start":{"column":36,"line":174}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"78","location":{"end":{"column":4,"line":193},"start":{"column":39,"line":180}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"77","location":{"end":{"column":107,"line":178},"start":{"column":36,"line":177}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"80","location":{"end":{"column":19,"line":185},"start":{"column":9,"line":185}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"79","location":{"end":{"column":71,"line":182},"start":{"column":69,"line":182}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"81","location":{"end":{"column":19,"line":185},"start":{"column":9,"line":185}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"82","location":{"end":{"column":6,"line":187},"start":{"column":21,"line":185}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"83","location":{"end":{"column":98,"line":186},"start":{"column":29,"line":186}},"mutatorName":"ArithmeticOperator","replacement":"cardFormat.split('d').length + CardNumber.WHITESPACES_DECREASE_NUMBER","status":"Survived"},{"id":"84","location":{"end":{"column":49,"line":186},"start":{"column":46,"line":186}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"85","location":{"end":{"column":6,"line":189},"start":{"column":12,"line":187}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"86","location":{"end":{"column":110,"line":191},"start":{"column":7,"line":191}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"88","location":{"end":{"column":110,"line":191},"start":{"column":7,"line":191}},"mutatorName":"LogicalOperator","replacement":"Utils.getLastElementOfArray(cardLengthFromBin) + numberOfWhitespaces && CardNumber.STANDARD_CARD_LENGTH","status":"Survived"},{"id":"87","location":{"end":{"column":110,"line":191},"start":{"column":7,"line":191}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"90","location":{"end":{"column":4,"line":203},"start":{"column":55,"line":195}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"89","location":{"end":{"column":75,"line":191},"start":{"column":7,"line":191}},"mutatorName":"ArithmeticOperator","replacement":"Utils.getLastElementOfArray(cardLengthFromBin) - numberOfWhitespaces","status":"Survived"},{"id":"91","location":{"end":{"column":6,"line":202},"start":{"column":12,"line":198}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"92","location":{"end":{"column":4,"line":220},"start":{"column":28,"line":205}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"93","location":{"end":{"column":22,"line":217},"start":{"column":9,"line":217}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"95","location":{"end":{"column":6,"line":219},"start":{"column":24,"line":217}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"94","location":{"end":{"column":22,"line":217},"start":{"column":9,"line":217}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"96","location":{"end":{"column":43,"line":218},"start":{"column":32,"line":218}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"97","location":{"end":{"column":4,"line":233},"start":{"column":33,"line":222}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"98","location":{"end":{"column":6,"line":232},"start":{"column":97,"line":223}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"99","location":{"end":{"column":40,"line":224},"start":{"column":11,"line":224}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"100","location":{"end":{"column":40,"line":224},"start":{"column":11,"line":224}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"101","location":{"end":{"column":40,"line":224},"start":{"column":11,"line":224}},"mutatorName":"EqualityOperator","replacement":"state === FormState.AVAILABLE","status":"Survived"},{"id":"103","location":{"end":{"column":78,"line":225},"start":{"column":72,"line":225}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"102","location":{"end":{"column":8,"line":227},"start":{"column":42,"line":224}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"104","location":{"end":{"column":8,"line":231},"start":{"column":14,"line":227}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"105","location":{"end":{"column":4,"line":244},"start":{"column":57,"line":235}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"107","location":{"end":{"column":38,"line":240},"start":{"column":13,"line":240}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"106","location":{"end":{"column":6,"line":242},"start":{"column":51,"line":239}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"108","location":{"end":{"column":4,"line":260},"start":{"column":24,"line":246}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"109","location":{"end":{"column":6,"line":251},"start":{"column":47,"line":248}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"110","location":{"end":{"column":17,"line":252},"start":{"column":9,"line":252}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"111","location":{"end":{"column":17,"line":252},"start":{"column":9,"line":252}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"113","location":{"end":{"column":8,"line":256},"start":{"column":49,"line":253}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"112","location":{"end":{"column":6,"line":258},"start":{"column":19,"line":252}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"114","location":{"end":{"column":52,"line":257},"start":{"column":48,"line":257}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"}],"source":"import { FormState } from '../../core/models/constants/FormState';\r\nimport { IFormFieldState } from '../../core/models/IFormFieldState';\r\nimport { IMessageBusEvent } from '../../core/models/IMessageBusEvent';\r\nimport { Formatter } from '../../core/shared/formatter/Formatter';\r\nimport { Input } from '../../core/shared/input/Input';\r\nimport { MessageBus } from '../../core/shared/message-bus/MessageBus';\r\nimport { Utils } from '../../core/shared/utils/Utils';\r\nimport { Validation } from '../../core/shared/validation/Validation';\r\nimport { iinLookup } from '@trustpayments/ts-iin-lookup';\r\nimport { Service } from 'typedi';\r\nimport { ConfigProvider } from '../../../shared/services/config-provider/ConfigProvider';\r\nimport { IconFactory } from '../../core/services/icon/IconFactory';\r\nimport { IConfig } from '../../../shared/model/config/IConfig';\r\nimport { Styler } from '../../core/shared/styler/Styler';\r\nimport { Frame } from '../../core/shared/frame/Frame';\r\nimport { LABEL_CARD_NUMBER } from '../../core/models/constants/Translations';\r\nimport {\r\n  CARD_NUMBER_INPUT,\r\n  CARD_NUMBER_LABEL,\r\n  CARD_NUMBER_MESSAGE,\r\n  CARD_NUMBER_WRAPPER\r\n} from '../../core/models/constants/Selectors';\r\n\r\n@Service()\r\nexport class CardNumber extends Input {\r\n  public static ifFieldExists = (): HTMLInputElement => document.getElementById(CARD_NUMBER_INPUT) as HTMLInputElement;\r\n\r\n  private static DISABLED_ATTRIBUTE: string = 'disabled';\r\n  private static DISABLED_CLASS: string = 'st-input--disabled';\r\n  private static NO_CVV_CARDS: string[] = ['PIBA'];\r\n  private static STANDARD_CARD_LENGTH: number = 19;\r\n  private static WHITESPACES_DECREASE_NUMBER: number = 2;\r\n\r\n  private static _getCardNumberForBinProcess = (cardNumber: string) => cardNumber.slice(0, 6);\r\n\r\n  public validation: Validation;\r\n  private _panIcon: boolean;\r\n  private _cardNumberFormatted: string;\r\n  private _cardNumberLength: number;\r\n  private _cardNumberValue: string;\r\n  private _isCardNumberValid: boolean;\r\n  private _fieldInstance: HTMLInputElement = document.getElementById(CARD_NUMBER_INPUT) as HTMLInputElement;\r\n  private readonly _cardNumberField: HTMLInputElement;\r\n\r\n  constructor(\r\n    private configProvider: ConfigProvider,\r\n    private _iconFactory: IconFactory,\r\n    private _formatter: Formatter,\r\n    private frame: Frame,\r\n    private messageBus: MessageBus\r\n  ) {\r\n    super(CARD_NUMBER_INPUT, CARD_NUMBER_MESSAGE, CARD_NUMBER_LABEL, CARD_NUMBER_WRAPPER);\r\n    this._cardNumberField = document.getElementById(CARD_NUMBER_INPUT) as HTMLInputElement;\r\n    this.validation = new Validation();\r\n    this._isCardNumberValid = true;\r\n    this._cardNumberLength = CardNumber.STANDARD_CARD_LENGTH;\r\n    this.placeholder = this.configProvider.getConfig().placeholders.pan || '';\r\n    this._panIcon = this.configProvider.getConfig().panIcon;\r\n    this.setFocusListener();\r\n    this.setBlurListener();\r\n    this.setSubmitListener();\r\n    this._setDisableListener();\r\n    this.validation.backendValidation(\r\n      this._inputElement,\r\n      this._messageElement,\r\n      MessageBus.EVENTS.VALIDATE_CARD_NUMBER_FIELD\r\n    );\r\n    this._sendState();\r\n    this._inputElement.setAttribute(CardNumber.PLACEHOLDER_ATTRIBUTE, this.placeholder);\r\n    this.configProvider.getConfig$().subscribe((config: IConfig) => {\r\n      const styler: Styler = new Styler(this.getAllowedStyles(), this.frame.parseUrl().styles);\r\n      if (styler.isLinedUp(config.styles.cardNumber)) {\r\n        styler.lineUp(\r\n          'st-card-number',\r\n          'st-card-number-label',\r\n          ['st-card-number', 'st-card-number--lined-up'],\r\n          ['card-number__label', 'card-number__label--required', 'lined-up']\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  protected getLabel(): string {\r\n    return LABEL_CARD_NUMBER;\r\n  }\r\n\r\n  protected onBlur() {\r\n    super.onBlur();\r\n    this.validation.luhnCheck(this._fieldInstance, this._inputElement, this._messageElement);\r\n    this._sendState();\r\n  }\r\n\r\n  protected onFocus(event: Event) {\r\n    super.onFocus(event);\r\n    this._disableSecurityCodeField(this._inputElement.value);\r\n  }\r\n\r\n  protected onInput(event: Event) {\r\n    super.onInput(event);\r\n    this._setInputValue();\r\n    this._sendState();\r\n  }\r\n\r\n  protected onPaste(event: ClipboardEvent) {\r\n    super.onPaste(event);\r\n    this._setInputValue();\r\n    this._sendState();\r\n  }\r\n\r\n  protected onKeyPress(event: KeyboardEvent) {\r\n    super.onKeyPress(event);\r\n  }\r\n\r\n  protected onKeydown(event: KeyboardEvent) {\r\n    super.onKeydown(event);\r\n    if (Validation.isEnter(event)) {\r\n      this.validation.luhnCheck(this._cardNumberInput, this._inputElement, this._messageElement);\r\n      this._sendState();\r\n    }\r\n  }\r\n\r\n  protected setFocusListener() {\r\n    super.setEventListener(MessageBus.EVENTS.FOCUS_CARD_NUMBER);\r\n  }\r\n\r\n  protected setBlurListener() {\r\n    super.setEventListener(MessageBus.EVENTS.BLUR_CARD_NUMBER);\r\n  }\r\n\r\n  protected setSubmitListener() {\r\n    super.setEventListener(MessageBus.EVENTS_PUBLIC.SUBMIT_FORM);\r\n  }\r\n\r\n  private _publishSecurityCodeLength() {\r\n    const { value } = this.getState();\r\n    const messageBusEvent: IMessageBusEvent = {\r\n      data: this._getSecurityCodeLength(value),\r\n      type: MessageBus.EVENTS.CHANGE_SECURITY_CODE_LENGTH\r\n    };\r\n    this.messageBus.publish(messageBusEvent);\r\n  }\r\n\r\n  private _getIcon(type: string): HTMLImageElement {\r\n    if (!type) {\r\n      return;\r\n    }\r\n    return this._iconFactory.getIcon(type.toLowerCase());\r\n  }\r\n\r\n  private _setIconImage(type: string, iconId: string): void {\r\n    const icon: HTMLImageElement = this._getIcon(type);\r\n    const iconInDom: HTMLElement = document.getElementById(iconId);\r\n\r\n    if (iconInDom) {\r\n      iconInDom.parentNode.removeChild(iconInDom);\r\n    }\r\n    if (icon) {\r\n      this._setIconInDom(icon);\r\n    }\r\n  }\r\n\r\n  private _setIconInDom(element: HTMLElement): void {\r\n    const input: HTMLElement = document.getElementById('st-card-number-wrapper');\r\n    input.insertBefore(element, input.childNodes[0]);\r\n  }\r\n\r\n  private _getBinLookupDetails = (cardNumber: string) => {\r\n    return iinLookup.lookup(cardNumber).type ? iinLookup.lookup(cardNumber) : undefined;\r\n  };\r\n\r\n  private _getCardFormat = (cardNumber: string) =>\r\n    this._getBinLookupDetails(cardNumber) ? this._getBinLookupDetails(cardNumber).format : undefined;\r\n\r\n  private _getPossibleCardLength = (cardNumber: string) =>\r\n    this._getBinLookupDetails(cardNumber) ? this._getBinLookupDetails(cardNumber).length : undefined;\r\n\r\n  private _getSecurityCodeLength = (cardNumber: string) =>\r\n    this._getBinLookupDetails(cardNumber) ? this._getBinLookupDetails(cardNumber).cvcLength[0] : undefined;\r\n\r\n  private _getMaxLengthOfCardNumber() {\r\n    const cardLengthFromBin = this._getPossibleCardLength(this._inputElement.value);\r\n    this._cardNumberValue = this._inputElement.value.replace(/\\s/g, '');\r\n    const cardFormat = this._getCardFormat(this._cardNumberValue);\r\n    let numberOfWhitespaces;\r\n    if (cardFormat) {\r\n      numberOfWhitespaces = cardFormat.split('d').length - CardNumber.WHITESPACES_DECREASE_NUMBER;\r\n    } else {\r\n      numberOfWhitespaces = 0;\r\n    }\r\n    this._cardNumberLength =\r\n      Utils.getLastElementOfArray(cardLengthFromBin) + numberOfWhitespaces || CardNumber.STANDARD_CARD_LENGTH;\r\n    return this._cardNumberLength;\r\n  }\r\n\r\n  private _getCardNumberFieldState(): IFormFieldState {\r\n    const { validity } = this.getState();\r\n    this._publishSecurityCodeLength();\r\n    return {\r\n      formattedValue: this._cardNumberFormatted,\r\n      validity,\r\n      value: this._cardNumberValue\r\n    };\r\n  }\r\n\r\n  private _setInputValue() {\r\n    this._getMaxLengthOfCardNumber();\r\n    this._disableSecurityCodeField(this._inputElement.value);\r\n    this._inputElement.value = this.validation.limitLength(this._inputElement.value, this._cardNumberLength);\r\n    const { formatted, nonformatted } = this._formatter.number(this._inputElement.value, CARD_NUMBER_INPUT);\r\n    this._inputElement.value = formatted;\r\n    this._cardNumberFormatted = formatted;\r\n    this._cardNumberValue = nonformatted;\r\n    this.validation.keepCursorsPosition(this._inputElement);\r\n    const type = this._getBinLookupDetails(this._cardNumberValue)\r\n      ? this._getBinLookupDetails(this._cardNumberValue).type\r\n      : null;\r\n    if (this._panIcon) {\r\n      this._setIconImage(type, 'card-icon');\r\n    }\r\n  }\r\n\r\n  private _setDisableListener() {\r\n    this.messageBus.subscribe(MessageBus.EVENTS_PUBLIC.BLOCK_CARD_NUMBER, (state: FormState) => {\r\n      if (state !== FormState.AVAILABLE) {\r\n        this._inputElement.setAttribute(CardNumber.DISABLED_ATTRIBUTE, 'true');\r\n        this._inputElement.classList.add(CardNumber.DISABLED_CLASS);\r\n      } else {\r\n        // @ts-ignore\r\n        this._inputElement.removeAttribute(CardNumber.DISABLED_ATTRIBUTE);\r\n        this._inputElement.classList.remove(CardNumber.DISABLED_CLASS);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _disableSecurityCodeField(cardNumber: string) {\r\n    const number: string = Validation.clearNonDigitsChars(cardNumber);\r\n    const isCardPiba: boolean = CardNumber.NO_CVV_CARDS.includes(iinLookup.lookup(number).type);\r\n    const formState = isCardPiba ? FormState.BLOCKED : FormState.AVAILABLE;\r\n    const messageBusEventPiba: IMessageBusEvent = {\r\n      data: { formState, isCardPiba },\r\n      type: MessageBus.EVENTS.IS_CARD_WITHOUT_CVV\r\n    };\r\n    this.messageBus.publish(messageBusEventPiba);\r\n  }\r\n\r\n  private _sendState() {\r\n    const { value, validity } = this._getCardNumberFieldState();\r\n    const messageBusEvent: IMessageBusEvent = {\r\n      data: this._getCardNumberFieldState(),\r\n      type: MessageBus.EVENTS.CHANGE_CARD_NUMBER\r\n    };\r\n    if (validity) {\r\n      const binProcessEvent: IMessageBusEvent = {\r\n        data: CardNumber._getCardNumberForBinProcess(value),\r\n        type: MessageBus.EVENTS_PUBLIC.BIN_PROCESS\r\n      };\r\n      this.messageBus.publish(binProcessEvent, true);\r\n    }\r\n    this.messageBus.publish(messageBusEvent);\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\components\\card-number\\card-number.ts":{"language":"typescript","mutants":[{"id":"115","location":{"end":{"column":2,"line":10},"start":{"column":8,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import './card-number.scss';\nimport { CardNumber } from './CardNumber';\nimport '../../core/shared/override-domain/OverrideDomain';\nimport { ComponentBootstrap } from '../../core/component-bootstrap/ComponentBootstrap';\nimport { Container } from 'typedi';\nimport { CARD_NUMBER_IFRAME } from '../../core/models/constants/Selectors';\n\n(() => {\n  Container.get(ComponentBootstrap).run(CARD_NUMBER_IFRAME, CardNumber);\n})();\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\components\\control-frame\\ControlFrame.ts":{"language":"typescript","mutants":[{"id":"116","location":{"end":{"column":66,"line":47},"start":{"column":45,"line":47}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"117","location":{"end":{"column":51,"line":47},"start":{"column":46,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"118","location":{"end":{"column":65,"line":47},"start":{"column":53,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"119","location":{"end":{"column":52,"line":48},"start":{"column":44,"line":48}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"120","location":{"end":{"column":51,"line":48},"start":{"column":45,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"123","location":{"end":{"column":4,"line":57},"start":{"column":90,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"122","location":{"end":{"column":4,"line":53},"start":{"column":93,"line":51}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"121","location":{"end":{"column":59,"line":49},"start":{"column":46,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"126","location":{"end":{"column":4,"line":72},"start":{"column":26,"line":68}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"125","location":{"end":{"column":4,"line":66},"start":{"column":48,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"124","location":{"end":{"column":4,"line":61},"start":{"column":36,"line":59}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"127","location":{"end":{"column":12,"line":69},"start":{"column":10,"line":69}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"129","location":{"end":{"column":21,"line":71},"start":{"column":19,"line":71}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"128","location":{"end":{"column":19,"line":70},"start":{"column":17,"line":70}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"130","location":{"end":{"column":43,"line":73},"start":{"column":38,"line":73}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"131","location":{"end":{"column":4,"line":132},"start":{"column":5,"line":94}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"132","location":{"end":{"column":8,"line":107},"start":{"column":57,"line":97}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"133","location":{"end":{"column":10,"line":102},"start":{"column":34,"line":99}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"134","location":{"end":{"column":95,"line":112},"start":{"column":16,"line":112}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"135","location":{"end":{"column":83,"line":113},"start":{"column":13,"line":113}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"136","location":{"end":{"column":8,"line":123},"start":{"column":41,"line":115}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"137","location":{"end":{"column":51,"line":117},"start":{"column":36,"line":117}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"138","location":{"end":{"column":10,"line":122},"start":{"column":34,"line":119}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"139","location":{"end":{"column":6,"line":131},"start":{"column":113,"line":125}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"140","location":{"end":{"column":21,"line":126},"start":{"column":11,"line":126}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"141","location":{"end":{"column":21,"line":126},"start":{"column":11,"line":126}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"142","location":{"end":{"column":8,"line":130},"start":{"column":23,"line":126}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"143","location":{"end":{"column":74,"line":127},"start":{"column":30,"line":127}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"146","location":{"end":{"column":26,"line":147},"start":{"column":9,"line":147}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"144","location":{"end":{"column":4,"line":165},"start":{"column":41,"line":134}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"145","location":{"end":{"column":26,"line":147},"start":{"column":9,"line":147}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"147","location":{"end":{"column":26,"line":147},"start":{"column":9,"line":147}},"mutatorName":"BooleanLiteral","replacement":"config.deferInit","status":"Survived"},{"id":"148","location":{"end":{"column":6,"line":149},"start":{"column":28,"line":147}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"150","location":{"end":{"column":45,"line":149},"start":{"column":16,"line":149}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"149","location":{"end":{"column":45,"line":149},"start":{"column":16,"line":149}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"151","location":{"end":{"column":6,"line":157},"start":{"column":47,"line":149}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"152","location":{"end":{"column":8,"line":156},"start":{"column":32,"line":150}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"153","location":{"end":{"column":10,"line":155},"start":{"column":15,"line":152}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"154","location":{"end":{"column":26,"line":153},"start":{"column":22,"line":153}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"155","location":{"end":{"column":8,"line":163},"start":{"column":44,"line":161}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"156","location":{"end":{"column":4,"line":173},"start":{"column":78,"line":167}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"157","location":{"end":{"column":6,"line":172},"start":{"column":66,"line":168}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"158","location":{"end":{"column":4,"line":179},"start":{"column":34,"line":175}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"161","location":{"end":{"column":73,"line":184},"start":{"column":31,"line":183}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"160","location":{"end":{"column":4,"line":196},"start":{"column":51,"line":181}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"159","location":{"end":{"column":6,"line":178},"start":{"column":74,"line":176}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"162","location":{"end":{"column":73,"line":184},"start":{"column":7,"line":184}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"163","location":{"end":{"column":73,"line":184},"start":{"column":7,"line":184}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"165","location":{"end":{"column":23,"line":184},"start":{"column":7,"line":184}},"mutatorName":"BooleanLiteral","replacement":"skipThreeDQuery","status":"Survived"},{"id":"164","location":{"end":{"column":73,"line":184},"start":{"column":7,"line":184}},"mutatorName":"LogicalOperator","replacement":"!skipThreeDQuery && requestType !== ControlFrame.THREEDQUERY_EVENT","status":"Survived"},{"id":"166","location":{"end":{"column":73,"line":184},"start":{"column":27,"line":184}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"167","location":{"end":{"column":73,"line":184},"start":{"column":27,"line":184}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"168","location":{"end":{"column":73,"line":184},"start":{"column":27,"line":184}},"mutatorName":"EqualityOperator","replacement":"requestType === ControlFrame.THREEDQUERY_EVENT","status":"Survived"},{"id":"169","location":{"end":{"column":61,"line":185},"start":{"column":26,"line":185}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"170","location":{"end":{"column":27,"line":188},"start":{"column":9,"line":188}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"171","location":{"end":{"column":27,"line":188},"start":{"column":9,"line":188}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"172","location":{"end":{"column":27,"line":188},"start":{"column":9,"line":188}},"mutatorName":"EqualityOperator","replacement":"threeDIndex !== -1","status":"Survived"},{"id":"173","location":{"end":{"column":27,"line":188},"start":{"column":25,"line":188}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"174","location":{"end":{"column":6,"line":192},"start":{"column":29,"line":188}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"175","location":{"end":{"column":39,"line":189},"start":{"column":37,"line":189}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"176","location":{"end":{"column":72,"line":194},"start":{"column":57,"line":194}},"mutatorName":"ArithmeticOperator","replacement":"threeDIndex - 1","status":"Survived"},{"id":"178","location":{"end":{"column":4,"line":202},"start":{"column":35,"line":198}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"177","location":{"end":{"column":70,"line":195},"start":{"column":55,"line":195}},"mutatorName":"ArithmeticOperator","replacement":"threeDIndex - 1","status":"Survived"},{"id":"179","location":{"end":{"column":6,"line":201},"start":{"column":84,"line":199}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"182","location":{"end":{"column":4,"line":246},"start":{"column":36,"line":210}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"180","location":{"end":{"column":4,"line":208},"start":{"column":46,"line":204}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"181","location":{"end":{"column":6,"line":207},"start":{"column":106,"line":205}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"183","location":{"end":{"column":71,"line":214},"start":{"column":13,"line":214}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"184","location":{"end":{"column":71,"line":214},"start":{"column":55,"line":214}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"186","location":{"end":{"column":71,"line":214},"start":{"column":55,"line":214}},"mutatorName":"LogicalOperator","replacement":"event.data && {}","status":"Survived"},{"id":"185","location":{"end":{"column":71,"line":214},"start":{"column":55,"line":214}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"187","location":{"end":{"column":10,"line":243},"start":{"column":42,"line":215}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"189","location":{"end":{"column":39,"line":217},"start":{"column":15,"line":217}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"188","location":{"end":{"column":38,"line":216},"start":{"column":34,"line":216}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"190","location":{"end":{"column":39,"line":217},"start":{"column":15,"line":217}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"191","location":{"end":{"column":39,"line":217},"start":{"column":15,"line":217}},"mutatorName":"BooleanLiteral","replacement":"this._isDataValid(data)","status":"Survived"},{"id":"192","location":{"end":{"column":12,"line":222},"start":{"column":41,"line":217}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"193","location":{"end":{"column":101,"line":218},"start":{"column":38,"line":218}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"194","location":{"end":{"column":107,"line":218},"start":{"column":103,"line":218}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"195","location":{"end":{"column":110,"line":219},"start":{"column":38,"line":219}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"196","location":{"end":{"column":116,"line":219},"start":{"column":112,"line":219}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"197","location":{"end":{"column":36,"line":230},"start":{"column":23,"line":225}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"198","location":{"end":{"column":39,"line":227},"start":{"column":17,"line":227}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"199","location":{"end":{"column":82,"line":228},"start":{"column":23,"line":228}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"201","location":{"end":{"column":16,"line":240},"start":{"column":23,"line":233}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"200","location":{"end":{"column":56,"line":232},"start":{"column":17,"line":232}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"202","location":{"end":{"column":66,"line":235},"start":{"column":17,"line":235}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"203","location":{"end":{"column":59,"line":236},"start":{"column":23,"line":236}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"204","location":{"end":{"column":76,"line":237},"start":{"column":30,"line":237}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"205","location":{"end":{"column":85,"line":245},"start":{"column":18,"line":245}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"206","location":{"end":{"column":4,"line":260},"start":{"column":52,"line":248}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"207","location":{"end":{"column":52,"line":250},"start":{"column":47,"line":250}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"209","location":{"end":{"column":74,"line":264},"start":{"column":66,"line":264}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"208","location":{"end":{"column":4,"line":284},"start":{"column":95,"line":262}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"210","location":{"end":{"column":74,"line":267},"start":{"column":30,"line":267}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"211","location":{"end":{"column":8,"line":277},"start":{"column":7,"line":269}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"212","location":{"end":{"column":10,"line":276},"start":{"column":15,"line":271}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"214","location":{"end":{"column":11,"line":278},"start":{"column":7,"line":278}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"213","location":{"end":{"column":29,"line":274},"start":{"column":22,"line":274}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"215","location":{"end":{"column":102,"line":280},"start":{"column":30,"line":280}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"216","location":{"end":{"column":108,"line":280},"start":{"column":104,"line":280}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"217","location":{"end":{"column":4,"line":290},"start":{"column":49,"line":286}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"218","location":{"end":{"column":4,"line":313},"start":{"column":54,"line":292}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"219","location":{"end":{"column":8,"line":304},"start":{"column":19,"line":295}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"220","location":{"end":{"column":12,"line":299},"start":{"column":11,"line":297}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"221","location":{"end":{"column":15,"line":300},"start":{"column":11,"line":300}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"222","location":{"end":{"column":8,"line":309},"start":{"column":30,"line":305}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"223","location":{"end":{"column":97,"line":306},"start":{"column":34,"line":306}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"225","location":{"end":{"column":8,"line":312},"start":{"column":22,"line":310}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"224","location":{"end":{"column":103,"line":306},"start":{"column":99,"line":306}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"226","location":{"end":{"column":4,"line":324},"start":{"column":40,"line":315}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"227","location":{"end":{"column":25,"line":317},"start":{"column":23,"line":317}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"228","location":{"end":{"column":56,"line":318},"start":{"column":9,"line":318}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"229","location":{"end":{"column":56,"line":318},"start":{"column":9,"line":318}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"230","location":{"end":{"column":56,"line":318},"start":{"column":9,"line":318}},"mutatorName":"LogicalOperator","replacement":"panFromJwt && this._formFields.cardNumber.value","status":"Survived"},{"id":"231","location":{"end":{"column":6,"line":320},"start":{"column":58,"line":318}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"232","location":{"end":{"column":4,"line":347},"start":{"column":76,"line":326}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"233","location":{"end":{"column":8,"line":339},"start":{"column":33,"line":327}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"234","location":{"end":{"column":10,"line":338},"start":{"column":31,"line":329}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"235","location":{"end":{"column":30,"line":330},"start":{"column":15,"line":330}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"236","location":{"end":{"column":30,"line":330},"start":{"column":15,"line":330}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"239","location":{"end":{"column":12,"line":337},"start":{"column":18,"line":334}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"238","location":{"end":{"column":12,"line":332},"start":{"column":32,"line":330}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"237","location":{"end":{"column":30,"line":330},"start":{"column":15,"line":330}},"mutatorName":"BooleanLiteral","replacement":"cybertonicaTid","status":"Survived"},{"id":"240","location":{"end":{"column":44,"line":341},"start":{"column":15,"line":341}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"242","location":{"end":{"column":4,"line":360},"start":{"column":33,"line":349}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"241","location":{"end":{"column":109,"line":344},"start":{"column":17,"line":343}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"243","location":{"end":{"column":6,"line":352},"start":{"column":28,"line":350}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"244","location":{"end":{"column":6,"line":355},"start":{"column":28,"line":353}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"245","location":{"end":{"column":6,"line":358},"start":{"column":28,"line":356}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"246","location":{"end":{"column":4,"line":364},"start":{"column":60,"line":362}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"247","location":{"end":{"column":4,"line":378},"start":{"column":58,"line":366}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"248","location":{"end":{"column":15,"line":370},"start":{"column":7,"line":368}},"mutatorName":"ConditionalExpression","replacement":"case MessageBus.EVENTS.CHANGE_CARD_NUMBER:","status":"Survived"},{"id":"249","location":{"end":{"column":15,"line":373},"start":{"column":7,"line":371}},"mutatorName":"ConditionalExpression","replacement":"case MessageBus.EVENTS.CHANGE_EXPIRATION_DATE:","status":"Survived"},{"id":"250","location":{"end":{"column":15,"line":376},"start":{"column":7,"line":374}},"mutatorName":"ConditionalExpression","replacement":"case MessageBus.EVENTS.CHANGE_SECURITY_CODE:","status":"Survived"},{"id":"251","location":{"end":{"column":4,"line":383},"start":{"column":36,"line":380}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"252","location":{"end":{"column":98,"line":382},"start":{"column":96,"line":382}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"253","location":{"end":{"column":4,"line":387},"start":{"column":29,"line":385}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"255","location":{"end":{"column":70,"line":386},"start":{"column":12,"line":386}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"254","location":{"end":{"column":70,"line":386},"start":{"column":12,"line":386}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"256","location":{"end":{"column":70,"line":386},"start":{"column":12,"line":386}},"mutatorName":"LogicalOperator","replacement":"(this._card.pan || this._getPanFromJwt()) && this._slicedPan","status":"Survived"},{"id":"257","location":{"end":{"column":51,"line":386},"start":{"column":12,"line":386}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"258","location":{"end":{"column":51,"line":386},"start":{"column":12,"line":386}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"259","location":{"end":{"column":51,"line":386},"start":{"column":12,"line":386}},"mutatorName":"LogicalOperator","replacement":"this._card.pan && this._getPanFromJwt()","status":"Survived"},{"id":"260","location":{"end":{"column":4,"line":391},"start":{"column":51,"line":389}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"261","location":{"end":{"column":4,"line":395},"start":{"column":44,"line":393}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"263","location":{"end":{"column":4,"line":405},"start":{"column":44,"line":401}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"262","location":{"end":{"column":4,"line":399},"start":{"column":53,"line":397}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"264","location":{"end":{"column":4,"line":410},"start":{"column":33,"line":407}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"265","location":{"end":{"column":4,"line":414},"start":{"column":60,"line":412}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"266","location":{"end":{"column":4,"line":426},"start":{"column":51,"line":416}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"268","location":{"end":{"column":26,"line":419},"start":{"column":9,"line":419}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"267","location":{"end":{"column":26,"line":419},"start":{"column":9,"line":419}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"269","location":{"end":{"column":6,"line":425},"start":{"column":28,"line":419}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"270","location":{"end":{"column":70,"line":424},"start":{"column":22,"line":424}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"272","location":{"end":{"column":6,"line":449},"start":{"column":57,"line":429}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"271","location":{"end":{"column":4,"line":450},"start":{"column":56,"line":428}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"273","location":{"end":{"column":34,"line":430},"start":{"column":30,"line":430}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"274","location":{"end":{"column":40,"line":432},"start":{"column":11,"line":432}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"275","location":{"end":{"column":40,"line":432},"start":{"column":11,"line":432}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"276","location":{"end":{"column":8,"line":448},"start":{"column":42,"line":432}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"278","location":{"end":{"column":12,"line":445},"start":{"column":11,"line":439}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"277","location":{"end":{"column":10,"line":436},"start":{"column":34,"line":433}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"279","location":{"end":{"column":14,"line":444},"start":{"column":19,"line":441}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"280","location":{"end":{"column":30,"line":442},"start":{"column":26,"line":442}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"281","location":{"end":{"column":15,"line":446},"start":{"column":11,"line":446}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"}],"source":"import JwtDecode from 'jwt-decode';\r\nimport { StCodec } from '../../core/services/st-codec/StCodec.class';\r\nimport { FormFieldsDetails } from '../../core/models/constants/FormFieldsDetails';\r\nimport { FormFieldsValidity } from '../../core/models/constants/FormFieldsValidity';\r\nimport { FormState } from '../../core/models/constants/FormState';\r\nimport { ICard } from '../../core/models/ICard';\r\nimport { IDecodedJwt } from '../../core/models/IDecodedJwt';\r\nimport { IFormFieldsDetails } from '../../core/models/IFormFieldsDetails';\r\nimport { IFormFieldState } from '../../core/models/IFormFieldState';\r\nimport { IFormFieldsValidity } from '../../core/models/IFormFieldsValidity';\r\nimport { IMerchantData } from '../../core/models/IMerchantData';\r\nimport { IMessageBusEvent } from '../../core/models/IMessageBusEvent';\r\nimport { IResponseData } from '../../core/models/IResponseData';\r\nimport { ISubmitData } from '../../core/models/ISubmitData';\r\nimport { PAYMENT_SUCCESS, PAYMENT_ERROR } from '../../core/models/constants/Translations';\r\nimport { MessageBus } from '../../core/shared/message-bus/MessageBus';\r\nimport { Payment } from '../../core/shared/payment/Payment';\r\nimport { Validation } from '../../core/shared/validation/Validation';\r\nimport { iinLookup } from '@trustpayments/ts-iin-lookup';\r\nimport { BrowserLocalStorage } from '../../../shared/services/storage/BrowserLocalStorage';\r\nimport { Container, Service } from 'typedi';\r\nimport { InterFrameCommunicator } from '../../../shared/services/message-bus/InterFrameCommunicator';\r\nimport { NotificationService } from '../../../client/notification/NotificationService';\r\nimport { Cybertonica } from '../../core/integrations/cybertonica/Cybertonica';\r\nimport { IConfig } from '../../../shared/model/config/IConfig';\r\nimport { CardinalCommerce } from '../../core/integrations/cardinal-commerce/CardinalCommerce';\r\nimport { ICardinalCommerceTokens } from '../../core/integrations/cardinal-commerce/ICardinalCommerceTokens';\r\nimport { defer, EMPTY, from, iif, Observable, of } from 'rxjs';\r\nimport { catchError, filter, map, mapTo, switchMap, tap } from 'rxjs/operators';\r\nimport { IAuthorizePaymentResponse } from '../../core/models/IAuthorizePaymentResponse';\r\nimport { StJwt } from '../../core/shared/stjwt/StJwt';\r\nimport { Translator } from '../../core/shared/translator/Translator';\r\nimport { ofType } from '../../../shared/services/message-bus/operators/ofType';\r\nimport { IOnCardinalValidated } from '../../core/models/IOnCardinalValidated';\r\nimport { IThreeDInitResponse } from '../../core/models/IThreeDInitResponse';\r\nimport { Store } from '../../core/store/Store';\r\nimport { ConfigProvider } from '../../../shared/services/config-provider/ConfigProvider';\r\nimport { UPDATE_CONFIG } from '../../core/store/reducers/config/ConfigActions';\r\nimport { PUBLIC_EVENTS } from '../../core/models/constants/EventTypes';\r\nimport { ConfigService } from '../../../shared/services/config-service/ConfigService';\r\nimport { Frame } from '../../core/shared/frame/Frame';\r\nimport { Styler } from '../../core/shared/styler/Styler';\r\nimport { CONFIG } from '../../../shared/dependency-injection/InjectionTokens';\r\n\r\n@Service()\r\nexport class ControlFrame {\r\n  private static ALLOWED_PARAMS: string[] = ['jwt', 'gatewayUrl'];\r\n  private static NON_CVV_CARDS: string[] = ['PIBA'];\r\n  private static THREEDQUERY_EVENT: string = 'THREEDQUERY';\r\n\r\n  private static _setFormFieldValidity(field: IFormFieldState, data: IFormFieldState): void {\r\n    field.validity = data.validity;\r\n  }\r\n\r\n  private static _setFormFieldValue(field: IFormFieldState, data: IFormFieldState): void {\r\n    field.value = data.value;\r\n  }\r\n\r\n  private static _resetJwt(): void {\r\n    StCodec.jwt = StCodec.originalJwt;\r\n  }\r\n\r\n  private static _updateJwt(jwt: string): void {\r\n    StCodec.jwt = jwt;\r\n    StCodec.originalJwt = jwt;\r\n  }\r\n\r\n  private _card: ICard = {\r\n    pan: '',\r\n    expirydate: '',\r\n    securitycode: ''\r\n  };\r\n  private _isPaymentReady: boolean = false;\r\n  private _formFields: IFormFieldsDetails = FormFieldsDetails;\r\n  private _formFieldsValidity: IFormFieldsValidity = FormFieldsValidity;\r\n  private _merchantFormData: IMerchantData;\r\n  private _payment: Payment;\r\n  private _postThreeDRequestTypes: string[];\r\n  private _preThreeDRequestTypes: string[];\r\n  private _validation: Validation;\r\n  private _slicedPan: string;\r\n\r\n  constructor(\r\n    private _localStorage: BrowserLocalStorage,\r\n    private _communicator: InterFrameCommunicator,\r\n    private _configProvider: ConfigProvider,\r\n    private _notification: NotificationService,\r\n    private _cybertonica: Cybertonica,\r\n    private _cardinalCommerce: CardinalCommerce,\r\n    private _store: Store,\r\n    private _configService: ConfigService,\r\n    private _messageBus: MessageBus,\r\n    private _frame: Frame\r\n  ) {\r\n    this._communicator\r\n      .whenReceive(MessageBus.EVENTS_PUBLIC.INIT_CONTROL_FRAME)\r\n      .thenRespond((event: IMessageBusEvent<string>) => {\r\n        const config: IConfig = JSON.parse(event.data);\r\n        this._messageBus.publish({\r\n          type: PUBLIC_EVENTS.CONFIG_CHANGED,\r\n          data: config\r\n        });\r\n\r\n        this.init(config);\r\n\r\n        return of(config);\r\n      });\r\n\r\n    this._messageBus\r\n      .pipe(\r\n        ofType(MessageBus.EVENTS_PUBLIC.JSINIT_RESPONSE),\r\n        filter((event: IMessageBusEvent<IThreeDInitResponse>) => Boolean(event.data.maskedpan)),\r\n        map((event: IMessageBusEvent<IThreeDInitResponse>) => event.data.maskedpan)\r\n      )\r\n      .subscribe((maskedpan: string) => {\r\n        this._slicedPan = maskedpan.slice(0, 6);\r\n        this._localStorage.setItem('app.maskedpan', this._slicedPan);\r\n\r\n        this._messageBus.publish({\r\n          type: MessageBus.EVENTS_PUBLIC.BIN_PROCESS,\r\n          data: this._slicedPan\r\n        });\r\n      });\r\n\r\n    this._messageBus.pipe(ofType(PUBLIC_EVENTS.CONFIG_CHANGED)).subscribe((event: IMessageBusEvent<IConfig>) => {\r\n      if (event.data) {\r\n        this._store.dispatch({ type: UPDATE_CONFIG, payload: event.data });\r\n        Container.set(CONFIG, event.data);\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  protected init(config: IConfig): void {\r\n    const styler: Styler = new Styler(this._frame.getAllowedStyles(), this._frame.parseUrl().styles);\r\n    this._setInstances();\r\n    this._setFormFieldsValidities();\r\n    this._formFieldChangeEvent(MessageBus.EVENTS.CHANGE_CARD_NUMBER, this._formFields.cardNumber);\r\n    this._formFieldChangeEvent(MessageBus.EVENTS.CHANGE_EXPIRATION_DATE, this._formFields.expirationDate);\r\n    this._formFieldChangeEvent(MessageBus.EVENTS.CHANGE_SECURITY_CODE, this._formFields.securityCode);\r\n    this._submitFormEvent();\r\n    this._updateMerchantFieldsEvent();\r\n    this._resetJwtEvent();\r\n    this._updateJwtEvent();\r\n    this._initCybertonica(config);\r\n\r\n    if (!config.deferInit) {\r\n      this._initCardinalCommerce(config);\r\n    } else if (config.components.startOnLoad) {\r\n      this._messageBus.publish({\r\n        type: MessageBus.EVENTS_PUBLIC.SUBMIT_FORM,\r\n        data: {\r\n          dataInJwt: true,\r\n          requestTypes: config.components.requestTypes\r\n        }\r\n      });\r\n    }\r\n\r\n    this._messageBus.subscribe(\r\n      MessageBus.EVENTS_PUBLIC.CARDINAL_COMMERCE_TOKENS_ACQUIRED,\r\n      (tokens: ICardinalCommerceTokens) => {\r\n        this._payment.setCardinalCommerceCacheToken(tokens.cacheToken);\r\n      }\r\n    );\r\n  }\r\n\r\n  private _formFieldChangeEvent(event: string, field: IFormFieldState): void {\r\n    this._messageBus.subscribe(event, (data: IFormFieldState) => {\r\n      this._formFieldChange(event, data.value);\r\n      ControlFrame._setFormFieldValidity(field, data);\r\n      ControlFrame._setFormFieldValue(field, data);\r\n    });\r\n  }\r\n\r\n  private _resetJwtEvent(): void {\r\n    this._messageBus.subscribe(MessageBus.EVENTS_PUBLIC.RESET_JWT, () => {\r\n      ControlFrame._resetJwt();\r\n    });\r\n  }\r\n\r\n  private _setRequestTypes(config: IConfig): void {\r\n    const skipThreeDQuery = this._isCardBypassed(this._getPan());\r\n    const filterThreeDQuery = (requestType: string) =>\r\n      !skipThreeDQuery || requestType !== ControlFrame.THREEDQUERY_EVENT;\r\n    const requestTypes = [...config.components.requestTypes].filter(filterThreeDQuery);\r\n    const threeDIndex = requestTypes.indexOf(ControlFrame.THREEDQUERY_EVENT);\r\n\r\n    if (threeDIndex === -1) {\r\n      this._preThreeDRequestTypes = [];\r\n      this._postThreeDRequestTypes = requestTypes;\r\n      return;\r\n    }\r\n\r\n    this._preThreeDRequestTypes = requestTypes.slice(0, threeDIndex + 1);\r\n    this._postThreeDRequestTypes = requestTypes.slice(threeDIndex + 1, requestTypes.length);\r\n  }\r\n\r\n  private _updateJwtEvent(): void {\r\n    this._messageBus.subscribe(MessageBus.EVENTS_PUBLIC.UPDATE_JWT, (data: any) => {\r\n      ControlFrame._updateJwt(data.newJwt);\r\n    });\r\n  }\r\n\r\n  private _updateMerchantFieldsEvent(): void {\r\n    this._messageBus.subscribe(MessageBus.EVENTS_PUBLIC.UPDATE_MERCHANT_FIELDS, (data: IMerchantData) => {\r\n      this._updateMerchantFields(data);\r\n    });\r\n  }\r\n\r\n  private _submitFormEvent(): void {\r\n    this._messageBus\r\n      .pipe(\r\n        ofType(MessageBus.EVENTS_PUBLIC.SUBMIT_FORM),\r\n        map((event: IMessageBusEvent<ISubmitData>) => event.data || {}),\r\n        switchMap((data: ISubmitData) => {\r\n          this._isPaymentReady = true;\r\n          if (!this._isDataValid(data)) {\r\n            this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK }, true);\r\n            this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.BLOCK_FORM, data: FormState.AVAILABLE }, true);\r\n            this._validateFormFields();\r\n            return EMPTY;\r\n          }\r\n\r\n          return this._configProvider.getConfig$().pipe(\r\n            switchMap(config =>\r\n              iif(\r\n                () => config.deferInit,\r\n                defer(() => this._cardinalCommerce.init(config).pipe(mapTo(data))),\r\n                of(data)\r\n              ).pipe(mapTo(config))\r\n            ),\r\n            tap(config => this._setRequestTypes(config)),\r\n            switchMap(() =>\r\n              iif(\r\n                () => Boolean(this._preThreeDRequestTypes.length),\r\n                defer(() => this._callThreeDQueryRequest()).pipe(\r\n                  catchError(errorData => this._onPaymentFailure(errorData))\r\n                ),\r\n                of(data)\r\n              )\r\n            )\r\n          );\r\n        })\r\n      )\r\n      .subscribe(authorizationData => this._processPayment(authorizationData as any));\r\n  }\r\n\r\n  private _isDataValid(data: ISubmitData): boolean {\r\n    const isPanPiba: boolean = this._isCardWithoutCVV();\r\n    const dataInJwt = data ? data.dataInJwt : false;\r\n    const { validity } = this._validation.formValidation(\r\n      dataInJwt,\r\n      data.fieldsToSubmit,\r\n      this._formFields,\r\n      isPanPiba,\r\n      this._isPaymentReady\r\n    );\r\n\r\n    return validity;\r\n  }\r\n\r\n  private _onPaymentFailure(errorData: ISubmitData | IOnCardinalValidated): Observable<never> {\r\n    const { ErrorNumber, ErrorDescription } = errorData;\r\n    const translator = new Translator(this._localStorage.getItem('locale'));\r\n    const translatedErrorMessage = translator.translate(PAYMENT_ERROR);\r\n\r\n    this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.RESET_JWT });\r\n    this._messageBus.publish(\r\n      {\r\n        type: MessageBus.EVENTS_PUBLIC.TRANSACTION_COMPLETE,\r\n        data: {\r\n          acquirerresponsecode: ErrorNumber ? ErrorNumber.toString() : ErrorNumber,\r\n          acquirerresponsemessage: ErrorDescription,\r\n          errorcode: '50003',\r\n          errormessage: translatedErrorMessage\r\n        }\r\n      },\r\n      true\r\n    );\r\n    this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.BLOCK_FORM, data: FormState.AVAILABLE }, true);\r\n    this._notification.error(translatedErrorMessage);\r\n\r\n    return EMPTY;\r\n  }\r\n\r\n  private _isCardBypassed(pan: string): boolean {\r\n    const bypassCards = this._configProvider.getConfig().bypassCards as string[];\r\n\r\n    return bypassCards.includes(iinLookup.lookup(pan).type);\r\n  }\r\n\r\n  private _processPayment(data: IResponseData): void {\r\n    this._payment\r\n      .processPayment(this._postThreeDRequestTypes, this._card, this._merchantFormData, data)\r\n      .then(() => {\r\n        this._messageBus.publish(\r\n          {\r\n            type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_SUCCESS_CALLBACK\r\n          },\r\n          true\r\n        );\r\n        this._notification.success(PAYMENT_SUCCESS);\r\n        this._validation.blockForm(FormState.COMPLETE);\r\n      })\r\n      .catch((error: any) => {\r\n        this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK }, true);\r\n        this._notification.error(PAYMENT_ERROR);\r\n        this._validation.blockForm(FormState.AVAILABLE);\r\n      })\r\n      .finally(() => {\r\n        ControlFrame._resetJwt();\r\n      });\r\n  }\r\n\r\n  private _isCardWithoutCVV(): boolean {\r\n    const panFromJwt: string = this._getPanFromJwt();\r\n    let pan: string = '';\r\n    if (panFromJwt || this._formFields.cardNumber.value) {\r\n      pan = panFromJwt ? panFromJwt : this._formFields.cardNumber.value;\r\n    }\r\n\r\n    const cardType: string = iinLookup.lookup(pan).type;\r\n    return ControlFrame.NON_CVV_CARDS.includes(cardType);\r\n  }\r\n\r\n  private _callThreeDQueryRequest(): Observable<IAuthorizePaymentResponse> {\r\n    const applyCybertonicaTid = (merchantFormData: IMerchantData) =>\r\n      from(this._cybertonica.getTransactionId()).pipe(\r\n        map(cybertonicaTid => {\r\n          if (!cybertonicaTid) {\r\n            return merchantFormData;\r\n          }\r\n\r\n          return {\r\n            ...merchantFormData,\r\n            fraudcontroltransactionid: cybertonicaTid\r\n          };\r\n        })\r\n      );\r\n\r\n    return of({ ...this._merchantFormData }).pipe(\r\n      switchMap(applyCybertonicaTid),\r\n      switchMap(merchantFormData =>\r\n        this._cardinalCommerce.performThreeDQuery(this._preThreeDRequestTypes, this._card, merchantFormData)\r\n      )\r\n    );\r\n  }\r\n\r\n  private _validateFormFields() {\r\n    this._publishBlurEvent({\r\n      type: MessageBus.EVENTS.BLUR_CARD_NUMBER\r\n    });\r\n    this._publishBlurEvent({\r\n      type: MessageBus.EVENTS.BLUR_EXPIRATION_DATE\r\n    });\r\n    this._publishBlurEvent({\r\n      type: MessageBus.EVENTS.BLUR_SECURITY_CODE\r\n    });\r\n    this._validation.setFormValidity(this._formFieldsValidity);\r\n  }\r\n\r\n  private _publishBlurEvent(event: IMessageBusEvent): void {\r\n    this._messageBus.publish(event);\r\n  }\r\n\r\n  private _formFieldChange(event: string, value: string) {\r\n    switch (event) {\r\n      case MessageBus.EVENTS.CHANGE_CARD_NUMBER:\r\n        this._setCardPan(value);\r\n        break;\r\n      case MessageBus.EVENTS.CHANGE_EXPIRATION_DATE:\r\n        this._setCardExpiryDate(value);\r\n        break;\r\n      case MessageBus.EVENTS.CHANGE_SECURITY_CODE:\r\n        this._setCardSecurityCode(value);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _getPanFromJwt(): string {\r\n    const { jwt } = this._frame.parseUrl(ControlFrame.ALLOWED_PARAMS);\r\n    return JwtDecode<IDecodedJwt>(jwt).payload.pan ? JwtDecode<IDecodedJwt>(jwt).payload.pan : '';\r\n  }\r\n\r\n  private _getPan(): string {\r\n    return this._card.pan || this._getPanFromJwt() || this._slicedPan;\r\n  }\r\n\r\n  private _setCardExpiryDate(value: string): void {\r\n    this._card.expirydate = value;\r\n  }\r\n\r\n  private _setCardPan(value: string): void {\r\n    this._card.pan = value;\r\n  }\r\n\r\n  private _setCardSecurityCode(value: string): void {\r\n    this._card.securitycode = value;\r\n  }\r\n\r\n  private _setFormFieldsValidities(): void {\r\n    this._formFieldsValidity.cardNumber.state = this._formFields.cardNumber.validity;\r\n    this._formFieldsValidity.expirationDate.state = this._formFields.expirationDate.validity;\r\n    this._formFieldsValidity.securityCode.state = this._formFields.securityCode.validity;\r\n  }\r\n\r\n  private _setInstances(): void {\r\n    this._payment = new Payment();\r\n    this._validation = new Validation();\r\n  }\r\n\r\n  private _updateMerchantFields(data: IMerchantData): void {\r\n    this._merchantFormData = data;\r\n  }\r\n\r\n  private _initCybertonica(config: IConfig): void {\r\n    const { cybertonicaApiKey } = config;\r\n\r\n    if (cybertonicaApiKey) {\r\n      this._cybertonica.init(cybertonicaApiKey);\r\n\r\n      this._communicator\r\n        .whenReceive(MessageBus.EVENTS_PUBLIC.GET_CYBERTONICA_TID)\r\n        .thenRespond(() => from(this._cybertonica.getTransactionId()));\r\n    }\r\n  }\r\n\r\n  private _initCardinalCommerce(config: IConfig): void {\r\n    this._cardinalCommerce.init(config).subscribe(() => {\r\n      this._isPaymentReady = true;\r\n\r\n      if (config.components.startOnLoad) {\r\n        this._messageBus.publish({\r\n          type: MessageBus.EVENTS_PUBLIC.BIN_PROCESS,\r\n          data: new StJwt(config.jwt).payload.pan as string\r\n        });\r\n\r\n        this._messageBus.publish(\r\n          {\r\n            type: MessageBus.EVENTS_PUBLIC.SUBMIT_FORM,\r\n            data: {\r\n              dataInJwt: true,\r\n              requestTypes: config.components.requestTypes\r\n            }\r\n          },\r\n          true\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\components\\control-frame\\control-frame.ts":{"language":"typescript","mutants":[{"id":"282","location":{"end":{"column":2,"line":10},"start":{"column":8,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import './control-frame.scss';\nimport { ControlFrame } from './ControlFrame';\nimport '../../core/shared/override-domain/OverrideDomain';\nimport { ComponentBootstrap } from '../../core/component-bootstrap/ComponentBootstrap';\nimport { Container } from 'typedi';\nimport { CONTROL_FRAME_IFRAME } from '../../core/models/constants/Selectors';\n\n(() => {\n  Container.get(ComponentBootstrap).run(CONTROL_FRAME_IFRAME, ControlFrame);\n})();\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\components\\expiration-date\\ExpirationDate.ts":{"language":"typescript","mutants":[{"id":"283","location":{"end":{"column":71,"line":22},"start":{"column":33,"line":21}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"284","location":{"end":{"column":57,"line":23},"start":{"column":47,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"285","location":{"end":{"column":63,"line":24},"start":{"column":43,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"286","location":{"end":{"column":74,"line":26},"start":{"column":42,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"287","location":{"end":{"column":6,"line":50},"start":{"column":70,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"288","location":{"end":{"column":57,"line":42},"start":{"column":11,"line":42}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"289","location":{"end":{"column":57,"line":42},"start":{"column":11,"line":42}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"290","location":{"end":{"column":8,"line":49},"start":{"column":59,"line":42}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"292","location":{"end":{"column":37,"line":45},"start":{"column":11,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"291","location":{"end":{"column":31,"line":44},"start":{"column":11,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"293","location":{"end":{"column":65,"line":46},"start":{"column":11,"line":46}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"294","location":{"end":{"column":32,"line":46},"start":{"column":12,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"295","location":{"end":{"column":64,"line":46},"start":{"column":34,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"296","location":{"end":{"column":85,"line":47},"start":{"column":11,"line":47}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"297","location":{"end":{"column":36,"line":47},"start":{"column":12,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"298","location":{"end":{"column":72,"line":47},"start":{"column":38,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"299","location":{"end":{"column":84,"line":47},"start":{"column":74,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"301","location":{"end":{"column":4,"line":61},"start":{"column":31,"line":57}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"300","location":{"end":{"column":4,"line":55},"start":{"column":29,"line":53}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"302","location":{"end":{"column":6,"line":60},"start":{"column":101,"line":58}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"303","location":{"end":{"column":36,"line":59},"start":{"column":7,"line":59}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"305","location":{"end":{"column":36,"line":59},"start":{"column":7,"line":59}},"mutatorName":"EqualityOperator","replacement":"state === FormState.AVAILABLE","status":"Survived"},{"id":"304","location":{"end":{"column":36,"line":59},"start":{"column":7,"line":59}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"306","location":{"end":{"column":4,"line":65},"start":{"column":34,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"307","location":{"end":{"column":4,"line":71},"start":{"column":22,"line":67}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"308","location":{"end":{"column":4,"line":76},"start":{"column":35,"line":73}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"309","location":{"end":{"column":4,"line":87},"start":{"column":35,"line":78}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"310","location":{"end":{"column":4,"line":95},"start":{"column":45,"line":89}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"311","location":{"end":{"column":4,"line":100},"start":{"column":46,"line":97}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"314","location":{"end":{"column":65,"line":115},"start":{"column":24,"line":115}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"312","location":{"end":{"column":4,"line":110},"start":{"column":44,"line":102}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"313","location":{"end":{"column":4,"line":124},"start":{"column":19,"line":112}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"317","location":{"end":{"column":86,"line":116},"start":{"column":24,"line":116}},"mutatorName":"LogicalOperator","replacement":"this._configProvider.getConfig().placeholders.expirydate && ''","status":"Survived"},{"id":"315","location":{"end":{"column":86,"line":116},"start":{"column":24,"line":116}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"316","location":{"end":{"column":86,"line":116},"start":{"column":24,"line":116}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"318","location":{"end":{"column":86,"line":116},"start":{"column":84,"line":116}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"319","location":{"end":{"column":4,"line":129},"start":{"column":24,"line":126}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"320","location":{"end":{"column":4,"line":134},"start":{"column":32,"line":131}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"321","location":{"end":{"column":78,"line":132},"start":{"column":72,"line":132}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"322","location":{"end":{"column":4,"line":139},"start":{"column":31,"line":136}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { FormState } from '../../core/models/constants/FormState';\r\nimport { IMessageBusEvent } from '../../core/models/IMessageBusEvent';\r\nimport { Formatter } from '../../core/shared/formatter/Formatter';\r\nimport { Input } from '../../core/shared/input/Input';\r\nimport { MessageBus } from '../../core/shared/message-bus/MessageBus';\r\nimport {\r\n  EXPIRATION_DATE_INPUT,\r\n  EXPIRATION_DATE_LABEL,\r\n  EXPIRATION_DATE_MESSAGE,\r\n  EXPIRATION_DATE_WRAPPER\r\n} from '../../core/models/constants/Selectors';\r\nimport { Service } from 'typedi';\r\nimport { ConfigProvider } from '../../../shared/services/config-provider/ConfigProvider';\r\nimport { IConfig } from '../../../shared/model/config/IConfig';\r\nimport { Styler } from '../../core/shared/styler/Styler';\r\nimport { Frame } from '../../core/shared/frame/Frame';\r\nimport { LABEL_EXPIRATION_DATE } from '../../core/models/constants/Translations';\r\n\r\n@Service()\r\nexport class ExpirationDate extends Input {\r\n  public static ifFieldExists = (): HTMLInputElement =>\r\n    document.getElementById(EXPIRATION_DATE_INPUT) as HTMLInputElement;\r\n  private static DISABLED_ATTRIBUTE: string = 'disabled';\r\n  private static DISABLED_CLASS: string = 'st-input--disabled';\r\n  private static EXPIRATION_DATE_LENGTH: number = 5;\r\n  private static INPUT_PATTERN: string = '^(0[1-9]|1[0-2])\\\\/([0-9]{2})$';\r\n\r\n  private _currentKeyCode: number;\r\n  private _inputSelectionEnd: number;\r\n  private _inputSelectionStart: number;\r\n\r\n  constructor(\r\n    private _configProvider: ConfigProvider,\r\n    private _formatter: Formatter,\r\n    private messageBus: MessageBus,\r\n    private frame: Frame\r\n  ) {\r\n    super(EXPIRATION_DATE_INPUT, EXPIRATION_DATE_MESSAGE, EXPIRATION_DATE_LABEL, EXPIRATION_DATE_WRAPPER);\r\n    this._init();\r\n    this._configProvider.getConfig$().subscribe((config: IConfig) => {\r\n      const styler: Styler = new Styler(this.getAllowedStyles(), this.frame.parseUrl().styles);\r\n      if (styler.isLinedUp(config.styles.expirationDate)) {\r\n        styler.lineUp(\r\n          'st-expiration-date',\r\n          'st-expiration-date-label',\r\n          ['st-expiration-date', 'st-expiration-date--lined-up'],\r\n          ['expiration-date__label', 'expiration-date__label--required', 'lined-up']\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  public getLabel(): string {\r\n    return LABEL_EXPIRATION_DATE;\r\n  }\r\n\r\n  public setDisableListener() {\r\n    this.messageBus.subscribe(MessageBus.EVENTS_PUBLIC.BLOCK_EXPIRATION_DATE, (state: FormState) => {\r\n      state !== FormState.AVAILABLE ? this._disableInputField() : this._enableInputField();\r\n    });\r\n  }\r\n\r\n  protected format(date: string) {\r\n    this.setValue(date);\r\n  }\r\n\r\n  protected onBlur() {\r\n    super.onBlur();\r\n    this._inputElement.value = this._formatter.date(this._inputElement.value, EXPIRATION_DATE_INPUT);\r\n    this._sendState();\r\n  }\r\n\r\n  protected onFocus(event: Event) {\r\n    super.onFocus(event);\r\n    this._inputElement.value = this._formatter.date(this._inputElement.value, EXPIRATION_DATE_INPUT);\r\n  }\r\n\r\n  protected onInput(event: Event) {\r\n    super.onInput(event);\r\n    this._inputElement.value = this.validation.limitLength(\r\n      this._inputElement.value,\r\n      ExpirationDate.EXPIRATION_DATE_LENGTH\r\n    );\r\n    this._inputElement.value = this._formatter.date(this._inputElement.value, EXPIRATION_DATE_INPUT);\r\n    this.validation.keepCursorsPosition(this._inputElement);\r\n    this._sendState();\r\n  }\r\n\r\n  protected onKeydown(event: KeyboardEvent) {\r\n    super.onKeydown(event);\r\n    this._currentKeyCode = event.keyCode;\r\n    this._inputSelectionStart = this._inputElement.selectionStart;\r\n    this._inputSelectionEnd = this._inputElement.selectionEnd;\r\n    return event;\r\n  }\r\n\r\n  protected onKeyPress(event: KeyboardEvent) {\r\n    super.onKeyPress(event);\r\n    this._inputElement.focus();\r\n  }\r\n\r\n  protected onPaste(event: ClipboardEvent) {\r\n    super.onPaste(event);\r\n    this._inputElement.value = this.validation.limitLength(\r\n      this._inputElement.value,\r\n      ExpirationDate.EXPIRATION_DATE_LENGTH\r\n    );\r\n    this._inputElement.value = this._formatter.date(this._inputElement.value, EXPIRATION_DATE_INPUT);\r\n    this._sendState();\r\n  }\r\n\r\n  private _init() {\r\n    super.setEventListener(MessageBus.EVENTS.BLUR_EXPIRATION_DATE);\r\n    super.setEventListener(MessageBus.EVENTS.FOCUS_EXPIRATION_DATE);\r\n    this.setAttributes({ pattern: ExpirationDate.INPUT_PATTERN });\r\n    this.placeholder = this._configProvider.getConfig().placeholders.expirydate || '';\r\n    this._inputElement.setAttribute(ExpirationDate.PLACEHOLDER_ATTRIBUTE, this.placeholder);\r\n    this.setDisableListener();\r\n    this.validation.backendValidation(\r\n      this._inputElement,\r\n      this._messageElement,\r\n      MessageBus.EVENTS.VALIDATE_EXPIRATION_DATE_FIELD\r\n    );\r\n  }\r\n\r\n  private _sendState() {\r\n    const messageBusEvent: IMessageBusEvent = this.setMessageBusEvent(MessageBus.EVENTS.CHANGE_EXPIRATION_DATE);\r\n    this.messageBus.publish(messageBusEvent);\r\n  }\r\n\r\n  private _disableInputField() {\r\n    this._inputElement.setAttribute(ExpirationDate.DISABLED_ATTRIBUTE, 'true');\r\n    this._inputElement.classList.add(ExpirationDate.DISABLED_CLASS);\r\n  }\r\n\r\n  private _enableInputField() {\r\n    this._inputElement.removeAttribute(ExpirationDate.DISABLED_ATTRIBUTE);\r\n    this._inputElement.classList.remove(ExpirationDate.DISABLED_CLASS);\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\components\\expiration-date\\expiration-date.ts":{"language":"typescript","mutants":[{"id":"323","location":{"end":{"column":2,"line":10},"start":{"column":8,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import './expiration-date.scss';\nimport { ExpirationDate } from './ExpirationDate';\nimport '../../core/shared/override-domain/OverrideDomain';\nimport { ComponentBootstrap } from '../../core/component-bootstrap/ComponentBootstrap';\nimport { Container } from 'typedi';\nimport { EXPIRATION_DATE_IFRAME } from '../../core/models/constants/Selectors';\n\n(() => {\n  Container.get(ComponentBootstrap).run(EXPIRATION_DATE_IFRAME, ExpirationDate);\n})();\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\components\\security-code\\SecurityCode.ts":{"language":"typescript","mutants":[{"id":"324","location":{"end":{"column":69,"line":34},"start":{"column":33,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"325","location":{"end":{"column":59,"line":35},"start":{"column":48,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"327","location":{"end":{"column":42,"line":37},"start":{"column":40,"line":37}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"326","location":{"end":{"column":50,"line":36},"start":{"column":44,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"329","location":{"end":{"column":63,"line":39},"start":{"column":43,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"328","location":{"end":{"column":57,"line":38},"start":{"column":47,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"330","location":{"end":{"column":53,"line":40},"start":{"column":43,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"331","location":{"end":{"column":66,"line":41},"start":{"column":54,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"332","location":{"end":{"column":67,"line":42},"start":{"column":55,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"333","location":{"end":{"column":6,"line":71},"start":{"column":70,"line":61}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"334","location":{"end":{"column":55,"line":63},"start":{"column":11,"line":63}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"335","location":{"end":{"column":55,"line":63},"start":{"column":11,"line":63}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"336","location":{"end":{"column":8,"line":70},"start":{"column":57,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"337","location":{"end":{"column":29,"line":65},"start":{"column":11,"line":65}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"339","location":{"end":{"column":61,"line":67},"start":{"column":11,"line":67}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"338","location":{"end":{"column":35,"line":66},"start":{"column":11,"line":66}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"340","location":{"end":{"column":30,"line":67},"start":{"column":12,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"341","location":{"end":{"column":60,"line":67},"start":{"column":32,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"342","location":{"end":{"column":81,"line":68},"start":{"column":11,"line":68}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"343","location":{"end":{"column":34,"line":68},"start":{"column":12,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"346","location":{"end":{"column":8,"line":81},"start":{"column":50,"line":74}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"345","location":{"end":{"column":80,"line":68},"start":{"column":70,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"344","location":{"end":{"column":68,"line":68},"start":{"column":36,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"347","location":{"end":{"column":10,"line":80},"start":{"column":33,"line":77}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"348","location":{"end":{"column":4,"line":105},"start":{"column":63,"line":85}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"349","location":{"end":{"column":42,"line":86},"start":{"column":9,"line":86}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"350","location":{"end":{"column":42,"line":86},"start":{"column":9,"line":86}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"351","location":{"end":{"column":42,"line":86},"start":{"column":9,"line":86}},"mutatorName":"BooleanLiteral","replacement":"this._configProvider.getConfig()","status":"Survived"},{"id":"352","location":{"end":{"column":6,"line":88},"start":{"column":44,"line":86}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"353","location":{"end":{"column":19,"line":87},"start":{"column":14,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"355","location":{"end":{"column":52,"line":92},"start":{"column":7,"line":90}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"354","location":{"end":{"column":52,"line":92},"start":{"column":7,"line":90}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"356","location":{"end":{"column":52,"line":92},"start":{"column":7,"line":90}},"mutatorName":"LogicalOperator","replacement":"securityCodeLength === -1 && this._configProvider.getConfig() || this._configProvider.getConfig().placeholders","status":"Survived"},{"id":"357","location":{"end":{"column":39,"line":91},"start":{"column":7,"line":90}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"358","location":{"end":{"column":39,"line":91},"start":{"column":7,"line":90}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"359","location":{"end":{"column":39,"line":91},"start":{"column":7,"line":90}},"mutatorName":"LogicalOperator","replacement":"securityCodeLength === -1 || this._configProvider.getConfig()","status":"Survived"},{"id":"360","location":{"end":{"column":32,"line":90},"start":{"column":7,"line":90}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"361","location":{"end":{"column":32,"line":90},"start":{"column":7,"line":90}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"362","location":{"end":{"column":32,"line":90},"start":{"column":7,"line":90}},"mutatorName":"EqualityOperator","replacement":"securityCodeLength !== -1","status":"Survived"},{"id":"363","location":{"end":{"column":32,"line":90},"start":{"column":30,"line":90}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"364","location":{"end":{"column":6,"line":97},"start":{"column":7,"line":93}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"365","location":{"end":{"column":16,"line":96},"start":{"column":11,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"367","location":{"end":{"column":102,"line":100},"start":{"column":7,"line":99}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"366","location":{"end":{"column":102,"line":100},"start":{"column":7,"line":99}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"368","location":{"end":{"column":102,"line":100},"start":{"column":7,"line":99}},"mutatorName":"LogicalOperator","replacement":"this._configProvider.getConfig().placeholders.securitycode || this._configProvider.getConfig().placeholders.securitycode === DefaultPlaceholders.securitycode","status":"Survived"},{"id":"369","location":{"end":{"column":102,"line":100},"start":{"column":7,"line":100}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"370","location":{"end":{"column":102,"line":100},"start":{"column":7,"line":100}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"371","location":{"end":{"column":102,"line":100},"start":{"column":7,"line":100}},"mutatorName":"EqualityOperator","replacement":"this._configProvider.getConfig().placeholders.securitycode !== DefaultPlaceholders.securitycode","status":"Survived"},{"id":"373","location":{"end":{"column":38,"line":102},"start":{"column":14,"line":102}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"372","location":{"end":{"column":6,"line":103},"start":{"column":7,"line":101}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"374","location":{"end":{"column":38,"line":102},"start":{"column":14,"line":102}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"376","location":{"end":{"column":47,"line":102},"start":{"column":41,"line":102}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"375","location":{"end":{"column":38,"line":102},"start":{"column":14,"line":102}},"mutatorName":"EqualityOperator","replacement":"securityCodeLength !== 4","status":"Survived"},{"id":"377","location":{"end":{"column":4,"line":140},"start":{"column":54,"line":107}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"379","location":{"end":{"column":37,"line":111},"start":{"column":11,"line":111}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"380","location":{"end":{"column":73,"line":115},"start":{"column":11,"line":115}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"378","location":{"end":{"column":111,"line":108},"start":{"column":91,"line":108}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"382","location":{"end":{"column":61,"line":122},"start":{"column":14,"line":122}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"381","location":{"end":{"column":57,"line":118},"start":{"column":11,"line":118}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"383","location":{"end":{"column":61,"line":122},"start":{"column":35,"line":122}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"384","location":{"end":{"column":61,"line":122},"start":{"column":35,"line":122}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"385","location":{"end":{"column":61,"line":122},"start":{"column":35,"line":122}},"mutatorName":"EqualityOperator","replacement":"config.deferInit !== false","status":"Survived"},{"id":"386","location":{"end":{"column":61,"line":122},"start":{"column":56,"line":122}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"387","location":{"end":{"column":55,"line":123},"start":{"column":11,"line":123}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"389","location":{"end":{"column":80,"line":124},"start":{"column":49,"line":124}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"388","location":{"end":{"column":81,"line":124},"start":{"column":17,"line":124}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"390","location":{"end":{"column":79,"line":124},"start":{"column":64,"line":124}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"391","location":{"end":{"column":8,"line":137},"start":{"column":35,"line":129}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"393","location":{"end":{"column":62,"line":130},"start":{"column":13,"line":130}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"392","location":{"end":{"column":62,"line":130},"start":{"column":13,"line":130}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"394","location":{"end":{"column":62,"line":130},"start":{"column":13,"line":130}},"mutatorName":"LogicalOperator","replacement":"!cardNumber && !iinLookup.lookup(cardNumber).type","status":"Survived"},{"id":"395","location":{"end":{"column":24,"line":130},"start":{"column":13,"line":130}},"mutatorName":"BooleanLiteral","replacement":"cardNumber","status":"Survived"},{"id":"396","location":{"end":{"column":62,"line":130},"start":{"column":28,"line":130}},"mutatorName":"BooleanLiteral","replacement":"iinLookup.lookup(cardNumber).type","status":"Survived"},{"id":"397","location":{"end":{"column":10,"line":132},"start":{"column":64,"line":130}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"398","location":{"end":{"column":20,"line":131},"start":{"column":18,"line":131}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"399","location":{"end":{"column":55,"line":133},"start":{"column":13,"line":133}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"400","location":{"end":{"column":55,"line":133},"start":{"column":13,"line":133}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"401","location":{"end":{"column":55,"line":133},"start":{"column":13,"line":133}},"mutatorName":"BooleanLiteral","replacement":"iinLookup.lookup(cardNumber).cvcLength[0]","status":"Survived"},{"id":"402","location":{"end":{"column":10,"line":135},"start":{"column":57,"line":133}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"403","location":{"end":{"column":19,"line":138},"start":{"column":17,"line":138}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"404","location":{"end":{"column":4,"line":144},"start":{"column":29,"line":142}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"406","location":{"end":{"column":31,"line":149},"start":{"column":26,"line":149}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"407","location":{"end":{"column":4,"line":156},"start":{"column":41,"line":152}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"405","location":{"end":{"column":4,"line":150},"start":{"column":28,"line":146}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"409","location":{"end":{"column":4,"line":163},"start":{"column":41,"line":158}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"408","location":{"end":{"column":30,"line":155},"start":{"column":26,"line":155}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"410","location":{"end":{"column":4,"line":169},"start":{"column":50,"line":165}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"411","location":{"end":{"column":4,"line":173},"start":{"column":52,"line":171}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"413","location":{"end":{"column":4,"line":195},"start":{"column":25,"line":184}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"412","location":{"end":{"column":4,"line":182},"start":{"column":34,"line":175}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"414","location":{"end":{"column":72,"line":185},"start":{"column":67,"line":185}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"415","location":{"end":{"column":4,"line":203},"start":{"column":67,"line":197}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"416","location":{"end":{"column":6,"line":201},"start":{"column":47,"line":198}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"417","location":{"end":{"column":4,"line":208},"start":{"column":30,"line":205}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"418","location":{"end":{"column":4,"line":214},"start":{"column":39,"line":210}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"419","location":{"end":{"column":6,"line":213},"start":{"column":99,"line":211}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"420","location":{"end":{"column":4,"line":220},"start":{"column":77,"line":216}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"421","location":{"end":{"column":4,"line":230},"start":{"column":58,"line":222}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"422","location":{"end":{"column":28,"line":223},"start":{"column":9,"line":223}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"423","location":{"end":{"column":28,"line":223},"start":{"column":9,"line":223}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"425","location":{"end":{"column":6,"line":225},"start":{"column":30,"line":223}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"426","location":{"end":{"column":36,"line":225},"start":{"column":16,"line":225}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"424","location":{"end":{"column":28,"line":223},"start":{"column":9,"line":223}},"mutatorName":"EqualityOperator","replacement":"length !== LONG_CVC","status":"Survived"},{"id":"427","location":{"end":{"column":36,"line":225},"start":{"column":16,"line":225}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"428","location":{"end":{"column":36,"line":225},"start":{"column":16,"line":225}},"mutatorName":"EqualityOperator","replacement":"length !== SHORT_CVC","status":"Survived"},{"id":"429","location":{"end":{"column":6,"line":227},"start":{"column":38,"line":225}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"431","location":{"end":{"column":63,"line":228},"start":{"column":49,"line":228}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"430","location":{"end":{"column":6,"line":229},"start":{"column":12,"line":227}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"432","location":{"end":{"column":4,"line":256},"start":{"column":48,"line":232}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"433","location":{"end":{"column":8,"line":241},"start":{"column":50,"line":235}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"434","location":{"end":{"column":8,"line":254},"start":{"column":64,"line":245}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"435","location":{"end":{"column":46,"line":247},"start":{"column":13,"line":247}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"436","location":{"end":{"column":46,"line":247},"start":{"column":13,"line":247}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"437","location":{"end":{"column":46,"line":247},"start":{"column":13,"line":247}},"mutatorName":"EqualityOperator","replacement":"formState === FormState.AVAILABLE","status":"Survived"},{"id":"438","location":{"end":{"column":10,"line":249},"start":{"column":48,"line":247}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"439","location":{"end":{"column":4,"line":260},"start":{"column":36,"line":258}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"440","location":{"end":{"column":4,"line":265},"start":{"column":49,"line":262}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"442","location":{"end":{"column":4,"line":275},"start":{"column":39,"line":272}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"441","location":{"end":{"column":4,"line":270},"start":{"column":40,"line":267}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"444","location":{"end":{"column":56,"line":278},"start":{"column":24,"line":278}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"443","location":{"end":{"column":4,"line":279},"start":{"column":70,"line":277}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"445","location":{"end":{"column":103,"line":282},"start":{"column":40,"line":281}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"446","location":{"end":{"column":103,"line":282},"start":{"column":5,"line":282}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"447","location":{"end":{"column":103,"line":282},"start":{"column":5,"line":282}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"448","location":{"end":{"column":103,"line":282},"start":{"column":5,"line":282}},"mutatorName":"LogicalOperator","replacement":"state !== FormState.AVAILABLE && this._inputElement.hasAttribute(SecurityCode.BLOCK_CVV_ATTRIBUTE)","status":"Survived"},{"id":"449","location":{"end":{"column":34,"line":282},"start":{"column":5,"line":282}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"450","location":{"end":{"column":34,"line":282},"start":{"column":5,"line":282}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"451","location":{"end":{"column":34,"line":282},"start":{"column":5,"line":282}},"mutatorName":"EqualityOperator","replacement":"state === FormState.AVAILABLE","status":"Survived"},{"id":"452","location":{"end":{"column":4,"line":292},"start":{"column":55,"line":284}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"453","location":{"end":{"column":47,"line":285},"start":{"column":9,"line":285}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"454","location":{"end":{"column":47,"line":285},"start":{"column":9,"line":285}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"456","location":{"end":{"column":6,"line":291},"start":{"column":12,"line":288}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"455","location":{"end":{"column":6,"line":288},"start":{"column":49,"line":285}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { FormState } from '../../core/models/constants/FormState';\r\nimport { IMessageBusEvent } from '../../core/models/IMessageBusEvent';\r\nimport { Formatter } from '../../core/shared/formatter/Formatter';\r\nimport { Input } from '../../core/shared/input/Input';\r\nimport { LABEL_SECURITY_CODE } from '../../core/models/constants/Translations';\r\nimport { MessageBus } from '../../core/shared/message-bus/MessageBus';\r\nimport {\r\n  SECURITY_CODE_INPUT,\r\n  SECURITY_CODE_INPUT_SELECTOR,\r\n  SECURITY_CODE_LABEL,\r\n  SECURITY_CODE_MESSAGE,\r\n  SECURITY_CODE_WRAPPER\r\n} from '../../core/models/constants/Selectors';\r\nimport { Validation } from '../../core/shared/validation/Validation';\r\nimport { Service } from 'typedi';\r\nimport { ConfigProvider } from '../../../shared/services/config-provider/ConfigProvider';\r\nimport { filter, map, startWith, switchMap, tap } from 'rxjs/operators';\r\nimport { ofType } from '../../../shared/services/message-bus/operators/ofType';\r\nimport { IFormFieldState } from '../../core/models/IFormFieldState';\r\nimport { merge, Observable } from 'rxjs';\r\nimport JwtDecode from 'jwt-decode';\r\nimport { IDecodedJwt } from '../../core/models/IDecodedJwt';\r\nimport { iinLookup } from '@trustpayments/ts-iin-lookup';\r\nimport { DefaultPlaceholders } from '../../core/models/constants/config-resolver/DefaultPlaceholders';\r\nimport { LONG_CVC, SHORT_CVC } from '../../core/models/constants/SecurityCode';\r\nimport { IConfig } from '../../../shared/model/config/IConfig';\r\nimport { BrowserLocalStorage } from '../../../shared/services/storage/BrowserLocalStorage';\r\nimport { Styler } from '../../core/shared/styler/Styler';\r\nimport { Frame } from '../../core/shared/frame/Frame';\r\n\r\n@Service()\r\nexport class SecurityCode extends Input {\r\n  public static ifFieldExists = (): HTMLInputElement =>\r\n    document.getElementById(SECURITY_CODE_INPUT) as HTMLInputElement;\r\n  private static BLOCK_CVV_ATTRIBUTE: string = 'block-cvv';\r\n  private static BLOCK_CVV_VALUE: string = 'true';\r\n  private static CLEAR_VALUE: string = '';\r\n  private static DISABLED_ATTRIBUTE: string = 'disabled';\r\n  private static DISABLED_CLASS: string = 'st-input--disabled';\r\n  private static DISABLED_PARAM: string = 'disabled';\r\n  private static MATCH_EXACTLY_FOUR_DIGITS: string = '^[0-9]{4}$';\r\n  private static MATCH_EXACTLY_THREE_DIGITS: string = '^[0-9]{3}$';\r\n\r\n  private _securityCodeLength: number;\r\n  private _securityCodeWrapper: HTMLElement;\r\n  private _validation: Validation;\r\n  private _config: IConfig;\r\n\r\n  constructor(\r\n    private _configProvider: ConfigProvider,\r\n    private _localStorage: BrowserLocalStorage,\r\n    private _formatter: Formatter,\r\n    private messageBus: MessageBus,\r\n    private frame: Frame\r\n  ) {\r\n    super(SECURITY_CODE_INPUT, SECURITY_CODE_MESSAGE, SECURITY_CODE_LABEL, SECURITY_CODE_WRAPPER);\r\n    this._validation = new Validation();\r\n    this._securityCodeWrapper = document.getElementById(SECURITY_CODE_INPUT_SELECTOR) as HTMLElement;\r\n    this._securityCodeLength = SHORT_CVC;\r\n    this.placeholder = this._getPlaceholder(this._securityCodeLength);\r\n    this._configProvider.getConfig$().subscribe((config: IConfig) => {\r\n      const styler: Styler = new Styler(this.getAllowedStyles(), this.frame.parseUrl().styles);\r\n      if (styler.isLinedUp(config.styles.securityCode)) {\r\n        styler.lineUp(\r\n          'st-security-code',\r\n          'st-security-code-label',\r\n          ['st-security-code', 'st-security-code--lined-up'],\r\n          ['security-code__label', 'security-code__label--required', 'lined-up']\r\n        );\r\n      }\r\n    });\r\n    this._securityCodeUpdate$()\r\n      .pipe(filter(Boolean))\r\n      .subscribe((securityCodeLength: number) => {\r\n        this.placeholder = this._getPlaceholder(securityCodeLength);\r\n        this._securityCodeLength = securityCodeLength;\r\n        this.messageBus.publish({\r\n          type: MessageBus.EVENTS.CHANGE_SECURITY_CODE_LENGTH,\r\n          data: this._securityCodeLength\r\n        });\r\n      });\r\n    this._init();\r\n  }\r\n\r\n  private _getPlaceholder(securityCodeLength: number): string {\r\n    if (!this._configProvider.getConfig()) {\r\n      return '***';\r\n    }\r\n    if (\r\n      securityCodeLength === -1 &&\r\n      this._configProvider.getConfig() &&\r\n      this._configProvider.getConfig().placeholders\r\n    ) {\r\n      return this._configProvider.getConfig().placeholders.securitycode\r\n        ? this._configProvider.getConfig().placeholders.securitycode\r\n        : '***';\r\n    }\r\n    if (\r\n      this._configProvider.getConfig().placeholders.securitycode &&\r\n      this._configProvider.getConfig().placeholders.securitycode === DefaultPlaceholders.securitycode\r\n    ) {\r\n      return securityCodeLength === 4 ? '****' : DefaultPlaceholders.securitycode;\r\n    }\r\n    return this._configProvider.getConfig().placeholders.securitycode;\r\n  }\r\n\r\n  private _securityCodeUpdate$(): Observable<number> {\r\n    const jwtFromConfig$: Observable<string> = this._configProvider.getConfig$().pipe(map(config => config.jwt));\r\n    const jwtFromUpdate$: Observable<string> = this.messageBus.pipe(\r\n      ofType(MessageBus.EVENTS_PUBLIC.UPDATE_JWT),\r\n      map(event => event.data.newJwt)\r\n    );\r\n    const cardNumberInput$: Observable<string> = this.messageBus.pipe(\r\n      ofType(MessageBus.EVENTS.CHANGE_CARD_NUMBER),\r\n      map((event: IMessageBusEvent<IFormFieldState>) => event.data.value)\r\n    );\r\n    const cardNumberFromJwt$: Observable<string> = merge(jwtFromConfig$, jwtFromUpdate$).pipe(\r\n      map(jwt => JwtDecode<IDecodedJwt>(jwt).payload.pan)\r\n    );\r\n\r\n    const maskedPanFromJsInit$: Observable<string> = this._configProvider.getConfig$().pipe(\r\n      filter((config: IConfig) => config.deferInit === false),\r\n      tap((config: IConfig) => (this._config = config)),\r\n      switchMap(() => this._localStorage.select(store => store['app.maskedpan']))\r\n    );\r\n\r\n    return merge(cardNumberInput$, cardNumberFromJwt$, maskedPanFromJsInit$).pipe(\r\n      filter(Boolean),\r\n      map((cardNumber: string) => {\r\n        if (!cardNumber || !iinLookup.lookup(cardNumber).type) {\r\n          return -1;\r\n        }\r\n        if (!iinLookup.lookup(cardNumber).cvcLength[0]) {\r\n          return 4;\r\n        }\r\n        return iinLookup.lookup(cardNumber).cvcLength[0];\r\n      }),\r\n      startWith(-1)\r\n    );\r\n  }\r\n\r\n  public getLabel(): string {\r\n    return LABEL_SECURITY_CODE;\r\n  }\r\n\r\n  protected onBlur(): void {\r\n    super.onBlur();\r\n    this._sendState();\r\n    this._broadcastEvent(false, MessageBus.EVENTS.FOCUS_SECURITY_CODE);\r\n  }\r\n\r\n  protected onFocus(event: Event): void {\r\n    super.onFocus(event);\r\n    this._sendState();\r\n    this._broadcastEvent(true, MessageBus.EVENTS.FOCUS_SECURITY_CODE);\r\n  }\r\n\r\n  protected onInput(event: Event): void {\r\n    super.onInput(event);\r\n    this._setInputValue();\r\n    this.validation.keepCursorsPosition(this._inputElement);\r\n    this._sendState();\r\n  }\r\n\r\n  protected onPaste(event: ClipboardEvent): void {\r\n    super.onPaste(event);\r\n    this._setInputValue();\r\n    this._sendState();\r\n  }\r\n\r\n  protected onKeyPress(event: KeyboardEvent): void {\r\n    super.onKeyPress(event);\r\n  }\r\n\r\n  private _setInputValue(): void {\r\n    this._inputElement.value = this.validation.limitLength(this._inputElement.value, this._securityCodeLength);\r\n    this._inputElement.value = this._formatter.code(\r\n      this._inputElement.value,\r\n      this._securityCodeLength,\r\n      SECURITY_CODE_INPUT\r\n    );\r\n  }\r\n\r\n  private _init(): void {\r\n    super.setEventListener(MessageBus.EVENTS.FOCUS_SECURITY_CODE, false);\r\n    super.setEventListener(MessageBus.EVENTS.BLUR_SECURITY_CODE);\r\n    this._subscribeSecurityCodeChange();\r\n    this._setDisableListener();\r\n    this._inputElement.setAttribute(SecurityCode.PLACEHOLDER_ATTRIBUTE, this.placeholder);\r\n    this.validation.backendValidation(\r\n      this._inputElement,\r\n      this._messageElement,\r\n      MessageBus.EVENTS.VALIDATE_SECURITY_CODE_FIELD\r\n    );\r\n  }\r\n\r\n  private _broadcastEvent(data: boolean, eventType: string): void {\r\n    const messageBusEvent: IMessageBusEvent = {\r\n      data,\r\n      type: eventType\r\n    };\r\n    this.messageBus.publish(messageBusEvent);\r\n  }\r\n\r\n  private _sendState(): void {\r\n    const messageBusEvent: IMessageBusEvent = this.setMessageBusEvent(MessageBus.EVENTS.CHANGE_SECURITY_CODE);\r\n    this.messageBus.publish(messageBusEvent);\r\n  }\r\n\r\n  private _setDisableListener(): void {\r\n    this.messageBus.subscribe(MessageBus.EVENTS_PUBLIC.BLOCK_SECURITY_CODE, (state: FormState) => {\r\n      this._toggleSecurityCode(state);\r\n    });\r\n  }\r\n\r\n  private _setSecurityCodeProperties(length: number, pattern: string): void {\r\n    this._securityCodeLength = length;\r\n    this._setSecurityCodePattern(pattern);\r\n    this._inputElement.value = this.validation.limitLength(this._inputElement.value, this._securityCodeLength);\r\n  }\r\n\r\n  private _checkSecurityCodeLength(length: number): void {\r\n    if (length === LONG_CVC) {\r\n      this._setSecurityCodeProperties(length, SecurityCode.MATCH_EXACTLY_FOUR_DIGITS);\r\n    } else if (length === SHORT_CVC) {\r\n      this._setSecurityCodeProperties(length, SecurityCode.MATCH_EXACTLY_THREE_DIGITS);\r\n    } else {\r\n      this._setSecurityCodeProperties(LONG_CVC, '^[0-9]{3,4}$');\r\n    }\r\n  }\r\n\r\n  private _subscribeSecurityCodeChange(): void {\r\n    this.messageBus\r\n      .pipe(ofType(MessageBus.EVENTS.CHANGE_SECURITY_CODE_LENGTH))\r\n      .subscribe((response: IMessageBusEvent) => {\r\n        const { data } = response;\r\n        this._checkSecurityCodeLength(data);\r\n        this.placeholder = this._getPlaceholder(data);\r\n        this._inputElement.setAttribute(SecurityCode.PLACEHOLDER_ATTRIBUTE, this.placeholder);\r\n        this._sendState();\r\n      });\r\n\r\n    this.messageBus.subscribe(\r\n      MessageBus.EVENTS.IS_CARD_WITHOUT_CVV,\r\n      (data: { formState: FormState; isCardPiba: boolean }) => {\r\n        const { formState, isCardPiba } = data;\r\n        if (formState !== FormState.AVAILABLE) {\r\n          this._clearInputValue();\r\n        }\r\n        isCardPiba\r\n          ? this._inputElement.setAttribute(SecurityCode.BLOCK_CVV_ATTRIBUTE, SecurityCode.BLOCK_CVV_VALUE)\r\n          : this._inputElement.removeAttribute(SecurityCode.BLOCK_CVV_ATTRIBUTE);\r\n        this._toggleSecurityCode(formState);\r\n      }\r\n    );\r\n  }\r\n\r\n  private _clearInputValue(): void {\r\n    this._inputElement.value = SecurityCode.CLEAR_VALUE;\r\n  }\r\n\r\n  private _toggleSecurityCodeValidation(): void {\r\n    this.validation.removeError(this._inputElement, this._messageElement);\r\n    this._inputElement.setCustomValidity(SecurityCode.CLEAR_VALUE);\r\n  }\r\n\r\n  private _disableSecurityCode(): void {\r\n    this._inputElement.setAttribute(SecurityCode.DISABLED_ATTRIBUTE, SecurityCode.DISABLED_PARAM);\r\n    this._inputElement.classList.add(SecurityCode.DISABLED_CLASS);\r\n  }\r\n\r\n  private _enableSecurityCode(): void {\r\n    this._inputElement.removeAttribute(SecurityCode.DISABLED_ATTRIBUTE);\r\n    this._inputElement.classList.remove(SecurityCode.DISABLED_CLASS);\r\n  }\r\n\r\n  private _setSecurityCodePattern(securityCodePattern: string): void {\r\n    this.setAttributes({ pattern: securityCodePattern });\r\n  }\r\n\r\n  private _shouldDisableSecurityCode = (state: FormState): boolean =>\r\n    state !== FormState.AVAILABLE || this._inputElement.hasAttribute(SecurityCode.BLOCK_CVV_ATTRIBUTE);\r\n\r\n  private _toggleSecurityCode(state: FormState): void {\r\n    if (this._shouldDisableSecurityCode(state)) {\r\n      this._disableSecurityCode();\r\n      this._toggleSecurityCodeValidation();\r\n    } else {\r\n      this._enableSecurityCode();\r\n      this._inputElement.classList.remove(SecurityCode.DISABLED_CLASS);\r\n    }\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\components\\security-code\\security-code.ts":{"language":"typescript","mutants":[{"id":"457","location":{"end":{"column":2,"line":10},"start":{"column":8,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import './security-code.scss';\nimport { SecurityCode } from './SecurityCode';\nimport '../../core/shared/override-domain/OverrideDomain';\nimport { ComponentBootstrap } from '../../core/component-bootstrap/ComponentBootstrap';\nimport { Container } from 'typedi';\nimport { SECURITY_CODE_IFRAME } from '../../core/models/constants/Selectors';\n\n(() => {\n  Container.get(ComponentBootstrap).run(SECURITY_CODE_IFRAME, SecurityCode);\n})();\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\component-bootstrap\\ComponentBootstrap.ts":{"language":"typescript","mutants":[{"id":"459","location":{"end":{"column":46,"line":24},"start":{"column":9,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"458","location":{"end":{"column":4,"line":33},"start":{"column":75,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"460","location":{"end":{"column":46,"line":24},"start":{"column":9,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"461","location":{"end":{"column":6,"line":26},"start":{"column":48,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { FramesHub } from '../../../shared/services/message-bus/FramesHub';\nimport { SentryService } from '../../../shared/services/sentry/SentryService';\nimport { ContainerInstance, Service } from 'typedi';\nimport { BrowserLocalStorage } from '../../../shared/services/storage/BrowserLocalStorage';\nimport { Store } from '../store/Store';\nimport { environment } from '../../../environments/environment';\nimport { MessageSubscriberRegistry } from '../../../shared/services/message-bus/MessageSubscriberRegistry';\nimport { FrameIdentifier } from '../../../shared/services/message-bus/FrameIdentifier';\nimport { MessageBus } from '../shared/message-bus/MessageBus';\nimport { MessageSubscriberToken } from '../../../shared/dependency-injection/InjectionTokens';\n\n@Service()\nexport class ComponentBootstrap {\n  constructor(private frameIdentifier: FrameIdentifier, private container: ContainerInstance) {}\n\n  run<T>(frameName: string, componentClass: new (...args: any[]) => T): T {\n    this.frameIdentifier.setFrameName(frameName);\n\n    this.container.get(MessageBus);\n    this.container.get(Store);\n    this.container.get(BrowserLocalStorage).init();\n    this.container.get(FramesHub).notifyReadyState();\n\n    if (this.frameIdentifier.isControlFrame()) {\n      this.container.get(MessageSubscriberRegistry).register(...this.container.getMany(MessageSubscriberToken));\n    }\n\n    const component = this.container.get(componentClass);\n\n    this.container.get(SentryService).init(environment.SENTRY_DSN, environment.SENTRY_WHITELIST_URLS);\n\n    return component;\n  }\n}\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\apple-pay\\ApplePay.ts":{"language":"typescript","mutants":[{"id":"462","location":{"end":{"column":2,"line":36},"start":{"column":33,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"464","location":{"end":{"column":24,"line":29},"start":{"column":10,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"463","location":{"end":{"column":30,"line":28},"start":{"column":17,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"465","location":{"end":{"column":25,"line":30},"start":{"column":14,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"466","location":{"end":{"column":25,"line":31},"start":{"column":13,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"468","location":{"end":{"column":26,"line":33},"start":{"column":12,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"467","location":{"end":{"column":25,"line":32},"start":{"column":13,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"469","location":{"end":{"column":27,"line":34},"start":{"column":14,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"470","location":{"end":{"column":19,"line":35},"start":{"column":9,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"472","location":{"end":{"column":4,"line":70},"start":{"column":26,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"471","location":{"end":{"column":4,"line":66},"start":{"column":34,"line":64}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"473","location":{"end":{"column":4,"line":74},"start":{"column":31,"line":72}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"474","location":{"end":{"column":4,"line":78},"start":{"column":26,"line":76}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"475","location":{"end":{"column":4,"line":82},"start":{"column":21,"line":80}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"476","location":{"end":{"column":62,"line":84},"start":{"column":48,"line":84}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"477","location":{"end":{"column":79,"line":87},"start":{"column":44,"line":87}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"478","location":{"end":{"column":52,"line":87},"start":{"column":45,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"479","location":{"end":{"column":61,"line":87},"start":{"column":54,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"480","location":{"end":{"column":78,"line":87},"start":{"column":63,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"481","location":{"end":{"column":103,"line":88},"start":{"column":43,"line":88}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"483","location":{"end":{"column":58,"line":88},"start":{"column":53,"line":88}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"482","location":{"end":{"column":51,"line":88},"start":{"column":44,"line":88}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"484","location":{"end":{"column":66,"line":88},"start":{"column":60,"line":88}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"485","location":{"end":{"column":76,"line":88},"start":{"column":68,"line":88}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"486","location":{"end":{"column":89,"line":88},"start":{"column":78,"line":88}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"487","location":{"end":{"column":102,"line":88},"start":{"column":91,"line":88}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"488","location":{"end":{"column":4,"line":98},"start":{"column":45,"line":89}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"489","location":{"end":{"column":11,"line":90},"start":{"column":5,"line":90}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"490","location":{"end":{"column":20,"line":91},"start":{"column":5,"line":91}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"491","location":{"end":{"column":15,"line":92},"start":{"column":5,"line":92}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"492","location":{"end":{"column":14,"line":93},"start":{"column":5,"line":93}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"494","location":{"end":{"column":17,"line":95},"start":{"column":5,"line":95}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"493","location":{"end":{"column":10,"line":94},"start":{"column":5,"line":94}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"495","location":{"end":{"column":19,"line":96},"start":{"column":5,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"496","location":{"end":{"column":11,"line":97},"start":{"column":5,"line":97}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"497","location":{"end":{"column":4,"line":105},"start":{"column":90,"line":99}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"499","location":{"end":{"column":13,"line":101},"start":{"column":5,"line":101}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"498","location":{"end":{"column":22,"line":100},"start":{"column":5,"line":100}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"500","location":{"end":{"column":15,"line":102},"start":{"column":5,"line":102}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"501","location":{"end":{"column":14,"line":103},"start":{"column":5,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"502","location":{"end":{"column":11,"line":104},"start":{"column":5,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"503","location":{"end":{"column":105,"line":106},"start":{"column":90,"line":106}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"504","location":{"end":{"column":96,"line":106},"start":{"column":91,"line":106}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"505","location":{"end":{"column":104,"line":106},"start":{"column":98,"line":106}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"507","location":{"end":{"column":25,"line":118},"start":{"column":23,"line":118}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"506","location":{"end":{"column":4,"line":122},"start":{"column":42,"line":117}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"508","location":{"end":{"column":29,"line":120},"start":{"column":19,"line":120}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"509","location":{"end":{"column":28,"line":121},"start":{"column":26,"line":121}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"510","location":{"end":{"column":45,"line":139},"start":{"column":40,"line":139}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"512","location":{"end":{"column":6,"line":158},"start":{"column":39,"line":148}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"511","location":{"end":{"column":4,"line":170},"start":{"column":103,"line":141}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"513","location":{"end":{"column":19,"line":150},"start":{"column":11,"line":150}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"514","location":{"end":{"column":19,"line":150},"start":{"column":11,"line":150}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"515","location":{"end":{"column":8,"line":153},"start":{"column":21,"line":150}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"516","location":{"end":{"column":49,"line":159},"start":{"column":32,"line":159}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"517","location":{"end":{"column":53,"line":159},"start":{"column":51,"line":159}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"518","location":{"end":{"column":6,"line":163},"start":{"column":24,"line":160}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"520","location":{"end":{"column":68,"line":162},"start":{"column":66,"line":162}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"519","location":{"end":{"column":17,"line":161},"start":{"column":15,"line":161}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"521","location":{"end":{"column":6,"line":169},"start":{"column":99,"line":165}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"523","location":{"end":{"column":29,"line":173},"start":{"column":12,"line":173}},"mutatorName":"BooleanLiteral","replacement":"!ApplePaySession","status":"Survived"},{"id":"522","location":{"end":{"column":4,"line":174},"start":{"column":37,"line":172}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"524","location":{"end":{"column":29,"line":173},"start":{"column":13,"line":173}},"mutatorName":"BooleanLiteral","replacement":"ApplePaySession","status":"Survived"},{"id":"526","location":{"end":{"column":85,"line":177},"start":{"column":50,"line":177}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"525","location":{"end":{"column":4,"line":186},"start":{"column":34,"line":176}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"529","location":{"end":{"column":90,"line":177},"start":{"column":87,"line":177}},"mutatorName":"UpdateOperator","replacement":"++i","status":"Survived"},{"id":"527","location":{"end":{"column":85,"line":177},"start":{"column":50,"line":177}},"mutatorName":"EqualityOperator","replacement":"i > ApplePay.APPLE_PAY_MIN_VERSION","status":"Survived"},{"id":"528","location":{"end":{"column":85,"line":177},"start":{"column":50,"line":177}},"mutatorName":"EqualityOperator","replacement":"i < ApplePay.APPLE_PAY_MIN_VERSION","status":"Survived"},{"id":"530","location":{"end":{"column":6,"line":185},"start":{"column":92,"line":177}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"532","location":{"end":{"column":52,"line":178},"start":{"column":11,"line":178}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"531","location":{"end":{"column":52,"line":178},"start":{"column":11,"line":178}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"534","location":{"end":{"column":54,"line":181},"start":{"column":18,"line":181}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"533","location":{"end":{"column":8,"line":181},"start":{"column":54,"line":178}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"535","location":{"end":{"column":54,"line":181},"start":{"column":18,"line":181}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"536","location":{"end":{"column":54,"line":181},"start":{"column":18,"line":181}},"mutatorName":"EqualityOperator","replacement":"i !== ApplePay.APPLE_PAY_MIN_VERSION","status":"Survived"},{"id":"537","location":{"end":{"column":8,"line":184},"start":{"column":56,"line":181}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"538","location":{"end":{"column":4,"line":190},"start":{"column":36,"line":188}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"539","location":{"end":{"column":85,"line":189},"start":{"column":53,"line":189}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"540","location":{"end":{"column":84,"line":189},"start":{"column":81,"line":189}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"542","location":{"end":{"column":4,"line":198},"start":{"column":51,"line":196}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"541","location":{"end":{"column":4,"line":194},"start":{"column":51,"line":192}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"543","location":{"end":{"column":4,"line":202},"start":{"column":40,"line":200}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"545","location":{"end":{"column":4,"line":210},"start":{"column":39,"line":208}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"544","location":{"end":{"column":4,"line":206},"start":{"column":39,"line":204}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"546","location":{"end":{"column":4,"line":223},"start":{"column":49,"line":212}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"548","location":{"end":{"column":63,"line":227},"start":{"column":9,"line":227}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"547","location":{"end":{"column":4,"line":249},"start":{"column":35,"line":225}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"549","location":{"end":{"column":63,"line":227},"start":{"column":9,"line":227}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"550","location":{"end":{"column":63,"line":227},"start":{"column":9,"line":227}},"mutatorName":"EqualityOperator","replacement":"this.applePayVersion < ApplePay.APPLE_PAY_MIN_VERSION","status":"Survived"},{"id":"551","location":{"end":{"column":63,"line":227},"start":{"column":9,"line":227}},"mutatorName":"EqualityOperator","replacement":"this.applePayVersion > ApplePay.APPLE_PAY_MIN_VERSION","status":"Survived"},{"id":"553","location":{"end":{"column":60,"line":231},"start":{"column":7,"line":230}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"552","location":{"end":{"column":6,"line":229},"start":{"column":65,"line":227}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"554","location":{"end":{"column":60,"line":231},"start":{"column":7,"line":230}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"555","location":{"end":{"column":60,"line":231},"start":{"column":7,"line":230}},"mutatorName":"LogicalOperator","replacement":"this.applePayVersion > ApplePay.APPLE_PAY_MIN_VERSION || this.applePayVersion < ApplePay.APPLE_PAY_MAX_VERSION","status":"Survived"},{"id":"556","location":{"end":{"column":60,"line":230},"start":{"column":7,"line":230}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"557","location":{"end":{"column":60,"line":230},"start":{"column":7,"line":230}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"558","location":{"end":{"column":60,"line":230},"start":{"column":7,"line":230}},"mutatorName":"EqualityOperator","replacement":"this.applePayVersion >= ApplePay.APPLE_PAY_MIN_VERSION","status":"Survived"},{"id":"559","location":{"end":{"column":60,"line":230},"start":{"column":7,"line":230}},"mutatorName":"EqualityOperator","replacement":"this.applePayVersion <= ApplePay.APPLE_PAY_MIN_VERSION","status":"Survived"},{"id":"560","location":{"end":{"column":60,"line":231},"start":{"column":7,"line":231}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"561","location":{"end":{"column":60,"line":231},"start":{"column":7,"line":231}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"562","location":{"end":{"column":60,"line":231},"start":{"column":7,"line":231}},"mutatorName":"EqualityOperator","replacement":"this.applePayVersion <= ApplePay.APPLE_PAY_MAX_VERSION","status":"Survived"},{"id":"564","location":{"end":{"column":6,"line":234},"start":{"column":7,"line":232}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"563","location":{"end":{"column":60,"line":231},"start":{"column":7,"line":231}},"mutatorName":"EqualityOperator","replacement":"this.applePayVersion >= ApplePay.APPLE_PAY_MAX_VERSION","status":"Survived"},{"id":"565","location":{"end":{"column":6,"line":236},"start":{"column":12,"line":234}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"567","location":{"end":{"column":58,"line":237},"start":{"column":9,"line":237}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"566","location":{"end":{"column":58,"line":237},"start":{"column":9,"line":237}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"568","location":{"end":{"column":58,"line":237},"start":{"column":9,"line":237}},"mutatorName":"EqualityOperator","replacement":"this._paymentRequest.supportedNetworks.length >= 0","status":"Survived"},{"id":"570","location":{"end":{"column":6,"line":246},"start":{"column":60,"line":237}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"569","location":{"end":{"column":58,"line":237},"start":{"column":9,"line":237}},"mutatorName":"EqualityOperator","replacement":"this._paymentRequest.supportedNetworks.length <= 0","status":"Survived"},{"id":"571","location":{"end":{"column":56,"line":238},"start":{"column":54,"line":238}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"572","location":{"end":{"column":8,"line":244},"start":{"column":36,"line":240}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"573","location":{"end":{"column":88,"line":241},"start":{"column":13,"line":241}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"574","location":{"end":{"column":88,"line":241},"start":{"column":13,"line":241}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"575","location":{"end":{"column":88,"line":241},"start":{"column":13,"line":241}},"mutatorName":"EqualityOperator","replacement":"this._paymentRequest.supportedNetworks.indexOf(supportedNetworks[i]) === -1","status":"Survived"},{"id":"576","location":{"end":{"column":88,"line":241},"start":{"column":86,"line":241}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"577","location":{"end":{"column":10,"line":243},"start":{"column":90,"line":241}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"578","location":{"end":{"column":6,"line":248},"start":{"column":12,"line":246}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"581","location":{"end":{"column":113,"line":263},"start":{"column":32,"line":263}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"580","location":{"end":{"column":233,"line":260},"start":{"column":39,"line":260}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"579","location":{"end":{"column":4,"line":261},"start":{"column":76,"line":251}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"583","location":{"end":{"column":59,"line":268},"start":{"column":43,"line":267}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"582","location":{"end":{"column":118,"line":265},"start":{"column":42,"line":265}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"584","location":{"end":{"column":4,"line":280},"start":{"column":41,"line":270}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"586","location":{"end":{"column":41,"line":274},"start":{"column":34,"line":274}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"587","location":{"end":{"column":15,"line":277},"start":{"column":9,"line":277}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"585","location":{"end":{"column":6,"line":275},"start":{"column":27,"line":272}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"590","location":{"end":{"column":38,"line":278},"start":{"column":31,"line":278}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"588","location":{"end":{"column":15,"line":277},"start":{"column":9,"line":277}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"589","location":{"end":{"column":6,"line":279},"start":{"column":17,"line":277}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"591","location":{"end":{"column":4,"line":290},"start":{"column":35,"line":282}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"592","location":{"end":{"column":79,"line":283},"start":{"column":9,"line":283}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"593","location":{"end":{"column":79,"line":283},"start":{"column":9,"line":283}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"594","location":{"end":{"column":79,"line":283},"start":{"column":9,"line":283}},"mutatorName":"LogicalOperator","replacement":"this._paymentRequest.total.amount || this._paymentRequest.currencyCode","status":"Survived"},{"id":"595","location":{"end":{"column":6,"line":286},"start":{"column":81,"line":283}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"596","location":{"end":{"column":6,"line":288},"start":{"column":12,"line":286}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"598","location":{"end":{"column":37,"line":293},"start":{"column":9,"line":293}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"597","location":{"end":{"column":4,"line":302},"start":{"column":60,"line":292}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"599","location":{"end":{"column":37,"line":293},"start":{"column":9,"line":293}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"600","location":{"end":{"column":6,"line":301},"start":{"column":39,"line":293}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"601","location":{"end":{"column":4,"line":331},"start":{"column":40,"line":304}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"602","location":{"end":{"column":6,"line":330},"start":{"column":56,"line":305}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"603","location":{"end":{"column":10,"line":313},"start":{"column":38,"line":310}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"604","location":{"end":{"column":45,"line":311},"start":{"column":38,"line":311}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"606","location":{"end":{"column":81,"line":311},"start":{"column":60,"line":311}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"605","location":{"end":{"column":58,"line":311},"start":{"column":47,"line":311}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"607","location":{"end":{"column":113,"line":311},"start":{"column":83,"line":311}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"608","location":{"end":{"column":10,"line":329},"start":{"column":25,"line":314}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"609","location":{"end":{"column":37,"line":315},"start":{"column":15,"line":315}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"611","location":{"end":{"column":12,"line":317},"start":{"column":39,"line":315}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"610","location":{"end":{"column":37,"line":315},"start":{"column":15,"line":315}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"612","location":{"end":{"column":99,"line":321},"start":{"column":36,"line":321}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"613","location":{"end":{"column":105,"line":321},"start":{"column":101,"line":321}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"614","location":{"end":{"column":67,"line":322},"start":{"column":36,"line":322}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"615","location":{"end":{"column":20,"line":324},"start":{"column":13,"line":324}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"616","location":{"end":{"column":24,"line":325},"start":{"column":13,"line":325}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"617","location":{"end":{"column":34,"line":326},"start":{"column":13,"line":326}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"619","location":{"end":{"column":4,"line":361},"start":{"column":34,"line":333}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"618","location":{"end":{"column":52,"line":327},"start":{"column":13,"line":327}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"620","location":{"end":{"column":6,"line":360},"start":{"column":57,"line":334}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"621","location":{"end":{"column":12,"line":342},"start":{"column":11,"line":339}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"622","location":{"end":{"column":10,"line":352},"start":{"column":34,"line":345}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"624","location":{"end":{"column":58,"line":350},"start":{"column":47,"line":350}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"623","location":{"end":{"column":45,"line":350},"start":{"column":38,"line":350}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"626","location":{"end":{"column":100,"line":350},"start":{"column":71,"line":350}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"625","location":{"end":{"column":69,"line":350},"start":{"column":60,"line":350}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"627","location":{"end":{"column":55,"line":351},"start":{"column":38,"line":351}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"628","location":{"end":{"column":63,"line":351},"start":{"column":57,"line":351}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"629","location":{"end":{"column":10,"line":359},"start":{"column":22,"line":353}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"630","location":{"end":{"column":99,"line":354},"start":{"column":36,"line":354}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"631","location":{"end":{"column":105,"line":354},"start":{"column":101,"line":354}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"632","location":{"end":{"column":95,"line":356},"start":{"column":41,"line":356}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"633","location":{"end":{"column":93,"line":356},"start":{"column":91,"line":356}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"634","location":{"end":{"column":55,"line":358},"start":{"column":38,"line":358}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"635","location":{"end":{"column":63,"line":358},"start":{"column":57,"line":358}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"637","location":{"end":{"column":4,"line":382},"start":{"column":32,"line":367}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"638","location":{"end":{"column":6,"line":381},"start":{"column":46,"line":368}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"636","location":{"end":{"column":4,"line":365},"start":{"column":68,"line":363}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"639","location":{"end":{"column":36,"line":369},"start":{"column":32,"line":369}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"641","location":{"end":{"column":102,"line":371},"start":{"column":98,"line":371}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"640","location":{"end":{"column":96,"line":371},"start":{"column":32,"line":371}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"642","location":{"end":{"column":10,"line":376},"start":{"column":9,"line":373}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"643","location":{"end":{"column":43,"line":375},"start":{"column":17,"line":375}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"644","location":{"end":{"column":41,"line":375},"start":{"column":30,"line":375}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"645","location":{"end":{"column":13,"line":377},"start":{"column":9,"line":377}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"648","location":{"end":{"column":72,"line":380},"start":{"column":56,"line":380}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"647","location":{"end":{"column":54,"line":380},"start":{"column":43,"line":380}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"646","location":{"end":{"column":41,"line":380},"start":{"column":34,"line":380}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"650","location":{"end":{"column":4,"line":402},"start":{"column":75,"line":384}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"649","location":{"end":{"column":103,"line":380},"start":{"column":74,"line":380}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"651","location":{"end":{"column":31,"line":386},"start":{"column":9,"line":386}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"653","location":{"end":{"column":6,"line":388},"start":{"column":33,"line":386}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"652","location":{"end":{"column":31,"line":386},"start":{"column":9,"line":386}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"654","location":{"end":{"column":6,"line":401},"start":{"column":45,"line":389}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"655","location":{"end":{"column":24,"line":390},"start":{"column":11,"line":390}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"656","location":{"end":{"column":24,"line":390},"start":{"column":11,"line":390}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"658","location":{"end":{"column":10,"line":394},"start":{"column":13,"line":391}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"657","location":{"end":{"column":8,"line":398},"start":{"column":26,"line":390}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"659","location":{"end":{"column":10,"line":397},"start":{"column":25,"line":394}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"660","location":{"end":{"column":8,"line":400},"start":{"column":14,"line":398}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"661","location":{"end":{"column":4,"line":411},"start":{"column":58,"line":404}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"662","location":{"end":{"column":6,"line":407},"start":{"column":9,"line":405}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"663","location":{"end":{"column":6,"line":409},"start":{"column":21,"line":407}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"664","location":{"end":{"column":4,"line":435},"start":{"column":38,"line":413}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"666","location":{"end":{"column":8,"line":421},"start":{"column":52,"line":415}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"665","location":{"end":{"column":6,"line":422},"start":{"column":61,"line":414}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"667","location":{"end":{"column":10,"line":420},"start":{"column":19,"line":416}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"668","location":{"end":{"column":24,"line":419},"start":{"column":17,"line":419}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"669","location":{"end":{"column":6,"line":428},"start":{"column":62,"line":424}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"670","location":{"end":{"column":8,"line":427},"start":{"column":53,"line":425}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"672","location":{"end":{"column":118,"line":426},"start":{"column":111,"line":426}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"671","location":{"end":{"column":120,"line":426},"start":{"column":19,"line":426}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"673","location":{"end":{"column":6,"line":434},"start":{"column":63,"line":430}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"675","location":{"end":{"column":120,"line":432},"start":{"column":19,"line":432}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"674","location":{"end":{"column":8,"line":433},"start":{"column":54,"line":431}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"677","location":{"end":{"column":4,"line":450},"start":{"column":29,"line":437}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"676","location":{"end":{"column":118,"line":432},"start":{"column":111,"line":432}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"678","location":{"end":{"column":35,"line":438},"start":{"column":30,"line":438}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"680","location":{"end":{"column":58,"line":439},"start":{"column":51,"line":439}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"679","location":{"end":{"column":49,"line":439},"start":{"column":32,"line":439}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"681","location":{"end":{"column":6,"line":447},"start":{"column":9,"line":445}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"682","location":{"end":{"column":6,"line":449},"start":{"column":21,"line":447}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"683","location":{"end":{"column":4,"line":463},"start":{"column":30,"line":452}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"684","location":{"end":{"column":24,"line":453},"start":{"column":9,"line":453}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"686","location":{"end":{"column":6,"line":462},"start":{"column":26,"line":453}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"685","location":{"end":{"column":24,"line":453},"start":{"column":9,"line":453}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"687","location":{"end":{"column":44,"line":454},"start":{"column":11,"line":454}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"688","location":{"end":{"column":44,"line":454},"start":{"column":11,"line":454}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"689","location":{"end":{"column":8,"line":459},"start":{"column":46,"line":454}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"690","location":{"end":{"column":10,"line":458},"start":{"column":63,"line":455}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"691","location":{"end":{"column":45,"line":457},"start":{"column":38,"line":457}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"692","location":{"end":{"column":58,"line":457},"start":{"column":47,"line":457}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"693","location":{"end":{"column":66,"line":457},"start":{"column":60,"line":457}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"694","location":{"end":{"column":97,"line":457},"start":{"column":68,"line":457}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"696","location":{"end":{"column":69,"line":460},"start":{"column":62,"line":460}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"697","location":{"end":{"column":78,"line":460},"start":{"column":71,"line":460}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"695","location":{"end":{"column":8,"line":461},"start":{"column":14,"line":459}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"699","location":{"end":{"column":69,"line":467},"start":{"column":9,"line":467}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"698","location":{"end":{"column":4,"line":502},"start":{"column":50,"line":465}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"700","location":{"end":{"column":69,"line":467},"start":{"column":9,"line":467}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"701","location":{"end":{"column":6,"line":492},"start":{"column":71,"line":467}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"703","location":{"end":{"column":28,"line":468},"start":{"column":11,"line":468}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"702","location":{"end":{"column":28,"line":468},"start":{"column":11,"line":468}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"704","location":{"end":{"column":28,"line":468},"start":{"column":11,"line":468}},"mutatorName":"EqualityOperator","replacement":"errorcode === '0'","status":"Survived"},{"id":"706","location":{"end":{"column":8,"line":491},"start":{"column":30,"line":468}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"707","location":{"end":{"column":50,"line":471},"start":{"column":41,"line":471}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"705","location":{"end":{"column":28,"line":468},"start":{"column":25,"line":468}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"710","location":{"end":{"column":34,"line":473},"start":{"column":13,"line":473}},"mutatorName":"EqualityOperator","replacement":"errorcode !== '30000'","status":"Survived"},{"id":"708","location":{"end":{"column":34,"line":473},"start":{"column":13,"line":473}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"709","location":{"end":{"column":34,"line":473},"start":{"column":13,"line":473}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"713","location":{"end":{"column":56,"line":474},"start":{"column":15,"line":474}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"712","location":{"end":{"column":10,"line":486},"start":{"column":36,"line":473}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"711","location":{"end":{"column":34,"line":473},"start":{"column":27,"line":473}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"714","location":{"end":{"column":56,"line":474},"start":{"column":15,"line":474}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"715","location":{"end":{"column":56,"line":474},"start":{"column":15,"line":474}},"mutatorName":"EqualityOperator","replacement":"errordata.lastIndexOf('billing', 0) !== 0","status":"Survived"},{"id":"716","location":{"end":{"column":46,"line":474},"start":{"column":37,"line":474}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"717","location":{"end":{"column":12,"line":477},"start":{"column":58,"line":474}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"719","location":{"end":{"column":64,"line":477},"start":{"column":22,"line":477}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"718","location":{"end":{"column":49,"line":475},"start":{"column":26,"line":475}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"720","location":{"end":{"column":64,"line":477},"start":{"column":22,"line":477}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"721","location":{"end":{"column":64,"line":477},"start":{"column":22,"line":477}},"mutatorName":"EqualityOperator","replacement":"errordata.lastIndexOf('customer', 0) !== 0","status":"Survived"},{"id":"723","location":{"end":{"column":12,"line":480},"start":{"column":66,"line":477}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"722","location":{"end":{"column":54,"line":477},"start":{"column":44,"line":477}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"724","location":{"end":{"column":50,"line":478},"start":{"column":26,"line":478}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"725","location":{"end":{"column":67,"line":481},"start":{"column":15,"line":481}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"726","location":{"end":{"column":67,"line":481},"start":{"column":15,"line":481}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"727","location":{"end":{"column":67,"line":481},"start":{"column":15,"line":481}},"mutatorName":"EqualityOperator","replacement":"typeof ApplePayContactMap[errordata] === 'undefined'","status":"Survived"},{"id":"728","location":{"end":{"column":67,"line":481},"start":{"column":56,"line":481}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"729","location":{"end":{"column":12,"line":483},"start":{"column":69,"line":481}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"730","location":{"end":{"column":46,"line":483},"start":{"column":22,"line":483}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"731","location":{"end":{"column":46,"line":483},"start":{"column":22,"line":483}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"732","location":{"end":{"column":46,"line":483},"start":{"column":22,"line":483}},"mutatorName":"EqualityOperator","replacement":"error.code === 'unknown'","status":"Survived"},{"id":"733","location":{"end":{"column":46,"line":483},"start":{"column":37,"line":483}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"734","location":{"end":{"column":12,"line":485},"start":{"column":48,"line":483}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"735","location":{"end":{"column":48,"line":484},"start":{"column":26,"line":484}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"736","location":{"end":{"column":37,"line":487},"start":{"column":13,"line":487}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"737","location":{"end":{"column":37,"line":487},"start":{"column":13,"line":487}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"739","location":{"end":{"column":37,"line":487},"start":{"column":28,"line":487}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"738","location":{"end":{"column":37,"line":487},"start":{"column":13,"line":487}},"mutatorName":"EqualityOperator","replacement":"error.code === 'unknown'","status":"Survived"},{"id":"740","location":{"end":{"column":10,"line":490},"start":{"column":39,"line":487}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"741","location":{"end":{"column":44,"line":489},"start":{"column":37,"line":489}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"742","location":{"end":{"column":26,"line":494},"start":{"column":9,"line":494}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"743","location":{"end":{"column":26,"line":494},"start":{"column":9,"line":494}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"746","location":{"end":{"column":6,"line":496},"start":{"column":28,"line":494}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"745","location":{"end":{"column":26,"line":494},"start":{"column":23,"line":494}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"744","location":{"end":{"column":26,"line":494},"start":{"column":9,"line":494}},"mutatorName":"EqualityOperator","replacement":"errorcode !== '0'","status":"Survived"},{"id":"747","location":{"end":{"column":6,"line":499},"start":{"column":12,"line":496}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"748","location":{"end":{"column":4,"line":511},"start":{"column":73,"line":504}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"749","location":{"end":{"column":26,"line":505},"start":{"column":9,"line":505}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"750","location":{"end":{"column":26,"line":505},"start":{"column":9,"line":505}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"752","location":{"end":{"column":26,"line":505},"start":{"column":23,"line":505}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"751","location":{"end":{"column":26,"line":505},"start":{"column":9,"line":505}},"mutatorName":"EqualityOperator","replacement":"errorcode !== '0'","status":"Survived"},{"id":"753","location":{"end":{"column":6,"line":508},"start":{"column":28,"line":505}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"755","location":{"end":{"column":103,"line":506},"start":{"column":99,"line":506}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"754","location":{"end":{"column":97,"line":506},"start":{"column":32,"line":506}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"756","location":{"end":{"column":6,"line":510},"start":{"column":12,"line":508}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"757","location":{"end":{"column":4,"line":535},"start":{"column":95,"line":513}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"759","location":{"end":{"column":16,"line":517},"start":{"column":9,"line":517}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"758","location":{"end":{"column":54,"line":515},"start":{"column":47,"line":515}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"760","location":{"end":{"column":16,"line":517},"start":{"column":9,"line":517}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"761","location":{"end":{"column":6,"line":532},"start":{"column":18,"line":517}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"762","location":{"end":{"column":8,"line":531},"start":{"column":49,"line":518}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"764","location":{"end":{"column":43,"line":519},"start":{"column":13,"line":519}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"763","location":{"end":{"column":43,"line":519},"start":{"column":13,"line":519}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"765","location":{"end":{"column":43,"line":519},"start":{"column":13,"line":519}},"mutatorName":"EqualityOperator","replacement":"notificationType !== 'success'","status":"Survived"},{"id":"766","location":{"end":{"column":43,"line":519},"start":{"column":34,"line":519}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"767","location":{"end":{"column":10,"line":522},"start":{"column":45,"line":519}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"768","location":{"end":{"column":101,"line":521},"start":{"column":36,"line":521}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"769","location":{"end":{"column":107,"line":521},"start":{"column":103,"line":521}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"770","location":{"end":{"column":48,"line":522},"start":{"column":20,"line":522}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"772","location":{"end":{"column":48,"line":522},"start":{"column":20,"line":522}},"mutatorName":"EqualityOperator","replacement":"notificationType !== 'error'","status":"Survived"},{"id":"771","location":{"end":{"column":48,"line":522},"start":{"column":20,"line":522}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"774","location":{"end":{"column":10,"line":525},"start":{"column":50,"line":522}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"773","location":{"end":{"column":48,"line":522},"start":{"column":41,"line":522}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"775","location":{"end":{"column":99,"line":524},"start":{"column":36,"line":524}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"776","location":{"end":{"column":105,"line":524},"start":{"column":101,"line":524}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"777","location":{"end":{"column":49,"line":525},"start":{"column":20,"line":525}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"778","location":{"end":{"column":49,"line":525},"start":{"column":20,"line":525}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"779","location":{"end":{"column":49,"line":525},"start":{"column":20,"line":525}},"mutatorName":"EqualityOperator","replacement":"notificationType !== 'cancel'","status":"Survived"},{"id":"780","location":{"end":{"column":49,"line":525},"start":{"column":41,"line":525}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"781","location":{"end":{"column":10,"line":528},"start":{"column":51,"line":525}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"782","location":{"end":{"column":100,"line":527},"start":{"column":36,"line":527}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"783","location":{"end":{"column":106,"line":527},"start":{"column":102,"line":527}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"784","location":{"end":{"column":10,"line":530},"start":{"column":16,"line":528}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"785","location":{"end":{"column":6,"line":534},"start":{"column":12,"line":532}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"786","location":{"end":{"column":19,"line":533},"start":{"column":14,"line":533}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"}],"source":"import { StTransport } from '../../services/st-transport/StTransport.class';\r\nimport { DomMethods } from '../../shared/dom-methods/DomMethods';\r\nimport { MessageBus } from '../../shared/message-bus/MessageBus';\r\nimport { Payment } from '../../shared/payment/Payment';\r\nimport { StJwt } from '../../shared/stjwt/StJwt';\r\nimport { Translator } from '../../shared/translator/Translator';\r\nimport { GoogleAnalytics } from '../google-analytics/GoogleAnalytics';\r\nimport { BrowserLocalStorage } from '../../../../shared/services/storage/BrowserLocalStorage';\r\nimport { Container } from 'typedi';\r\nimport { NotificationService } from '../../../../client/notification/NotificationService';\r\nimport { ConfigProvider } from '../../../../shared/services/config-provider/ConfigProvider';\r\nimport { InterFrameCommunicator } from '../../../../shared/services/message-bus/InterFrameCommunicator';\r\nimport { Observable } from 'rxjs';\r\nimport { IConfig } from '../../../../shared/model/config/IConfig';\r\nimport { IApplePay } from '../../models/IApplePay';\r\nimport {\r\n  APPLE_PAY_AMOUNT_AND_CURRENCY,\r\n  APPLE_PAY_NOT_LOGGED,\r\n  MERCHANT_VALIDATION_FAILURE,\r\n  PAYMENT_CANCELLED,\r\n  PAYMENT_ERROR,\r\n  PAYMENT_SUCCESS\r\n} from '../../models/constants/Translations';\r\n\r\nconst ApplePaySession = (window as any).ApplePaySession;\r\nconst ApplePayError = (window as any).ApplePayError;\r\nconst ApplePayContactMap: any = {\r\n  countryiso2a: 'countryCode',\r\n  email: 'emailAddress',\r\n  firstname: 'givenName',\r\n  lastname: 'familyName',\r\n  postcode: 'postalCode',\r\n  premise: 'addressLines',\r\n  telephone: 'phoneNumber',\r\n  town: 'locality'\r\n};\r\n\r\n/**\r\n * Apple Pay flow:\r\n * 1. Check if ApplePaySession class exists\r\n *    (it must be iOS 10 and later and macOS 10.12 and later).\r\n * 2. Call setApplePayVersion() to set latest available ApplePay version.\r\n * 3. Call setSupportedNetworks() to set available networks which are supported\r\n *    in this particular version of Apple Pay.\r\n * 4. Call setAmountAndCurrency() to set amount and currency hidden in provided JWT.\r\n * 5. Call createApplePayButton(), _setApplePayButtonProps() and addApplePayButton)\r\n *    to provide styled button for launching Apple Pay Process.\r\n * 6. Call applePayProcess() which checks by canMakePayments() and canMakePaymentsWithActiveCard(merchantID)\r\n *    the capability of device for making Apple Pay payments and if there is at least one card in  users Wallet.\r\n * 7. User taps / clicks ApplePayButton on page and this event triggers applePayButtonClickHandler() -\r\n *    this is obligatory process -it has to be triggered by users action.\r\n * 8. Clicking button triggers paymentProcess() which sets ApplePaySession object.\r\n * 9. Then this.session.begin() is called which begins validating merchant process and display payment sheet.\r\n * 10. this.onValidateMerchantRequest() - triggers onvalidatemerchant which literally validates merchant.\r\n * 11. this.subscribeStatusHandlers() - if merchant has been successfully validated, three handlers are set -\r\n *     onpaymentmethodselected,  onshippingmethodselected, onshippingcontactselected\r\n *     to handle customer's selections in the payment sheet to complete transaction cost.\r\n *     We've got 30 seconds to handle each event before the payment sheet times out: completePaymentMethodSelection,\r\n *     completeShippingMethodSelection, and completeShippingContactSelection\r\n * 12. Then onPaymentAuthorized() or onPaymentCanceled() has been called which completes payment with\r\n *     this.session.completePayment function or canceled it with this.session.oncancel handler.\r\n */\r\nexport class ApplePay {\r\n  get applePayButtonProps(): any {\r\n    return this._applePayButtonProps;\r\n  }\r\n\r\n  get payment(): Payment {\r\n    return this._payment;\r\n  }\r\n\r\n  set payment(value: Payment) {\r\n    this._payment = value;\r\n  }\r\n\r\n  set jwt(value: string) {\r\n    this._jwt = value;\r\n  }\r\n\r\n  get jwt(): string {\r\n    return this._jwt;\r\n  }\r\n\r\n  private static APPLE_PAY_BUTTON_ID: string = 'st-apple-pay';\r\n  private static APPLE_PAY_MIN_VERSION: number = 3;\r\n  private static APPLE_PAY_MAX_VERSION: number = 5;\r\n  private static AVAILABLE_BUTTON_STYLES = ['black', 'white', 'white-outline'];\r\n  private static AVAILABLE_BUTTON_TEXTS = ['plain', 'buy', 'book', 'donate', 'check-out', 'subscribe'];\r\n  private static BASIC_SUPPORTED_NETWORKS = [\r\n    'amex',\r\n    'chinaUnionPay',\r\n    'discover',\r\n    'interac',\r\n    'jcb',\r\n    'masterCard',\r\n    'privateLabel',\r\n    'visa'\r\n  ];\r\n  private static VERSION_4_SUPPORTED_NETWORKS = ApplePay.BASIC_SUPPORTED_NETWORKS.concat([\r\n    'cartesBancaires',\r\n    'eftpos',\r\n    'electron',\r\n    'maestro',\r\n    'vPay'\r\n  ]);\r\n  private static VERSION_5_SUPPORTED_NETWORKS = ApplePay.BASIC_SUPPORTED_NETWORKS.concat(['elo', 'mada']);\r\n\r\n  protected applePayVersion: number;\r\n  protected paymentDetails: string;\r\n  private _buttonStyle: string;\r\n  private _buttonText: string;\r\n  private _messageBus: MessageBus;\r\n  private _session: any;\r\n  private _stJwtInstance: StJwt;\r\n  private _stTransportInstance: StTransport;\r\n\r\n  private _validateMerchantRequestData = {\r\n    walletmerchantid: '',\r\n    walletrequestdomain: window.location.hostname,\r\n    walletsource: 'APPLEPAY',\r\n    walletvalidationurl: ''\r\n  };\r\n\r\n  private _jwt: string;\r\n  private _applePayButtonProps: any = {};\r\n  private _payment: Payment;\r\n  private _notification: NotificationService;\r\n  private _requestTypes: string[];\r\n  private _translator: Translator;\r\n  private _merchantId: string;\r\n  private _paymentRequest: any;\r\n  private _placement: string;\r\n  private _completion: { errors: []; status: string };\r\n  private _localStorage: BrowserLocalStorage;\r\n  private readonly _config$: Observable<IConfig>;\r\n  private _applePayConfig: IApplePay;\r\n  private _datacenterurl: string;\r\n  private _formId: string;\r\n  private _paymentCancelled: boolean = false;\r\n\r\n  constructor(private _configProvider: ConfigProvider, private _communicator: InterFrameCommunicator) {\r\n    this._notification = Container.get(NotificationService);\r\n    this._messageBus = Container.get(MessageBus);\r\n    this._localStorage = Container.get(BrowserLocalStorage);\r\n\r\n    this._config$ = this._configProvider.getConfig$();\r\n\r\n    this._config$.subscribe(config => {\r\n      const { applePay, jwt, datacenterurl, formId } = config;\r\n      if (applePay) {\r\n        // @ts-ignore\r\n        this._applePayConfig = applePay;\r\n      }\r\n      this.jwt = jwt;\r\n      this._formId = formId;\r\n      this._datacenterurl = datacenterurl;\r\n      this._onInit(this._applePayConfig.buttonText, this._applePayConfig.buttonStyle);\r\n    });\r\n    this._localStorage.setItem('completePayment', '');\r\n    this._completion = {\r\n      errors: [],\r\n      status: ApplePaySession ? this.getPaymentSuccessStatus() : ''\r\n    };\r\n\r\n    this._messageBus.subscribe(MessageBus.EVENTS_PUBLIC.UPDATE_JWT, (data: { newJwt: string }) => {\r\n      const { newJwt } = data;\r\n      this._configurePaymentProcess(newJwt);\r\n      this._setAmountAndCurrency();\r\n    });\r\n  }\r\n\r\n  protected ifApplePayIsAvailable() {\r\n    return !!ApplePaySession;\r\n  }\r\n\r\n  protected setApplePayVersion() {\r\n    for (let i = ApplePay.APPLE_PAY_MAX_VERSION; i >= ApplePay.APPLE_PAY_MIN_VERSION; --i) {\r\n      if (this._ifBrowserSupportsApplePayVersion(i)) {\r\n        this.applePayVersion = i;\r\n        return;\r\n      } else if (i === ApplePay.APPLE_PAY_MIN_VERSION) {\r\n        this.applePayVersion = ApplePay.APPLE_PAY_MIN_VERSION;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  protected createApplePayButton() {\r\n    return DomMethods.createHtmlElement.apply(this, [this._applePayButtonProps, 'a']);\r\n  }\r\n\r\n  protected isUserLoggedToAppleAccount(): boolean {\r\n    return ApplePaySession.canMakePayments();\r\n  }\r\n\r\n  protected checkApplePayWalletCardAvailability() {\r\n    return ApplePaySession.canMakePaymentsWithActiveCard(this._merchantId);\r\n  }\r\n\r\n  protected getApplePaySessionObject() {\r\n    return new ApplePaySession(this.applePayVersion, this._paymentRequest);\r\n  }\r\n\r\n  protected getPaymentSuccessStatus() {\r\n    return ApplePaySession.STATUS_SUCCESS;\r\n  }\r\n\r\n  protected getPaymentFailureStatus() {\r\n    return ApplePaySession.STATUS_FAILURE;\r\n  }\r\n\r\n  private _configurePaymentProcess(jwt: string) {\r\n    const { placement, paymentRequest, merchantId } = this._applePayConfig;\r\n    this._merchantId = merchantId;\r\n    this._placement = placement;\r\n    this.payment = new Payment();\r\n    this._paymentRequest = paymentRequest;\r\n    this._requestTypes = paymentRequest.requestTypes;\r\n    this._validateMerchantRequestData.walletmerchantid = merchantId;\r\n    this._stJwtInstance = new StJwt(jwt);\r\n    this._stTransportInstance = Container.get(StTransport);\r\n    this._translator = new Translator(this._stJwtInstance.locale);\r\n  }\r\n\r\n  private _setSupportedNetworks() {\r\n    let supportedNetworks;\r\n    if (this.applePayVersion <= ApplePay.APPLE_PAY_MIN_VERSION) {\r\n      supportedNetworks = ApplePay.BASIC_SUPPORTED_NETWORKS;\r\n    } else if (\r\n      this.applePayVersion > ApplePay.APPLE_PAY_MIN_VERSION &&\r\n      this.applePayVersion < ApplePay.APPLE_PAY_MAX_VERSION\r\n    ) {\r\n      supportedNetworks = ApplePay.VERSION_4_SUPPORTED_NETWORKS;\r\n    } else {\r\n      supportedNetworks = ApplePay.VERSION_5_SUPPORTED_NETWORKS;\r\n    }\r\n    if (this._paymentRequest.supportedNetworks.length > 0) {\r\n      const userDefinedSupportedNetworks: string[] = [];\r\n      let i;\r\n      for (i in supportedNetworks) {\r\n        if (this._paymentRequest.supportedNetworks.indexOf(supportedNetworks[i]) !== -1) {\r\n          userDefinedSupportedNetworks.push(supportedNetworks[i]);\r\n        }\r\n      }\r\n      this._paymentRequest.supportedNetworks = userDefinedSupportedNetworks;\r\n    } else {\r\n      this._paymentRequest.supportedNetworks = supportedNetworks;\r\n    }\r\n  }\r\n\r\n  private _setApplePayButtonProps(buttonText: string, buttonStyle: string) {\r\n    this._ifApplePayButtonStyleIsValid(buttonStyle)\r\n      ? (this._buttonStyle = buttonStyle)\r\n      : (this._buttonStyle = ApplePay.AVAILABLE_BUTTON_STYLES[0]);\r\n    this._ifApplePayButtonTextIsValid(buttonText)\r\n      ? (this._buttonText = buttonText)\r\n      : (this._buttonText = ApplePay.AVAILABLE_BUTTON_TEXTS[0]);\r\n\r\n    // tslint:disable-next-line: max-line-length\r\n    this._applePayButtonProps.style = `-webkit-appearance: -apple-pay-button;-apple-pay-button-type: ${this._buttonText};-apple-pay-button-style: ${this._buttonStyle};pointer-events: auto;cursor: pointer;display: flex;role: button;`;\r\n  }\r\n\r\n  private _addApplePayButton = () => DomMethods.appendChildIntoDOM(this._placement, this.createApplePayButton());\r\n\r\n  private _ifApplePayButtonTextIsValid = (buttonText: string) => ApplePay.AVAILABLE_BUTTON_TEXTS.includes(buttonText);\r\n\r\n  private _ifApplePayButtonStyleIsValid = (buttonStyle: string) =>\r\n    ApplePay.AVAILABLE_BUTTON_STYLES.includes(buttonStyle);\r\n\r\n  private _applePayButtonClickHandler() {\r\n    const button = document.getElementById(ApplePay.APPLE_PAY_BUTTON_ID);\r\n    const handler = () => {\r\n      this._paymentProcess();\r\n      button.removeEventListener('click', handler);\r\n    };\r\n\r\n    if (button) {\r\n      button.addEventListener('click', handler);\r\n    }\r\n  }\r\n\r\n  private _setAmountAndCurrency() {\r\n    if (this._paymentRequest.total.amount && this._paymentRequest.currencyCode) {\r\n      this._paymentRequest.total.amount = this._stJwtInstance.mainamount;\r\n      this._paymentRequest.currencyCode = this._stJwtInstance.currencyiso3a;\r\n    } else {\r\n      this._notification.error(APPLE_PAY_AMOUNT_AND_CURRENCY);\r\n    }\r\n    return this._paymentRequest;\r\n  }\r\n\r\n  private _onInit(buttonText: string, buttonStyle: string) {\r\n    if (this.ifApplePayIsAvailable()) {\r\n      this._configurePaymentProcess(this.jwt);\r\n      this.setApplePayVersion();\r\n      this._setSupportedNetworks();\r\n      this._setAmountAndCurrency();\r\n      this._setApplePayButtonProps(buttonText, buttonStyle);\r\n      this._addApplePayButton();\r\n      this._applePayProcess();\r\n    }\r\n  }\r\n\r\n  private _onValidateMerchantRequest() {\r\n    this._session.onvalidatemerchant = (event: any) => {\r\n      this._validateMerchantRequestData.walletvalidationurl = event.validationURL;\r\n      this._validateMerchantRequestData.walletmerchantid = this._merchantId;\r\n      return this.payment\r\n        .walletVerify(this._validateMerchantRequestData)\r\n        .then(({ response }: any) => {\r\n          GoogleAnalytics.sendGaData('event', 'Apple Pay', 'merchant validation', 'Apple Pay merchant validated');\r\n          return this._onValidateMerchantResponseSuccess(response);\r\n        })\r\n        .catch(error => {\r\n          if (this._paymentCancelled) {\r\n            return;\r\n          }\r\n          const { errorcode, errormessage } = error;\r\n          this._onValidateMerchantResponseFailure(error);\r\n          this._applePayButtonClickHandler();\r\n          this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK }, true);\r\n          this._notification.error(`${errorcode}: ${errormessage}`);\r\n          GoogleAnalytics.sendGaData(\r\n            'event',\r\n            'Apple Pay',\r\n            'merchant validation',\r\n            'Apple Pay merchant validation failure'\r\n          );\r\n        });\r\n    };\r\n  }\r\n\r\n  private _onPaymentAuthorized() {\r\n    this._session.onpaymentauthorized = (event: any) => {\r\n      this.paymentDetails = JSON.stringify(event.payment);\r\n      return this.payment\r\n        .processPayment(\r\n          this._requestTypes,\r\n          {\r\n            walletsource: this._validateMerchantRequestData.walletsource,\r\n            wallettoken: this.paymentDetails\r\n          },\r\n          DomMethods.parseForm(this._formId)\r\n        )\r\n        .then((response: any) => {\r\n          const { errorcode, errormessage } = response.response;\r\n          this._handleApplePayError(response.response);\r\n          this._session.completePayment(this._completion);\r\n          this._displayNotification(errorcode, errormessage);\r\n          GoogleAnalytics.sendGaData('event', 'Apple Pay', 'payment', 'Apple Pay payment completed');\r\n          this._localStorage.setItem('completePayment', 'true');\r\n        })\r\n        .catch(() => {\r\n          this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK }, true);\r\n          this._notification.error(PAYMENT_ERROR);\r\n          this._session.completePayment({ status: this.getPaymentFailureStatus(), errors: [] });\r\n          this._applePayButtonClickHandler();\r\n          this._localStorage.setItem('completePayment', 'true');\r\n        });\r\n    };\r\n  }\r\n\r\n  private _ifBrowserSupportsApplePayVersion = (version: number) => {\r\n    return ApplePaySession.supportsVersion(version);\r\n  };\r\n\r\n  private _onPaymentCanceled() {\r\n    this._session.oncancel = (event: any) => {\r\n      this._paymentCancelled = true;\r\n      this._notification.cancel(PAYMENT_CANCELLED);\r\n      this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_CANCEL_CALLBACK }, true);\r\n      this._messageBus.publish(\r\n        {\r\n          type: MessageBus.EVENTS_PUBLIC.TRANSACTION_COMPLETE,\r\n          data: { errorcode: 'cancelled' }\r\n        },\r\n        true\r\n      );\r\n      this._applePayButtonClickHandler();\r\n      GoogleAnalytics.sendGaData('event', 'Apple Pay', 'payment status', 'Apple Pay payment cancelled');\r\n    };\r\n  }\r\n\r\n  private _onValidateMerchantResponseSuccess(response: any): Promise<any> {\r\n    const { requestid, walletsession } = response;\r\n    if (this._paymentCancelled) {\r\n      return Promise.reject(requestid);\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      if (walletsession) {\r\n        try {\r\n          this._session.completeMerchantValidation(JSON.parse(walletsession));\r\n          resolve();\r\n        } catch (error) {\r\n          console.warn(error);\r\n          reject(requestid);\r\n        }\r\n      } else {\r\n        reject(requestid);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _onValidateMerchantResponseFailure(error: any) {\r\n    try {\r\n      this._session.abort();\r\n    } catch (error) {\r\n      console.warn(error);\r\n    }\r\n    this._notification.error(MERCHANT_VALIDATION_FAILURE);\r\n  }\r\n\r\n  private _subscribeStatusHandlers() {\r\n    this._session.onpaymentmethodselected = (event: any) => {\r\n      this._session.completePaymentMethodSelection({\r\n        newTotal: {\r\n          amount: this._paymentRequest.total.amount,\r\n          label: this._paymentRequest.total.label,\r\n          type: 'final'\r\n        }\r\n      });\r\n    };\r\n\r\n    this._session.onshippingmethodselected = (event: any) => {\r\n      this._session.completeShippingMethodSelection({\r\n        newTotal: { label: this._paymentRequest.total.label, amount: this._paymentRequest.total.amount, type: 'final' }\r\n      });\r\n    };\r\n\r\n    this._session.onshippingcontactselected = (event: any) => {\r\n      this._session.completeShippingContactSelection({\r\n        newTotal: { label: this._paymentRequest.total.label, amount: this._paymentRequest.total.amount, type: 'final' }\r\n      });\r\n    };\r\n  }\r\n\r\n  private _paymentProcess() {\r\n    this._paymentCancelled = false;\r\n    this._localStorage.setItem('completePayment', 'false');\r\n    this._session = this.getApplePaySessionObject();\r\n    this._onPaymentCanceled();\r\n    this._subscribeStatusHandlers();\r\n    this._onPaymentAuthorized();\r\n    this._onValidateMerchantRequest();\r\n    try {\r\n      this._session.begin();\r\n    } catch (error) {\r\n      console.warn(error);\r\n    }\r\n  }\r\n\r\n  private _applePayProcess() {\r\n    if (ApplePaySession) {\r\n      if (this.isUserLoggedToAppleAccount()) {\r\n        this.checkApplePayWalletCardAvailability().then(() => {\r\n          this._applePayButtonClickHandler();\r\n          GoogleAnalytics.sendGaData('event', 'Apple Pay', 'init', 'Apple Pay can make payments');\r\n        });\r\n      } else {\r\n        this._addButtonHandler(ApplePay.APPLE_PAY_BUTTON_ID, 'click', 'error', APPLE_PAY_NOT_LOGGED);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _handleApplePayError(errorObject: any) {\r\n    const { errorcode } = errorObject;\r\n    if (this._ifBrowserSupportsApplePayVersion(this.applePayVersion)) {\r\n      if (errorcode !== '0') {\r\n        const { errormessage } = errorObject;\r\n        let errordata = String(errorObject.data); // not sure this line - I can't force ApplePay to throw such error.\r\n        const error = new ApplePayError('unknown');\r\n        error.message = this._translator.translate(errormessage);\r\n        if (errorcode === '30000') {\r\n          if (errordata.lastIndexOf('billing', 0) === 0) {\r\n            error.code = 'billingContactInvalid';\r\n            errordata = errordata.slice(7);\r\n          } else if (errordata.lastIndexOf('customer', 0) === 0) {\r\n            error.code = 'shippingContactInvalid';\r\n            errordata = errordata.slice(8);\r\n          }\r\n          if (typeof ApplePayContactMap[errordata] !== 'undefined') {\r\n            error.contactField = ApplePayContactMap[errordata];\r\n          } else if (error.code !== 'unknown') {\r\n            error.code = 'addressUnserviceable';\r\n          }\r\n        }\r\n        if (error.code !== 'unknown') {\r\n          // @ts-ignore\r\n          this._completion.errors = [error];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (errorcode === '0') {\r\n      this._completion.status = this.getPaymentSuccessStatus();\r\n    } else {\r\n      this._applePayButtonClickHandler();\r\n      this._completion.status = this.getPaymentFailureStatus();\r\n    }\r\n\r\n    return this._completion;\r\n  }\r\n\r\n  private _displayNotification(errorcode: string, errormessage: string) {\r\n    if (errorcode === '0') {\r\n      this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_SUCCESS_CALLBACK }, true);\r\n      this._notification.success(PAYMENT_SUCCESS);\r\n    } else {\r\n      this._notification.error(errormessage);\r\n    }\r\n  }\r\n\r\n  private _addButtonHandler(id: string, event: string, notification: string, message: string) {\r\n    const element: HTMLButtonElement = document.getElementById(id) as HTMLButtonElement;\r\n    const eventType: string = event ? event : 'click';\r\n    const notificationType: string = notification;\r\n    if (element) {\r\n      element.addEventListener(eventType, () => {\r\n        if (notificationType === 'success') {\r\n          this._notification.success(message);\r\n          this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_SUCCESS_CALLBACK }, true);\r\n        } else if (notificationType === 'error') {\r\n          this._notification.error(message);\r\n          this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK }, true);\r\n        } else if (notificationType === 'cancel') {\r\n          this._notification.cancel(message);\r\n          this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_CANCEL_CALLBACK }, true);\r\n        } else {\r\n          this._notification.info(message);\r\n        }\r\n      });\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\apple-pay\\ApplePayErrorMock.ts":{"language":"typescript","mutants":[{"id":"787","location":{"end":{"column":4,"line":9},"start":{"column":75,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"export class ApplePayErrorMock {\r\n  private _errorCode: string;\r\n  private _contactField: string;\r\n  private _message: string;\r\n  constructor(errorCode: string, contactField?: string, message?: string) {\r\n    this._errorCode = errorCode;\r\n    this._contactField = contactField;\r\n    this._message = message;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\apple-pay\\ApplePayMock.ts":{"language":"typescript","mutants":[{"id":"788","location":{"end":{"column":47,"line":5},"start":{"column":26,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"789","location":{"end":{"column":4,"line":12},"start":{"column":34,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"791","location":{"end":{"column":4,"line":16},"start":{"column":31,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"790","location":{"end":{"column":16,"line":11},"start":{"column":12,"line":11}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"792","location":{"end":{"column":4,"line":20},"start":{"column":39,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"793","location":{"end":{"column":16,"line":19},"start":{"column":12,"line":19}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"794","location":{"end":{"column":4,"line":26},"start":{"column":48,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"796","location":{"end":{"column":19,"line":24},"start":{"column":15,"line":24}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"795","location":{"end":{"column":6,"line":25},"start":{"column":45,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"797","location":{"end":{"column":4,"line":30},"start":{"column":37,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"798","location":{"end":{"column":4,"line":34},"start":{"column":36,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"799","location":{"end":{"column":4,"line":38},"start":{"column":36,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"800","location":{"end":{"column":4,"line":42},"start":{"column":33,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"801","location":{"end":{"column":99,"line":41},"start":{"column":53,"line":41}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"802","location":{"end":{"column":91,"line":41},"start":{"column":54,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"803","location":{"end":{"column":89,"line":41},"start":{"column":75,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"804","location":{"end":{"column":98,"line":41},"start":{"column":93,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { DomMethods } from '../../shared/dom-methods/DomMethods';\r\nimport { ApplePay } from './ApplePay';\r\nimport { ApplePaySessionMock } from './ApplePaySessionMock';\r\n\r\nconst applePay: string = './img/apple-pay.png';\r\n\r\nexport class ApplePayMock extends ApplePay {\r\n  public paymentDetails: string;\r\n\r\n  public ifApplePayIsAvailable() {\r\n    return true;\r\n  }\r\n\r\n  public setApplePayVersion() {\r\n    this.applePayVersion = 5;\r\n  }\r\n\r\n  public isUserLoggedToAppleAccount() {\r\n    return true;\r\n  }\r\n\r\n  public checkApplePayWalletCardAvailability() {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(true);\r\n    });\r\n  }\r\n\r\n  public getApplePaySessionObject() {\r\n    return ApplePaySessionMock;\r\n  }\r\n\r\n  public getPaymentSuccessStatus() {\r\n    return ApplePaySessionMock.STATUS_SUCCESS;\r\n  }\r\n\r\n  public getPaymentFailureStatus() {\r\n    return ApplePaySessionMock.STATUS_FAILURE;\r\n  }\r\n\r\n  public createApplePayButton() {\r\n    return DomMethods.createHtmlElement.apply(this, [{ src: applePay, id: 'st-apple-pay' }, 'img']);\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\apple-pay\\ApplePaySessionMock.ts":{"language":"typescript","mutants":[{"id":"805","location":{"end":{"column":48,"line":5},"start":{"column":39,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"807","location":{"end":{"column":45,"line":10},"start":{"column":41,"line":10}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"806","location":{"end":{"column":45,"line":10},"start":{"column":35,"line":10}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"808","location":{"end":{"column":56,"line":12},"start":{"column":46,"line":12}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"809","location":{"end":{"column":56,"line":12},"start":{"column":52,"line":12}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"810","location":{"end":{"column":60,"line":14},"start":{"column":50,"line":14}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"812","location":{"end":{"column":4,"line":24},"start":{"column":25,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"811","location":{"end":{"column":60,"line":14},"start":{"column":56,"line":14}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"813","location":{"end":{"column":8,"line":20},"start":{"column":32,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"814","location":{"end":{"column":8,"line":23},"start":{"column":28,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"815","location":{"end":{"column":4,"line":35},"start":{"column":45,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"816","location":{"end":{"column":34,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"817","location":{"end":{"column":34,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"818","location":{"end":{"column":34,"line":27},"start":{"column":9,"line":27}},"mutatorName":"EqualityOperator","replacement":"data.status !== 'SUCCESS'","status":"Survived"},{"id":"819","location":{"end":{"column":34,"line":27},"start":{"column":25,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"820","location":{"end":{"column":6,"line":30},"start":{"column":36,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"821","location":{"end":{"column":6,"line":33},"start":{"column":12,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { environment } from '../../../../environments/environment';\r\n\r\nexport class ApplePaySessionMock {\r\n  public static STATUS_SUCCESS: any;\r\n  public static STATUS_FAILURE: any = 'FAILURE';\r\n  public static onvalidatemerchant: any;\r\n  public static onpaymentauthorized: any;\r\n  public static oncancel: any;\r\n\r\n  public static completePayment = () => true;\r\n\r\n  public static completeMerchantValidation = () => true;\r\n\r\n  public static completePaymentMethodSelection = () => true;\r\n\r\n  public static begin() {\r\n    return fetch(environment.APPLE_PAY_URLS.MOCK_DATA_URL)\r\n      .then((response: any) => {\r\n        return response.json();\r\n      })\r\n      .then((data: any) => {\r\n        this._handleResponse(data);\r\n      });\r\n  }\r\n\r\n  private static _handleResponse(data: any) {\r\n    if (data.status === 'SUCCESS') {\r\n      this.STATUS_SUCCESS = data.status;\r\n      this.onpaymentauthorized(data);\r\n    } else {\r\n      this.STATUS_FAILURE = data.status;\r\n      this.oncancel(data);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\cardinal-commerce\\CardinalCommerce.ts":{"language":"typescript","mutants":[{"id":"822","location":{"end":{"column":4,"line":33},"start":{"column":38,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"823","location":{"end":{"column":24,"line":31},"start":{"column":13,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"824","location":{"end":{"column":22,"line":32},"start":{"column":12,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"826","location":{"end":{"column":88,"line":55},"start":{"column":14,"line":55}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"825","location":{"end":{"column":4,"line":64},"start":{"column":5,"line":51}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"827","location":{"end":{"column":88,"line":55},"start":{"column":22,"line":55}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"828","location":{"end":{"column":88,"line":55},"start":{"column":22,"line":55}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"829","location":{"end":{"column":88,"line":55},"start":{"column":22,"line":55}},"mutatorName":"EqualityOperator","replacement":"data[0].ErrorNumber === CardinalCommerce.CARDINAL_VALIDATION_ERROR","status":"Survived"},{"id":"830","location":{"end":{"column":28,"line":60},"start":{"column":13,"line":60}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"831","location":{"end":{"column":51,"line":61},"start":{"column":16,"line":61}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"832","location":{"end":{"column":51,"line":61},"start":{"column":24,"line":61}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"833","location":{"end":{"column":51,"line":61},"start":{"column":24,"line":61}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"834","location":{"end":{"column":51,"line":61},"start":{"column":24,"line":61}},"mutatorName":"EqualityOperator","replacement":"data.ActionCode !== 'ERROR'","status":"Survived"},{"id":"835","location":{"end":{"column":51,"line":61},"start":{"column":44,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"836","location":{"end":{"column":85,"line":63},"start":{"column":18,"line":63}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"837","location":{"end":{"column":4,"line":75},"start":{"column":48,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"838","location":{"end":{"column":96,"line":68},"start":{"column":17,"line":68}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"839","location":{"end":{"column":56,"line":69},"start":{"column":11,"line":69}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"840","location":{"end":{"column":100,"line":70},"start":{"column":11,"line":70}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"841","location":{"end":{"column":51,"line":70},"start":{"column":44,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"842","location":{"end":{"column":63,"line":70},"start":{"column":53,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"843","location":{"end":{"column":71,"line":70},"start":{"column":65,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"846","location":{"end":{"column":6,"line":88},"start":{"column":36,"line":82}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"845","location":{"end":{"column":4,"line":101},"start":{"column":44,"line":81}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"844","location":{"end":{"column":99,"line":70},"start":{"column":73,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"847","location":{"end":{"column":37,"line":85},"start":{"column":16,"line":85}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"848","location":{"end":{"column":85,"line":91},"start":{"column":17,"line":91}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"849","location":{"end":{"column":81,"line":92},"start":{"column":17,"line":92}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"850","location":{"end":{"column":109,"line":93},"start":{"column":11,"line":93}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"851","location":{"end":{"column":108,"line":94},"start":{"column":17,"line":94}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"852","location":{"end":{"column":99,"line":95},"start":{"column":11,"line":95}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"853","location":{"end":{"column":51,"line":95},"start":{"column":44,"line":95}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"854","location":{"end":{"column":63,"line":95},"start":{"column":53,"line":95}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"856","location":{"end":{"column":98,"line":95},"start":{"column":73,"line":95}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"855","location":{"end":{"column":71,"line":95},"start":{"column":65,"line":95}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"858","location":{"end":{"column":8,"line":99},"start":{"column":19,"line":96}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"857","location":{"end":{"column":9,"line":99},"start":{"column":11,"line":96}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"859","location":{"end":{"column":4,"line":111},"start":{"column":102,"line":103}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"860","location":{"end":{"column":33,"line":106},"start":{"column":9,"line":106}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"861","location":{"end":{"column":33,"line":106},"start":{"column":9,"line":106}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"863","location":{"end":{"column":6,"line":108},"start":{"column":35,"line":106}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"862","location":{"end":{"column":33,"line":106},"start":{"column":9,"line":106}},"mutatorName":"LogicalOperator","replacement":"threedinit || cachetoken","status":"Survived"},{"id":"864","location":{"end":{"column":83,"line":107},"start":{"column":40,"line":107}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"865","location":{"end":{"column":4,"line":123},"start":{"column":80,"line":113}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"866","location":{"end":{"column":51,"line":115},"start":{"column":11,"line":115}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"867","location":{"end":{"column":11,"line":120},"start":{"column":11,"line":116}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"868","location":{"end":{"column":10,"line":120},"start":{"column":33,"line":117}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"869","location":{"end":{"column":4,"line":153},"start":{"column":117,"line":125}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"870","location":{"end":{"column":8,"line":151},"start":{"column":29,"line":127}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"871","location":{"end":{"column":10,"line":132},"start":{"column":62,"line":130}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"873","location":{"end":{"column":94,"line":131},"start":{"column":90,"line":131}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"872","location":{"end":{"column":88,"line":131},"start":{"column":35,"line":131}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"874","location":{"end":{"column":10,"line":135},"start":{"column":61,"line":133}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"875","location":{"end":{"column":88,"line":134},"start":{"column":35,"line":134}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"876","location":{"end":{"column":94,"line":134},"start":{"column":90,"line":134}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"877","location":{"end":{"column":10,"line":138},"start":{"column":91,"line":136}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"880","location":{"end":{"column":12,"line":145},"start":{"column":59,"line":141}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"878","location":{"end":{"column":51,"line":137},"start":{"column":40,"line":137}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"879","location":{"end":{"column":10,"line":150},"start":{"column":54,"line":140}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"881","location":{"end":{"column":85,"line":144},"start":{"column":37,"line":144}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"882","location":{"end":{"column":91,"line":144},"start":{"column":87,"line":144}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"883","location":{"end":{"column":12,"line":149},"start":{"column":46,"line":147}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"884","location":{"end":{"column":4,"line":167},"start":{"column":80,"line":155}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"885","location":{"end":{"column":6,"line":166},"start":{"column":39,"line":156}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"886","location":{"end":{"column":92,"line":159},"start":{"column":18,"line":159}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"887","location":{"end":{"column":92,"line":159},"start":{"column":26,"line":159}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"888","location":{"end":{"column":92,"line":159},"start":{"column":26,"line":159}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"889","location":{"end":{"column":92,"line":159},"start":{"column":26,"line":159}},"mutatorName":"EqualityOperator","replacement":"data[0].ErrorNumber !== CardinalCommerce.CARDINAL_VALIDATION_ERROR","status":"Survived"},{"id":"890","location":{"end":{"column":4,"line":213},"start":{"column":99,"line":169}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"892","location":{"end":{"column":116,"line":170},"start":{"column":46,"line":170}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"891","location":{"end":{"column":116,"line":170},"start":{"column":46,"line":170}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"893","location":{"end":{"column":116,"line":170},"start":{"column":46,"line":170}},"mutatorName":"LogicalOperator","replacement":"responseObject.enrolled === 'Y' || responseObject.acsurl !== undefined","status":"Survived"},{"id":"894","location":{"end":{"column":77,"line":170},"start":{"column":46,"line":170}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"896","location":{"end":{"column":77,"line":170},"start":{"column":46,"line":170}},"mutatorName":"EqualityOperator","replacement":"responseObject.enrolled !== 'Y'","status":"Survived"},{"id":"895","location":{"end":{"column":77,"line":170},"start":{"column":46,"line":170}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"897","location":{"end":{"column":77,"line":170},"start":{"column":74,"line":170}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"898","location":{"end":{"column":116,"line":170},"start":{"column":81,"line":170}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"899","location":{"end":{"column":116,"line":170},"start":{"column":81,"line":170}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"900","location":{"end":{"column":116,"line":170},"start":{"column":81,"line":170}},"mutatorName":"EqualityOperator","replacement":"responseObject.acsurl === undefined","status":"Survived"},{"id":"901","location":{"end":{"column":42,"line":172},"start":{"column":9,"line":172}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"902","location":{"end":{"column":42,"line":172},"start":{"column":9,"line":172}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"904","location":{"end":{"column":6,"line":174},"start":{"column":44,"line":172}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"903","location":{"end":{"column":42,"line":172},"start":{"column":9,"line":172}},"mutatorName":"BooleanLiteral","replacement":"isCardEnrolledAndNotFrictionless","status":"Survived"},{"id":"905","location":{"end":{"column":6,"line":191},"start":{"column":55,"line":176}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"906","location":{"end":{"column":10,"line":182},"start":{"column":9,"line":179}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"907","location":{"end":{"column":10,"line":188},"start":{"column":9,"line":183}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"908","location":{"end":{"column":19,"line":184},"start":{"column":17,"line":184}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"909","location":{"end":{"column":12,"line":187},"start":{"column":25,"line":185}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"910","location":{"end":{"column":49,"line":194},"start":{"column":11,"line":194}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"911","location":{"end":{"column":103,"line":195},"start":{"column":11,"line":195}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"912","location":{"end":{"column":51,"line":195},"start":{"column":44,"line":195}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"914","location":{"end":{"column":71,"line":195},"start":{"column":65,"line":195}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"913","location":{"end":{"column":63,"line":195},"start":{"column":53,"line":195}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"915","location":{"end":{"column":102,"line":195},"start":{"column":73,"line":195}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"916","location":{"end":{"column":82,"line":196},"start":{"column":17,"line":196}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"917","location":{"end":{"column":8,"line":211},"start":{"column":78,"line":197}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"918","location":{"end":{"column":52,"line":200},"start":{"column":11,"line":199}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"919","location":{"end":{"column":52,"line":200},"start":{"column":11,"line":199}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"920","location":{"end":{"column":52,"line":200},"start":{"column":11,"line":199}},"mutatorName":"LogicalOperator","replacement":"!CardinalCommerceValidationStatus.includes(validationResult.ActionCode) && validationResult.ActionCode === 'FAILURE'","status":"Survived"},{"id":"921","location":{"end":{"column":82,"line":199},"start":{"column":11,"line":199}},"mutatorName":"BooleanLiteral","replacement":"CardinalCommerceValidationStatus.includes(validationResult.ActionCode)","status":"Survived"},{"id":"924","location":{"end":{"column":52,"line":200},"start":{"column":11,"line":200}},"mutatorName":"EqualityOperator","replacement":"validationResult.ActionCode !== 'FAILURE'","status":"Survived"},{"id":"922","location":{"end":{"column":52,"line":200},"start":{"column":11,"line":200}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"923","location":{"end":{"column":52,"line":200},"start":{"column":11,"line":200}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"925","location":{"end":{"column":52,"line":200},"start":{"column":43,"line":200}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"926","location":{"end":{"column":10,"line":208},"start":{"column":11,"line":201}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"927","location":{"end":{"column":4,"line":234},"start":{"column":57,"line":215}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"928","location":{"end":{"column":61,"line":219},"start":{"column":19,"line":219}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"930","location":{"end":{"column":6,"line":233},"start":{"column":35,"line":228}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"929","location":{"end":{"column":110,"line":226},"start":{"column":18,"line":226}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import { environment } from '../../../../environments/environment';\r\nimport { CardinalCommerceValidationStatus } from '../../models/constants/CardinalCommerceValidationStatus';\r\nimport { PaymentBrand } from '../../models/constants/PaymentBrand';\r\nimport { PaymentEvents } from '../../models/constants/PaymentEvents';\r\nimport { IMessageBusEvent } from '../../models/IMessageBusEvent';\r\nimport { IOnCardinalValidated } from '../../models/IOnCardinalValidated';\r\nimport { IThreeDQueryResponse } from '../../models/IThreeDQueryResponse';\r\nimport { StCodec } from '../../services/st-codec/StCodec.class';\r\nimport { MessageBus } from '../../shared/message-bus/MessageBus';\r\nimport { GoogleAnalytics } from '../google-analytics/GoogleAnalytics';\r\nimport { Service } from 'typedi';\r\nimport { FramesHub } from '../../../../shared/services/message-bus/FramesHub';\r\nimport { NotificationService } from '../../../../client/notification/NotificationService';\r\nimport { IConfig } from '../../../../shared/model/config/IConfig';\r\nimport { CardinalCommerceTokensProvider } from './CardinalCommerceTokensProvider';\r\nimport { filter, first, map, mapTo, shareReplay, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { ICardinalCommerceTokens } from './ICardinalCommerceTokens';\r\nimport { from, Observable, of, Subject, throwError } from 'rxjs';\r\nimport { ICardinal } from './ICardinal';\r\nimport { ofType } from '../../../../shared/services/message-bus/operators/ofType';\r\nimport { ICard } from '../../models/ICard';\r\nimport { IMerchantData } from '../../models/IMerchantData';\r\nimport { StTransport } from '../../services/st-transport/StTransport.class';\r\nimport { CardinalProvider } from './CardinalProvider';\r\nimport { IAuthorizePaymentResponse } from '../../models/IAuthorizePaymentResponse';\r\nimport { COMMUNICATION_ERROR_INVALID_RESPONSE } from '../../models/constants/Translations';\r\n\r\n@Service()\r\nexport class CardinalCommerce {\r\n  public static readonly UI_EVENTS = {\r\n    RENDER: 'ui.render',\r\n    CLOSE: 'ui.close'\r\n  };\r\n  private static readonly CARDINAL_VALIDATION_ERROR = 4000;\r\n  private cardinalTokens: ICardinalCommerceTokens;\r\n  private cardinal$: Observable<ICardinal>;\r\n  private cardinalValidated$: Subject<[IOnCardinalValidated, string]>;\r\n  // cardinal.start always throws validation error\r\n  // we ignore it, but use it to track when the start request has completed\r\n  private cardinalValidatedWithoutValidationError$: Observable<[IOnCardinalValidated, string]>;\r\n\r\n  private destroy$: Observable<void>;\r\n\r\n  constructor(\r\n    private messageBus: MessageBus,\r\n    private notification: NotificationService,\r\n    private framesHub: FramesHub,\r\n    private tokenProvider: CardinalCommerceTokensProvider,\r\n    private stTransport: StTransport,\r\n    private cardinalProvider: CardinalProvider\r\n  ) {\r\n    this.destroy$ = this.messageBus.pipe(ofType(MessageBus.EVENTS_PUBLIC.DESTROY), mapTo(void 0));\r\n    this.cardinalValidated$ = new Subject<[IOnCardinalValidated, string]>();\r\n    this.cardinalValidatedWithoutValidationError$ = this.cardinalValidated$.pipe(\r\n      filter(data => data[0].ErrorNumber !== CardinalCommerce.CARDINAL_VALIDATION_ERROR)\r\n    );\r\n\r\n    this.cardinalValidatedWithoutValidationError$\r\n      .pipe(\r\n        map(data => data[0]),\r\n        filter(data => data.ActionCode === 'ERROR')\r\n      )\r\n      .subscribe(() => this.notification.error(COMMUNICATION_ERROR_INVALID_RESPONSE));\r\n  }\r\n\r\n  init(config: IConfig): Observable<ICardinal> {\r\n    this.cardinal$ = this.acquireInitialCardinalCommerceTokens(config).pipe(\r\n      switchMap(tokens => this.setupCardinalCommerceLibrary(tokens, Boolean(config.livestatus))),\r\n      tap(cardinal => this._initSubscriptions(cardinal)),\r\n      tap(() => GoogleAnalytics.sendGaData('event', 'Cardinal', 'init', 'Cardinal Setup Completed')),\r\n      shareReplay(1)\r\n    );\r\n\r\n    return this.cardinal$;\r\n  }\r\n\r\n  performThreeDQuery(\r\n    requestTypes: string[],\r\n    card: ICard,\r\n    merchantData: IMerchantData\r\n  ): Observable<IAuthorizePaymentResponse> {\r\n    const threeDQueryRequestBody = {\r\n      cachetoken: this.cardinalTokens.cacheToken,\r\n      requesttypedescriptions: requestTypes,\r\n      termurl: 'https://termurl.com', // TODO this shouldn't be needed but currently the backend needs this\r\n      ...merchantData,\r\n      ...card\r\n    };\r\n\r\n    return this.cardinal$.pipe(\r\n      switchMap(cardinal => this.startTransaction(cardinal, this.cardinalTokens.jwt)),\r\n      switchMap(() => from(this.stTransport.sendRequest(threeDQueryRequestBody))),\r\n      tap((response: { response: IThreeDQueryResponse }) => (this.stTransport._threeDQueryResult = response)),\r\n      switchMap((response: { response: IThreeDQueryResponse }) => this._authenticateCard(response.response)),\r\n      tap(() => GoogleAnalytics.sendGaData('event', 'Cardinal', 'auth', 'Cardinal auth completed')),\r\n      map(jwt => ({\r\n        threedresponse: jwt,\r\n        cachetoken: this.cardinalTokens.cacheToken\r\n      }))\r\n    );\r\n  }\r\n\r\n  private acquireInitialCardinalCommerceTokens(config: IConfig): Observable<ICardinalCommerceTokens> {\r\n    const { threedinit, cachetoken } = config.init;\r\n\r\n    if (threedinit && cachetoken) {\r\n      return of((this.cardinalTokens = { jwt: threedinit, cacheToken: cachetoken }));\r\n    }\r\n\r\n    return this.acquireCardinalCommerceTokens();\r\n  }\r\n\r\n  private acquireCardinalCommerceTokens(): Observable<ICardinalCommerceTokens> {\r\n    return this.tokenProvider.getTokens().pipe(\r\n      tap(tokens => (this.cardinalTokens = tokens)),\r\n      tap(tokens =>\r\n        this.messageBus.publish({\r\n          type: MessageBus.EVENTS_PUBLIC.CARDINAL_COMMERCE_TOKENS_ACQUIRED,\r\n          data: tokens\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private setupCardinalCommerceLibrary(tokens: ICardinalCommerceTokens, liveStatus: boolean): Observable<ICardinal> {\r\n    return this.cardinalProvider.getCardinal$(liveStatus).pipe(\r\n      switchMap(cardinal => {\r\n        cardinal.configure(environment.CARDINAL_COMMERCE.CONFIG);\r\n\r\n        cardinal.on(CardinalCommerce.UI_EVENTS.RENDER, () => {\r\n          this.messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CONTROL_FRAME_SHOW }, true);\r\n        });\r\n        cardinal.on(CardinalCommerce.UI_EVENTS.CLOSE, () => {\r\n          this.messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CONTROL_FRAME_HIDE }, true);\r\n        });\r\n        cardinal.on(PaymentEvents.VALIDATED, (data: IOnCardinalValidated, jwt: string) => {\r\n          this.cardinalValidated$.next([data, jwt]);\r\n        });\r\n\r\n        return new Observable<ICardinal>(observer => {\r\n          cardinal.on(PaymentEvents.SETUP_COMPLETE, () => {\r\n            observer.next(cardinal);\r\n            observer.complete();\r\n            this.messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.UNLOCK_BUTTON }, true);\r\n          });\r\n\r\n          cardinal.setup(PaymentEvents.INIT, {\r\n            jwt: tokens.jwt\r\n          });\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  private startTransaction(cardinal: ICardinal, jwt: string): Observable<void> {\r\n    return new Observable(observer => {\r\n      this.cardinalValidated$\r\n        .pipe(\r\n          filter(data => data[0].ErrorNumber === CardinalCommerce.CARDINAL_VALIDATION_ERROR),\r\n          first(),\r\n          mapTo(undefined)\r\n        )\r\n        .subscribe(observer);\r\n\r\n      cardinal.start(PaymentBrand, {}, jwt);\r\n    });\r\n  }\r\n\r\n  private _authenticateCard(responseObject: IThreeDQueryResponse): Observable<string | undefined> {\r\n    const isCardEnrolledAndNotFrictionless = responseObject.enrolled === 'Y' && responseObject.acsurl !== undefined;\r\n\r\n    if (!isCardEnrolledAndNotFrictionless) {\r\n      return of(undefined);\r\n    }\r\n\r\n    const cardinalContinue = (cardinal: ICardinal) => {\r\n      cardinal.continue(\r\n        PaymentBrand,\r\n        {\r\n          AcsUrl: responseObject.acsurl,\r\n          Payload: responseObject.threedpayload\r\n        },\r\n        {\r\n          Cart: [],\r\n          OrderDetails: {\r\n            TransactionId: responseObject.acquirertransactionreference\r\n          }\r\n        },\r\n        this.cardinalTokens.jwt\r\n      );\r\n    };\r\n\r\n    return this.cardinal$.pipe(\r\n      tap(cardinal => cardinalContinue(cardinal)),\r\n      tap(() => GoogleAnalytics.sendGaData('event', 'Cardinal', 'auth', 'Cardinal card authenticated')),\r\n      switchMap(() => this.cardinalValidatedWithoutValidationError$.pipe(first())),\r\n      switchMap(([validationResult, jwt]: [IOnCardinalValidated, string]) => {\r\n        if (\r\n          !CardinalCommerceValidationStatus.includes(validationResult.ActionCode) ||\r\n          validationResult.ActionCode === 'FAILURE'\r\n        ) {\r\n          StCodec.publishResponse(\r\n            this.stTransport._threeDQueryResult.response,\r\n            this.stTransport._threeDQueryResult.jwt,\r\n            jwt\r\n          );\r\n          return throwError(validationResult);\r\n        }\r\n\r\n        return of(jwt);\r\n      })\r\n    );\r\n  }\r\n\r\n  private _initSubscriptions(cardinal: ICardinal): void {\r\n    this.messageBus\r\n      .pipe(\r\n        ofType(MessageBus.EVENTS_PUBLIC.UPDATE_JWT),\r\n        switchMap(() => this.acquireCardinalCommerceTokens()),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe();\r\n\r\n    this.messageBus\r\n      .pipe(ofType(MessageBus.EVENTS_PUBLIC.BIN_PROCESS), takeUntil(this.destroy$))\r\n      .subscribe((event: IMessageBusEvent<string>) => cardinal.trigger(PaymentEvents.BIN_PROCESS, event.data));\r\n\r\n    this.destroy$.subscribe(() => {\r\n      cardinal.off(PaymentEvents.SETUP_COMPLETE);\r\n      cardinal.off(PaymentEvents.VALIDATED);\r\n      cardinal.off(CardinalCommerce.UI_EVENTS.RENDER);\r\n      cardinal.off(CardinalCommerce.UI_EVENTS.CLOSE);\r\n    });\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\cardinal-commerce\\CardinalCommerceTokensProvider.ts":{"language":"typescript","mutants":[{"id":"931","location":{"end":{"column":4,"line":24},"start":{"column":52,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"932","location":{"end":{"column":11,"line":20},"start":{"column":11,"line":16}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"933","location":{"end":{"column":10,"line":20},"start":{"column":33,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"934","location":{"end":{"column":86,"line":22},"start":{"column":11,"line":22}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"937","location":{"end":{"column":86,"line":28},"start":{"column":11,"line":28}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"936","location":{"end":{"column":4,"line":30},"start":{"column":71,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"935","location":{"end":{"column":85,"line":22},"start":{"column":24,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { ICardinalCommerceTokens } from './ICardinalCommerceTokens';\r\nimport { ThreeDInitRequest } from './ThreeDInitRequest';\r\nimport { IThreeDInitResponse } from '../../models/IThreeDInitResponse';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { StTransport } from '../../services/st-transport/StTransport.class';\r\nimport { MessageBus } from '../../shared/message-bus/MessageBus';\r\n\r\n@Service()\r\nexport class CardinalCommerceTokensProvider {\r\n  constructor(private stTransport: StTransport, private messageBus: MessageBus) {}\r\n\r\n  getTokens(): Observable<ICardinalCommerceTokens> {\r\n    return this.performThreeDInitRequest().pipe(\r\n      tap((response: IThreeDInitResponse) =>\r\n        this.messageBus.publish({\r\n          data: response,\r\n          type: MessageBus.EVENTS_PUBLIC.JSINIT_RESPONSE\r\n        })\r\n      ),\r\n      map(response => ({ cacheToken: response.cachetoken, jwt: response.threedinit }))\r\n    );\r\n  }\r\n\r\n  private performThreeDInitRequest(): Observable<IThreeDInitResponse> {\r\n    return from(this.stTransport.sendRequest(new ThreeDInitRequest())).pipe(\r\n      map((result: { jwt: string; response: IThreeDInitResponse }) => result.response)\r\n    );\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\cardinal-commerce\\CardinalProvider.ts":{"language":"typescript","mutants":[{"id":"938","location":{"end":{"column":57,"line":13},"start":{"column":39,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"939","location":{"end":{"column":4,"line":36},"start":{"column":60,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"940","location":{"end":{"column":6,"line":23},"start":{"column":27,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"941","location":{"end":{"column":47,"line":25},"start":{"column":41,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"942","location":{"end":{"column":37,"line":33},"start":{"column":9,"line":27}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import { from, interval, Observable } from 'rxjs';\r\nimport { ICardinal } from './ICardinal';\r\nimport { Service } from 'typedi';\r\nimport { DomMethods } from '../../shared/dom-methods/DomMethods';\r\nimport { delay, filter, first, map, switchMap } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ICardinalProvider } from './ICardinalProvider';\r\n\r\ndeclare const Cardinal: ICardinal;\r\n\r\n@Service()\r\nexport class CardinalProvider implements ICardinalProvider {\r\n  private static readonly SCRIPT_ID = 'cardinalCommerce';\r\n\r\n  getCardinal$(liveStatus: boolean): Observable<ICardinal> {\r\n    const sdkAddress = liveStatus\r\n      ? environment.CARDINAL_COMMERCE.SONGBIRD_LIVE_URL\r\n      : environment.CARDINAL_COMMERCE.SONGBIRD_TEST_URL;\r\n\r\n    const scriptOptions = {\r\n      src: sdkAddress,\r\n      id: CardinalProvider.SCRIPT_ID\r\n    };\r\n\r\n    return from(DomMethods.insertScript('head', scriptOptions)).pipe(\r\n      switchMap(\r\n        () =>\r\n          interval().pipe(\r\n            // @ts-ignore\r\n            map(() => window.Cardinal),\r\n            filter(Boolean),\r\n            first()\r\n          ) as Observable<ICardinal>\r\n      )\r\n    );\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\cardinal-commerce\\ThreeDInitRequest.ts":{"language":"typescript","mutants":[{"id":"944","location":{"end":{"column":47,"line":4},"start":{"column":39,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"943","location":{"end":{"column":48,"line":4},"start":{"column":38,"line":4}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import { IStRequest } from '../../models/IStRequest';\r\n\r\nexport class ThreeDInitRequest implements IStRequest {\r\n  readonly requesttypedescriptions = ['JSINIT'];\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\cybertonica\\Cybertonica.ts":{"language":"typescript","mutants":[{"id":"945","location":{"end":{"column":43,"line":14},"start":{"column":35,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"947","location":{"end":{"column":45,"line":16},"start":{"column":36,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"946","location":{"end":{"column":48,"line":15},"start":{"column":42,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"948","location":{"end":{"column":4,"line":23},"start":{"column":40,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"950","location":{"end":{"column":38,"line":22},"start":{"column":12,"line":22}},"mutatorName":"ArithmeticOperator","replacement":"'https://' - link.hostname","status":"Survived"},{"id":"951","location":{"end":{"column":22,"line":22},"start":{"column":12,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"949","location":{"end":{"column":44,"line":20},"start":{"column":41,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"952","location":{"end":{"column":4,"line":31},"start":{"column":53,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"954","location":{"end":{"column":4,"line":35},"start":{"column":57,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"953","location":{"end":{"column":49,"line":29},"start":{"column":47,"line":29}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"957","location":{"end":{"column":76,"line":39},"start":{"column":55,"line":38}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"956","location":{"end":{"column":4,"line":47},"start":{"column":53,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"955","location":{"end":{"column":95,"line":34},"start":{"column":63,"line":34}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"958","location":{"end":{"column":100,"line":41},"start":{"column":33,"line":41}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"960","location":{"end":{"column":43,"line":43},"start":{"column":29,"line":43}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"959","location":{"end":{"column":74,"line":41},"start":{"column":55,"line":41}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"961","location":{"end":{"column":76,"line":44},"start":{"column":19,"line":44}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"962","location":{"end":{"column":4,"line":57},"start":{"column":46,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"963","location":{"end":{"column":35,"line":52},"start":{"column":9,"line":52}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"964","location":{"end":{"column":35,"line":52},"start":{"column":9,"line":52}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"965","location":{"end":{"column":35,"line":52},"start":{"column":9,"line":52}},"mutatorName":"LogicalOperator","replacement":"tid !== null || tid !== ''","status":"Survived"},{"id":"966","location":{"end":{"column":21,"line":52},"start":{"column":9,"line":52}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"967","location":{"end":{"column":21,"line":52},"start":{"column":9,"line":52}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"968","location":{"end":{"column":21,"line":52},"start":{"column":9,"line":52}},"mutatorName":"EqualityOperator","replacement":"tid === null","status":"Survived"},{"id":"969","location":{"end":{"column":35,"line":52},"start":{"column":25,"line":52}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"970","location":{"end":{"column":35,"line":52},"start":{"column":25,"line":52}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"972","location":{"end":{"column":35,"line":52},"start":{"column":33,"line":52}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"971","location":{"end":{"column":35,"line":52},"start":{"column":25,"line":52}},"mutatorName":"EqualityOperator","replacement":"tid === ''","status":"Survived"},{"id":"973","location":{"end":{"column":6,"line":54},"start":{"column":37,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { DomMethods } from '../../shared/dom-methods/DomMethods';\r\nimport { Translator } from '../../shared/translator/Translator';\r\nimport { Service } from 'typedi';\r\nimport { IAFCybertonica } from './IAFCybertonica';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { BrowserLocalStorage } from '../../../../shared/services/storage/BrowserLocalStorage';\r\nimport { ICybertonica } from './ICybertonica';\r\n\r\ndeclare const AFCYBERTONICA: IAFCybertonica;\r\n\r\n@Service()\r\nexport class Cybertonica implements ICybertonica {\r\n  private static readonly SDK_ADDRESS = environment.CYBERTONICA.CYBERTONICA_LIVE_URL;\r\n  private static LOCALE: string = 'locale';\r\n  private static SCRIPT_TARGET: string = 'head';\r\n  private static TID_KEY: string = 'app.tid';\r\n  private static TID_TIMEOUT = 5000;\r\n\r\n  private static getBasename(): string {\r\n    const link = document.createElement('a');\r\n    link.href = Cybertonica.SDK_ADDRESS;\r\n    return 'https://' + link.hostname;\r\n  }\r\n\r\n  private translator: Translator;\r\n  private tid: Promise<string> = Promise.resolve(undefined);\r\n\r\n  constructor(private storage: BrowserLocalStorage) {\r\n    this.storage.setItem(Cybertonica.TID_KEY, '');\r\n    this.translator = new Translator(this.storage.getItem(Cybertonica.LOCALE));\r\n  }\r\n\r\n  private _insertCybertonicaLibrary(): Promise<Element> {\r\n    return DomMethods.insertScript(Cybertonica.SCRIPT_TARGET, { src: Cybertonica.SDK_ADDRESS });\r\n  }\r\n\r\n  public init(apiUserName: string): Promise<string> {\r\n    const tid = this._insertCybertonicaLibrary().then(() =>\r\n      AFCYBERTONICA.init(apiUserName, undefined, Cybertonica.getBasename())\r\n    );\r\n    const timeout = new Promise(resolve => setTimeout(() => resolve(null), Cybertonica.TID_TIMEOUT));\r\n\r\n    this.tid = Promise.race([tid, timeout]);\r\n    this.tid.then(value => this.storage.setItem(Cybertonica.TID_KEY, value));\r\n\r\n    return this.tid;\r\n  }\r\n\r\n  public getTransactionId(): Promise<string> {\r\n    const tid = this.storage.getItem(Cybertonica.TID_KEY);\r\n\r\n    if (tid !== null && tid !== '') {\r\n      return Promise.resolve(tid);\r\n    }\r\n\r\n    return this.tid;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\google-analytics\\GoogleAnalytics.ts":{"language":"typescript","mutants":[{"id":"974","location":{"end":{"column":4,"line":13},"start":{"column":109,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"976","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"975","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"977","location":{"end":{"column":6,"line":10},"start":{"column":20,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"978","location":{"end":{"column":23,"line":9},"start":{"column":17,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"979","location":{"end":{"column":76,"line":9},"start":{"column":25,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"981","location":{"end":{"column":19,"line":11},"start":{"column":14,"line":11}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"980","location":{"end":{"column":6,"line":12},"start":{"column":12,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"982","location":{"end":{"column":2,"line":18},"start":{"column":51,"line":16}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"983","location":{"end":{"column":27,"line":21},"start":{"column":47,"line":20}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"984","location":{"end":{"column":81,"line":22},"start":{"column":48,"line":22}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"985","location":{"end":{"column":98,"line":23},"start":{"column":60,"line":23}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"986","location":{"end":{"column":85,"line":24},"start":{"column":41,"line":24}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"987","location":{"end":{"column":100,"line":25},"start":{"column":57,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"989","location":{"end":{"column":100,"line":27},"start":{"column":56,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"988","location":{"end":{"column":106,"line":26},"start":{"column":54,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"990","location":{"end":{"column":118,"line":28},"start":{"column":64,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"991","location":{"end":{"column":4,"line":33},"start":{"column":52,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"992","location":{"end":{"column":74,"line":32},"start":{"column":20,"line":32}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"994","location":{"end":{"column":4,"line":41},"start":{"column":54,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"993","location":{"end":{"column":82,"line":32},"start":{"column":78,"line":32}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"996","location":{"end":{"column":4,"line":62},"start":{"column":23,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"995","location":{"end":{"column":37,"line":40},"start":{"column":12,"line":36}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"997","location":{"end":{"column":8,"line":58},"start":{"column":19,"line":50}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"998","location":{"end":{"column":12,"line":54},"start":{"column":23,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"999","location":{"end":{"column":12,"line":57},"start":{"column":27,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1001","location":{"end":{"column":4,"line":74},"start":{"column":43,"line":64}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1000","location":{"end":{"column":8,"line":61},"start":{"column":23,"line":59}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1002","location":{"end":{"column":6,"line":73},"start":{"column":45,"line":65}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1003","location":{"end":{"column":55,"line":66},"start":{"column":47,"line":66}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1004","location":{"end":{"column":46,"line":67},"start":{"column":29,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1005","location":{"end":{"column":44,"line":68},"start":{"column":27,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1006","location":{"end":{"column":4,"line":78},"start":{"column":36,"line":76}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1008","location":{"end":{"column":114,"line":77},"start":{"column":37,"line":77}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1007","location":{"end":{"column":35,"line":77},"start":{"column":29,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1009","location":{"end":{"column":53,"line":77},"start":{"column":46,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1010","location":{"end":{"column":112,"line":77},"start":{"column":95,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1011","location":{"end":{"column":4,"line":88},"start":{"column":43,"line":80}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1012","location":{"end":{"column":6,"line":87},"start":{"column":45,"line":81}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1013","location":{"end":{"column":54,"line":82},"start":{"column":11,"line":82}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1014","location":{"end":{"column":54,"line":82},"start":{"column":11,"line":82}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1015","location":{"end":{"column":54,"line":82},"start":{"column":11,"line":82}},"mutatorName":"BooleanLiteral","replacement":"document.getElementById('googleAnalytics')","status":"Survived"},{"id":"1016","location":{"end":{"column":53,"line":82},"start":{"column":36,"line":82}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1017","location":{"end":{"column":8,"line":86},"start":{"column":56,"line":82}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { environment } from '../../../../environments/environment';\r\nimport { DomMethods } from '../../shared/dom-methods/DomMethods';\r\n\r\nexport class GoogleAnalytics {\r\n  public static sendGaData(hitType: string, eventCategory: string, eventAction: string, eventLabel: string) {\r\n    // @ts-ignore\r\n    if (window.ga) {\r\n      // @ts-ignore\r\n      window.ga('send', { hitType, eventCategory, eventAction, eventLabel });\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private static GA_MEASUREMENT_ID: string = environment.GA_MEASUREMENT_ID;\r\n  private static GA_INIT_SCRIPT_CONTENT: string = `window.ga=window.ga||function(){(ga.q=ga.q||[]).\r\n  push(arguments)};ga.l=+new Date;\r\n`;\r\n  private static GA_SCRIPT_SRC: string = environment.GA_SCRIPT_SRC;\r\n  private static GA_DISABLE_COOKIES: string = `ga('create', 'UA-${GoogleAnalytics.GA_MEASUREMENT_ID}'\r\n  , {'storage': 'none'});`;\r\n  private static GA_IP_ANONYMIZATION: string = `ga('set', 'anonymizeIp', true);`;\r\n  private static GA_DISABLE_ADVERTISING_FEATURES: string = `ga('set', 'allowAdFeatures', false);`;\r\n  private static GA_PAGE_VIEW: string = `ga('send', 'pageview', location.pathname);`;\r\n  private static TRANSLATION_SCRIPT_SUCCEEDED: string = 'Google Analytics: script has been created';\r\n  private static TRANSLATION_SCRIPT_FAILED: string = 'Google Analytics: an error occurred loading script';\r\n  private static TRANSLATION_SCRIPT_APPENDED: string = 'Google Analytics: script has been appended';\r\n  private static TRANSLATION_SCRIPT_APPENDED_FAILURE: string = 'Google Analytics: an error occurred appending script';\r\n\r\n  private static _disableUserIDTracking(): boolean {\r\n    // @ts-ignore\r\n    return (window[`ga-disable-UA-${GoogleAnalytics.GA_MEASUREMENT_ID}-Y`] = true);\r\n  }\r\n\r\n  private static _returnScriptWithFeatures(): string {\r\n    return `${GoogleAnalytics.GA_INIT_SCRIPT_CONTENT}\r\n    ${GoogleAnalytics.GA_DISABLE_COOKIES}\r\n    ${GoogleAnalytics.GA_IP_ANONYMIZATION}\r\n    ${GoogleAnalytics.GA_DISABLE_ADVERTISING_FEATURES}\r\n    ${GoogleAnalytics.GA_PAGE_VIEW}`;\r\n  }\r\n\r\n  private _communicate: string;\r\n  private _gaScript: HTMLScriptElement;\r\n  private _gaScriptContent: Text;\r\n\r\n  public init(): void {\r\n    this._insertGALibrary();\r\n    this._createGAScript()\r\n      .then(() => {\r\n        this._insertGAScript()\r\n          .then(() => {\r\n            GoogleAnalytics._disableUserIDTracking();\r\n          })\r\n          .catch(error => {\r\n            throw new Error(error);\r\n          });\r\n      })\r\n      .catch(error => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n\r\n  private _createGAScript(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this._gaScript = document.createElement('script');\r\n      this._gaScript.type = 'text/javascript';\r\n      this._gaScript.id = 'googleAnalytics';\r\n      this._gaScriptContent = document.createTextNode(GoogleAnalytics._returnScriptWithFeatures());\r\n      this._gaScript.appendChild(this._gaScriptContent);\r\n      resolve((this._communicate = GoogleAnalytics.TRANSLATION_SCRIPT_SUCCEEDED));\r\n      reject((this._communicate = GoogleAnalytics.TRANSLATION_SCRIPT_FAILED));\r\n    });\r\n  }\r\n\r\n  private _insertGALibrary(): void {\r\n    DomMethods.insertScript('head', { async: 'async', src: GoogleAnalytics.GA_SCRIPT_SRC, id: 'googleAnalytics' });\r\n  }\r\n\r\n  private _insertGAScript(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!document.getElementById('googleAnalytics')) {\r\n        document.head.appendChild(this._gaScript);\r\n        resolve((this._communicate = GoogleAnalytics.TRANSLATION_SCRIPT_APPENDED));\r\n        reject((this._communicate = GoogleAnalytics.TRANSLATION_SCRIPT_APPENDED_FAILURE));\r\n      }\r\n    });\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\visa-checkout\\VisaCheckout.ts":{"language":"typescript","mutants":[{"id":"1018","location":{"end":{"column":4,"line":23},"start":{"column":26,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1019","location":{"end":{"column":4,"line":27},"start":{"column":31,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1020","location":{"end":{"column":4,"line":31},"start":{"column":37,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1021","location":{"end":{"column":4,"line":35},"start":{"column":32,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1022","location":{"end":{"column":4,"line":39},"start":{"column":31,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1024","location":{"end":{"column":4,"line":47},"start":{"column":33,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1023","location":{"end":{"column":4,"line":43},"start":{"column":36,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1026","location":{"end":{"column":4,"line":57},"start":{"column":42,"line":53}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1027","location":{"end":{"column":19,"line":54},"start":{"column":12,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1028","location":{"end":{"column":23,"line":55},"start":{"column":14,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1025","location":{"end":{"column":4,"line":51},"start":{"column":38,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1029","location":{"end":{"column":22,"line":56},"start":{"column":13,"line":56}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1030","location":{"end":{"column":4,"line":63},"start":{"column":48,"line":59}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1031","location":{"end":{"column":29,"line":60},"start":{"column":13,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1032","location":{"end":{"column":27,"line":61},"start":{"column":12,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1033","location":{"end":{"column":31,"line":62},"start":{"column":14,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1034","location":{"end":{"column":4,"line":72},"start":{"column":44,"line":66}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1035","location":{"end":{"column":25,"line":67},"start":{"column":10,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1036","location":{"end":{"column":22,"line":68},"start":{"column":12,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1037","location":{"end":{"column":19,"line":69},"start":{"column":9,"line":69}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1039","location":{"end":{"column":49,"line":81},"start":{"column":35,"line":81}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1038","location":{"end":{"column":19,"line":70},"start":{"column":11,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1040","location":{"end":{"column":38,"line":86},"start":{"column":32,"line":86}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1041","location":{"end":{"column":4,"line":99},"start":{"column":32,"line":91}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1042","location":{"end":{"column":6,"line":97},"start":{"column":21,"line":93}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1043","location":{"end":{"column":4,"line":122},"start":{"column":103,"line":101}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1044","location":{"end":{"column":6,"line":117},"start":{"column":39,"line":106}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1045","location":{"end":{"column":23,"line":108},"start":{"column":11,"line":108}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1046","location":{"end":{"column":23,"line":108},"start":{"column":11,"line":108}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1047","location":{"end":{"column":8,"line":110},"start":{"column":25,"line":108}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1048","location":{"end":{"column":6,"line":121},"start":{"column":99,"line":118}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1049","location":{"end":{"column":4,"line":128},"start":{"column":101,"line":124}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1050","location":{"end":{"column":87,"line":127},"start":{"column":63,"line":127}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1051","location":{"end":{"column":4,"line":141},"start":{"column":47,"line":130}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1053","location":{"end":{"column":14,"line":133},"start":{"column":9,"line":133}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1052","location":{"end":{"column":14,"line":133},"start":{"column":9,"line":133}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1054","location":{"end":{"column":6,"line":135},"start":{"column":16,"line":133}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1055","location":{"end":{"column":38,"line":134},"start":{"column":31,"line":134}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1056","location":{"end":{"column":13,"line":136},"start":{"column":9,"line":136}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1057","location":{"end":{"column":13,"line":136},"start":{"column":9,"line":136}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1058","location":{"end":{"column":6,"line":138},"start":{"column":15,"line":136}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1059","location":{"end":{"column":37,"line":137},"start":{"column":31,"line":137}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1061","location":{"end":{"column":114,"line":151},"start":{"column":29,"line":151}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1060","location":{"end":{"column":4,"line":149},"start":{"column":67,"line":143}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1062","location":{"end":{"column":113,"line":151},"start":{"column":76,"line":151}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1063","location":{"end":{"column":112,"line":151},"start":{"column":107,"line":151}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1064","location":{"end":{"column":109,"line":153},"start":{"column":32,"line":153}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1065","location":{"end":{"column":4,"line":180},"start":{"column":40,"line":155}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1066","location":{"end":{"column":10,"line":164},"start":{"column":9,"line":161}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1067","location":{"end":{"column":8,"line":173},"start":{"column":19,"line":167}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1068","location":{"end":{"column":99,"line":170},"start":{"column":34,"line":170}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1069","location":{"end":{"column":105,"line":170},"start":{"column":101,"line":170}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1070","location":{"end":{"column":43,"line":172},"start":{"column":36,"line":172}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1072","location":{"end":{"column":78,"line":172},"start":{"column":62,"line":172}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1071","location":{"end":{"column":60,"line":172},"start":{"column":45,"line":172}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1075","location":{"end":{"column":97,"line":177},"start":{"column":34,"line":177}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1074","location":{"end":{"column":8,"line":179},"start":{"column":30,"line":174}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1073","location":{"end":{"column":111,"line":172},"start":{"column":80,"line":172}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1077","location":{"end":{"column":4,"line":188},"start":{"column":23,"line":182}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1078","location":{"end":{"column":93,"line":186},"start":{"column":30,"line":186}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1076","location":{"end":{"column":103,"line":177},"start":{"column":99,"line":177}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1080","location":{"end":{"column":39,"line":187},"start":{"column":32,"line":187}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1079","location":{"end":{"column":99,"line":186},"start":{"column":95,"line":186}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1081","location":{"end":{"column":56,"line":187},"start":{"column":41,"line":187}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1083","location":{"end":{"column":105,"line":187},"start":{"column":76,"line":187}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1082","location":{"end":{"column":74,"line":187},"start":{"column":58,"line":187}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1084","location":{"end":{"column":4,"line":206},"start":{"column":24,"line":190}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1085","location":{"end":{"column":94,"line":194},"start":{"column":30,"line":194}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1086","location":{"end":{"column":100,"line":194},"start":{"column":96,"line":194}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1087","location":{"end":{"column":8,"line":202},"start":{"column":7,"line":196}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1088","location":{"end":{"column":10,"line":201},"start":{"column":15,"line":198}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1089","location":{"end":{"column":33,"line":199},"start":{"column":22,"line":199}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1090","location":{"end":{"column":11,"line":203},"start":{"column":7,"line":203}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1091","location":{"end":{"column":39,"line":205},"start":{"column":32,"line":205}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1092","location":{"end":{"column":56,"line":205},"start":{"column":41,"line":205}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1094","location":{"end":{"column":108,"line":205},"start":{"column":76,"line":205}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1093","location":{"end":{"column":74,"line":205},"start":{"column":58,"line":205}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1095","location":{"end":{"column":4,"line":210},"start":{"column":40,"line":208}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1096","location":{"end":{"column":4,"line":222},"start":{"column":36,"line":212}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1097","location":{"end":{"column":6,"line":215},"start":{"column":81,"line":213}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1098","location":{"end":{"column":6,"line":218},"start":{"column":64,"line":216}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1099","location":{"end":{"column":6,"line":221},"start":{"column":65,"line":219}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1100","location":{"end":{"column":4,"line":243},"start":{"column":49,"line":224}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1102","location":{"end":{"column":57,"line":246},"start":{"column":31,"line":245}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1101","location":{"end":{"column":81,"line":240},"start":{"column":51,"line":240}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1103","location":{"end":{"column":23,"line":246},"start":{"column":5,"line":246}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1104","location":{"end":{"column":23,"line":246},"start":{"column":5,"line":246}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1105","location":{"end":{"column":23,"line":246},"start":{"column":5,"line":246}},"mutatorName":"LogicalOperator","replacement":"settings && config","status":"Survived"},{"id":"1106","location":{"end":{"column":52,"line":246},"start":{"column":26,"line":246}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1107","location":{"end":{"column":4,"line":254},"start":{"column":27,"line":248}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1108","location":{"end":{"column":35,"line":249},"start":{"column":29,"line":249}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1109","location":{"end":{"column":82,"line":249},"start":{"column":37,"line":249}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1110","location":{"end":{"column":80,"line":249},"start":{"column":66,"line":249}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1111","location":{"end":{"column":6,"line":253},"start":{"column":95,"line":249}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1113","location":{"end":{"column":25,"line":257},"start":{"column":9,"line":257}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1112","location":{"end":{"column":4,"line":261},"start":{"column":28,"line":256}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1114","location":{"end":{"column":25,"line":257},"start":{"column":9,"line":257}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1115","location":{"end":{"column":6,"line":260},"start":{"column":27,"line":257}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1116","location":{"end":{"column":4,"line":278},"start":{"column":45,"line":263}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1117","location":{"end":{"column":8,"line":268},"start":{"column":7,"line":265}},"mutatorName":"ConditionalExpression","replacement":"case VisaCheckout.VISA_PAYMENT_STATUS.SUCCESS:","status":"Survived"},{"id":"1118","location":{"end":{"column":8,"line":268},"start":{"column":54,"line":265}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1119","location":{"end":{"column":8,"line":272},"start":{"column":7,"line":269}},"mutatorName":"ConditionalExpression","replacement":"case VisaCheckout.VISA_PAYMENT_STATUS.CANCEL:","status":"Survived"},{"id":"1121","location":{"end":{"column":8,"line":276},"start":{"column":7,"line":273}},"mutatorName":"ConditionalExpression","replacement":"case VisaCheckout.VISA_PAYMENT_STATUS.ERROR:","status":"Survived"},{"id":"1120","location":{"end":{"column":8,"line":272},"start":{"column":53,"line":269}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1122","location":{"end":{"column":8,"line":276},"start":{"column":52,"line":273}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { environment } from '../../../../environments/environment';\r\nimport { IVisaConfig } from './IVisaConfig';\r\nimport { IVisaSettings } from './IVisaSettings';\r\nimport { IWalletConfig } from '../../../../shared/model/config/IWalletConfig';\r\nimport { DomMethods } from '../../shared/dom-methods/DomMethods';\r\nimport { MessageBus } from '../../shared/message-bus/MessageBus';\r\nimport { Payment } from '../../shared/payment/Payment';\r\nimport { StJwt } from '../../shared/stjwt/StJwt';\r\nimport { GoogleAnalytics } from '../google-analytics/GoogleAnalytics';\r\nimport { Container } from 'typedi';\r\nimport { NotificationService } from '../../../../client/notification/NotificationService';\r\nimport { Observable } from 'rxjs';\r\nimport { IConfig } from '../../../../shared/model/config/IConfig';\r\nimport { ConfigProvider } from '../../../../shared/services/config-provider/ConfigProvider';\r\nimport { InterFrameCommunicator } from '../../../../shared/services/message-bus/InterFrameCommunicator';\r\nimport { PAYMENT_CANCELLED, PAYMENT_ERROR, PAYMENT_SUCCESS } from '../../models/constants/Translations';\r\n\r\ndeclare const V: any;\r\n\r\nexport class VisaCheckout {\r\n  get payment(): Payment {\r\n    return this._payment;\r\n  }\r\n\r\n  set payment(value: Payment) {\r\n    this._payment = value;\r\n  }\r\n\r\n  set paymentDetails(value: string) {\r\n    this._paymentDetails = value;\r\n  }\r\n\r\n  get paymentDetails(): string {\r\n    return this._paymentDetails;\r\n  }\r\n\r\n  get paymentStatus(): string {\r\n    return this._paymentStatus;\r\n  }\r\n\r\n  set paymentStatus(value: string) {\r\n    this._paymentStatus = value;\r\n  }\r\n\r\n  get responseMessage(): string {\r\n    return this._responseMessage;\r\n  }\r\n\r\n  set responseMessage(value: string) {\r\n    this._responseMessage = value;\r\n  }\r\n\r\n  protected static VISA_PAYMENT_STATUS = {\r\n    ERROR: 'ERROR',\r\n    SUCCESS: 'SUCCESS',\r\n    CANCEL: 'WARNING' // Because VisaCheckout API has warnings instead of cancel :/\r\n  };\r\n\r\n  private static VISA_PAYMENT_RESPONSE_TYPES = {\r\n    CANCEL: 'payment.cancel',\r\n    ERROR: 'payment.error',\r\n    SUCCESS: 'payment.success'\r\n  };\r\n\r\n  protected requestTypes: string[];\r\n  protected visaCheckoutButtonProps: any = {\r\n    alt: 'Visa Checkout',\r\n    class: 'v-button',\r\n    id: 'v-button',\r\n    role: 'button',\r\n    src: environment.VISA_CHECKOUT_URLS.TEST_BUTTON_URL\r\n  };\r\n\r\n  private _buttonSettings: any;\r\n  private _messageBus: MessageBus;\r\n  private _payment: Payment;\r\n  private _paymentDetails: string;\r\n  private _paymentStatus: string;\r\n  private _responseMessage: string;\r\n  private _sdkAddress: string = environment.VISA_CHECKOUT_URLS.TEST_SDK;\r\n  private _walletSource: string = 'VISACHECKOUT';\r\n  private _notification: NotificationService;\r\n  private _stJwt: StJwt;\r\n  private _livestatus: number = 0;\r\n  private _datacenterurl: string;\r\n  private _placement: string = 'body';\r\n  private readonly _config$: Observable<IConfig>;\r\n  private _visaCheckoutConfig: IWalletConfig;\r\n  private _formId: string;\r\n\r\n  private _initConfiguration = {\r\n    apikey: '' as string,\r\n    paymentRequest: {\r\n      currencyCode: '' as string,\r\n      subtotal: '' as string,\r\n      total: '' as string\r\n    },\r\n    settings: {}\r\n  };\r\n\r\n  constructor(private _configProvider: ConfigProvider, private _communicator: InterFrameCommunicator) {\r\n    this._messageBus = Container.get(MessageBus);\r\n    this._notification = Container.get(NotificationService);\r\n    this._config$ = this._configProvider.getConfig$();\r\n\r\n    this._config$.subscribe(config => {\r\n      const { visaCheckout, jwt, datacenterurl, livestatus, formId } = config;\r\n      if (visaCheckout) {\r\n        this._visaCheckoutConfig = visaCheckout;\r\n      }\r\n      this._stJwt = new StJwt(jwt);\r\n      this._livestatus = livestatus;\r\n      this._formId = formId;\r\n      this._datacenterurl = datacenterurl;\r\n      this._configurePaymentProcess(jwt);\r\n      this._initVisaFlow();\r\n    });\r\n    this._messageBus.subscribe(MessageBus.EVENTS_PUBLIC.UPDATE_JWT, (data: { newJwt: string }) => {\r\n      const { newJwt } = data;\r\n      this._configurePaymentProcess(newJwt);\r\n    });\r\n  }\r\n\r\n  public setInitConfiguration(paymentRequest: any, settings: any, stJwt: StJwt, merchantId: string) {\r\n    this._initConfiguration.apikey = merchantId;\r\n    this._initConfiguration.paymentRequest = this.getInitPaymentRequest(paymentRequest, stJwt) as any;\r\n    this._initConfiguration.settings = this._setConfiguration({ locale: stJwt.locale }, settings);\r\n  }\r\n\r\n  public customizeVisaButton(properties: any) {\r\n    const { color, size } = properties;\r\n    const url = new URL(this.visaCheckoutButtonProps.src);\r\n    if (color) {\r\n      url.searchParams.append('color', color);\r\n    }\r\n    if (size) {\r\n      url.searchParams.append('size', size);\r\n    }\r\n    this.visaCheckoutButtonProps.src = url.href;\r\n    return this.visaCheckoutButtonProps.src;\r\n  }\r\n\r\n  public getInitPaymentRequest(paymentRequest: any, stJwt: StJwt) {\r\n    const config = this._initConfiguration.paymentRequest;\r\n    config.currencyCode = stJwt.currencyiso3a;\r\n    config.subtotal = stJwt.mainamount;\r\n    config.total = stJwt.mainamount;\r\n    return this._setConfiguration(config, paymentRequest);\r\n  }\r\n\r\n  public createVisaButton = () => DomMethods.createHtmlElement.apply(this, [this.visaCheckoutButtonProps, 'img']);\r\n\r\n  protected attachVisaButton = () => DomMethods.appendChildIntoDOM(this._placement, this.createVisaButton());\r\n\r\n  protected onSuccess(payment: object) {\r\n    this.paymentDetails = JSON.stringify(payment);\r\n    this.paymentStatus = VisaCheckout.VISA_PAYMENT_STATUS.SUCCESS;\r\n    this.payment\r\n      .processPayment(\r\n        this.requestTypes,\r\n        {\r\n          walletsource: this._walletSource,\r\n          wallettoken: this.paymentDetails\r\n        },\r\n        DomMethods.parseForm(this._formId)\r\n      )\r\n      .then(() => {\r\n        this.paymentStatus = VisaCheckout.VISA_PAYMENT_STATUS.SUCCESS;\r\n        this._getResponseMessage(this.paymentStatus);\r\n        this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_SUCCESS_CALLBACK }, true);\r\n        this._notification.success(this.responseMessage);\r\n        GoogleAnalytics.sendGaData('event', 'Visa Checkout', 'payment status', 'Visa Checkout payment success');\r\n      })\r\n      .catch((error: any) => {\r\n        this.paymentStatus = VisaCheckout.VISA_PAYMENT_STATUS.ERROR;\r\n        this._getResponseMessage(this.paymentStatus);\r\n        this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK }, true);\r\n        this._notification.error(this.responseMessage);\r\n      });\r\n  }\r\n\r\n  protected onError() {\r\n    this.paymentStatus = VisaCheckout.VISA_PAYMENT_STATUS.ERROR;\r\n    this._getResponseMessage(this.paymentStatus);\r\n    this._notification.error(this.responseMessage);\r\n    this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK }, true);\r\n    GoogleAnalytics.sendGaData('event', 'Visa Checkout', 'payment status', 'Visa Checkout payment error');\r\n  }\r\n\r\n  protected onCancel() {\r\n    this.paymentStatus = VisaCheckout.VISA_PAYMENT_STATUS.CANCEL;\r\n    this._getResponseMessage(this.paymentStatus);\r\n    this._notification.cancel(this.responseMessage);\r\n    this._messageBus.publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_CANCEL_CALLBACK }, true);\r\n    this._messageBus.publish(\r\n      {\r\n        type: MessageBus.EVENTS_PUBLIC.TRANSACTION_COMPLETE,\r\n        data: {\r\n          errorcode: 'cancelled',\r\n          errormessage: this.responseMessage\r\n        }\r\n      },\r\n      true\r\n    );\r\n    GoogleAnalytics.sendGaData('event', 'Visa Checkout', 'payment status', 'Visa Checkout payment canceled');\r\n  }\r\n\r\n  protected initPaymentConfiguration() {\r\n    V.init(this._initConfiguration);\r\n  }\r\n\r\n  protected paymentStatusHandler() {\r\n    V.on(VisaCheckout.VISA_PAYMENT_RESPONSE_TYPES.SUCCESS, (payment: object) => {\r\n      this.onSuccess(payment);\r\n    });\r\n    V.on(VisaCheckout.VISA_PAYMENT_RESPONSE_TYPES.ERROR, () => {\r\n      this.onError();\r\n    });\r\n    V.on(VisaCheckout.VISA_PAYMENT_RESPONSE_TYPES.CANCEL, () => {\r\n      this.onCancel();\r\n    });\r\n  }\r\n\r\n  private _configurePaymentProcess(jwt: string) {\r\n    const {\r\n      merchantId,\r\n      livestatus,\r\n      placement,\r\n      settings,\r\n      paymentRequest,\r\n      buttonSettings,\r\n      requestTypes\r\n    } = this._visaCheckoutConfig;\r\n    this._stJwt = new StJwt(jwt);\r\n    this.payment = new Payment();\r\n    this._livestatus = livestatus;\r\n    this._placement = placement;\r\n    this.requestTypes = requestTypes;\r\n    this.setInitConfiguration(paymentRequest, settings, this._stJwt, merchantId);\r\n    this._buttonSettings = this._setConfiguration({ locale: this._stJwt.locale }, settings);\r\n    this.customizeVisaButton(buttonSettings);\r\n    this._setLiveStatus();\r\n  }\r\n\r\n  private _setConfiguration = (config: IVisaConfig, settings: IVisaSettings) =>\r\n    settings || config ? { ...config, ...settings } : {};\r\n\r\n  private _initVisaFlow() {\r\n    DomMethods.insertScript('body', { src: this._sdkAddress, id: 'visaCheckout' }).then(() => {\r\n      this.attachVisaButton();\r\n      this.initPaymentConfiguration();\r\n      this.paymentStatusHandler();\r\n    });\r\n  }\r\n\r\n  private _setLiveStatus() {\r\n    if (this._livestatus) {\r\n      this.visaCheckoutButtonProps.src = environment.VISA_CHECKOUT_URLS.LIVE_BUTTON_URL;\r\n      this._sdkAddress = environment.VISA_CHECKOUT_URLS.LIVE_SDK;\r\n    }\r\n  }\r\n\r\n  private _getResponseMessage(type: string) {\r\n    switch (type) {\r\n      case VisaCheckout.VISA_PAYMENT_STATUS.SUCCESS: {\r\n        this.responseMessage = PAYMENT_SUCCESS;\r\n        break;\r\n      }\r\n      case VisaCheckout.VISA_PAYMENT_STATUS.CANCEL: {\r\n        this.responseMessage = PAYMENT_CANCELLED;\r\n        break;\r\n      }\r\n      case VisaCheckout.VISA_PAYMENT_STATUS.ERROR: {\r\n        this.responseMessage = PAYMENT_ERROR;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\integrations\\visa-checkout\\VisaCheckoutMock.ts":{"language":"typescript","mutants":[{"id":"1123","location":{"end":{"column":4,"line":14},"start":{"column":36,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1124","location":{"end":{"column":68,"line":11},"start":{"column":61,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1126","location":{"end":{"column":4,"line":22},"start":{"column":31,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1125","location":{"end":{"column":6,"line":13},"start":{"column":76,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1128","location":{"end":{"column":8,"line":21},"start":{"column":43,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1127","location":{"end":{"column":47,"line":18},"start":{"column":13,"line":18}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1129","location":{"end":{"column":4,"line":32},"start":{"column":68,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1130","location":{"end":{"column":29,"line":25},"start":{"column":9,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1131","location":{"end":{"column":29,"line":25},"start":{"column":9,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1132","location":{"end":{"column":29,"line":25},"start":{"column":9,"line":25}},"mutatorName":"EqualityOperator","replacement":"status !== 'SUCCESS'","status":"Survived"},{"id":"1133","location":{"end":{"column":29,"line":25},"start":{"column":20,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1134","location":{"end":{"column":6,"line":27},"start":{"column":31,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1135","location":{"end":{"column":34,"line":27},"start":{"column":16,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1136","location":{"end":{"column":34,"line":27},"start":{"column":16,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1137","location":{"end":{"column":34,"line":27},"start":{"column":16,"line":27}},"mutatorName":"EqualityOperator","replacement":"status !== 'ERROR'","status":"Survived"},{"id":"1138","location":{"end":{"column":34,"line":27},"start":{"column":27,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1139","location":{"end":{"column":6,"line":29},"start":{"column":36,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1140","location":{"end":{"column":36,"line":29},"start":{"column":16,"line":29}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1141","location":{"end":{"column":36,"line":29},"start":{"column":16,"line":29}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1142","location":{"end":{"column":36,"line":29},"start":{"column":16,"line":29}},"mutatorName":"EqualityOperator","replacement":"status !== 'WARNING'","status":"Survived"},{"id":"1143","location":{"end":{"column":36,"line":29},"start":{"column":27,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1144","location":{"end":{"column":6,"line":31},"start":{"column":38,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { environment } from '../../../../environments/environment';\r\nimport { DomMethods } from '../../shared/dom-methods/DomMethods';\r\nimport { VisaCheckout } from './VisaCheckout';\r\n\r\nexport class VisaCheckoutMock extends VisaCheckout {\r\n  protected initPaymentConfiguration() {\r\n    // Do nothing on mock because we don't want to use V.\r\n  }\r\n\r\n  protected paymentStatusHandler() {\r\n    DomMethods.addListener(this.visaCheckoutButtonProps.id, 'click', () => {\r\n      this._handleMockedData();\r\n    });\r\n  }\r\n\r\n  private _handleMockedData() {\r\n    return fetch(environment.VISA_CHECKOUT_URLS.MOCK_DATA_URL)\r\n      .then((response: any) => response.json())\r\n      .then(({ payment, status }: any) => {\r\n        this._proceedFlowWithMockedData(payment, status);\r\n      });\r\n  }\r\n\r\n  private _proceedFlowWithMockedData(payment: any, status: string) {\r\n    if (status === 'SUCCESS') {\r\n      this.onSuccess(payment);\r\n    } else if (status === 'ERROR') {\r\n      this.onError();\r\n    } else if (status === 'WARNING') {\r\n      this.onCancel();\r\n    }\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\CardinalCommerceValidationStatus.ts":{"language":"typescript","mutants":[{"id":"1145","location":{"end":{"column":93,"line":1},"start":{"column":59,"line":1}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1147","location":{"end":{"column":81,"line":1},"start":{"column":71,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1146","location":{"end":{"column":69,"line":1},"start":{"column":60,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1148","location":{"end":{"column":92,"line":1},"start":{"column":83,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const CardinalCommerceValidationStatus: string[] = ['SUCCESS', 'NOACTION', 'FAILURE'];\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\EventTypes.ts":{"language":"typescript","mutants":[{"id":"1151","location":{"end":{"column":47,"line":3},"start":{"column":25,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1149","location":{"end":{"column":2,"line":18},"start":{"column":31,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1150","location":{"end":{"column":39,"line":2},"start":{"column":21,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1152","location":{"end":{"column":43,"line":4},"start":{"column":23,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1153","location":{"end":{"column":43,"line":5},"start":{"column":23,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1154","location":{"end":{"column":51,"line":6},"start":{"column":27,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1155","location":{"end":{"column":47,"line":7},"start":{"column":25,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1157","location":{"end":{"column":41,"line":9},"start":{"column":22,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1156","location":{"end":{"column":61,"line":8},"start":{"column":32,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1158","location":{"end":{"column":49,"line":10},"start":{"column":26,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1159","location":{"end":{"column":45,"line":11},"start":{"column":24,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1160","location":{"end":{"column":45,"line":12},"start":{"column":24,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1161","location":{"end":{"column":59,"line":13},"start":{"column":31,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1162","location":{"end":{"column":67,"line":14},"start":{"column":35,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1163","location":{"end":{"column":33,"line":15},"start":{"column":18,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1164","location":{"end":{"column":53,"line":16},"start":{"column":28,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1165","location":{"end":{"column":63,"line":17},"start":{"column":33,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1167","location":{"end":{"column":29,"line":21},"start":{"column":16,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1166","location":{"end":{"column":2,"line":59},"start":{"column":30,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1168","location":{"end":{"column":27,"line":22},"start":{"column":15,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1169","location":{"end":{"column":41,"line":23},"start":{"column":22,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1170","location":{"end":{"column":49,"line":24},"start":{"column":26,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1172","location":{"end":{"column":29,"line":26},"start":{"column":16,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1171","location":{"end":{"column":45,"line":25},"start":{"column":24,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1173","location":{"end":{"column":39,"line":27},"start":{"column":21,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1175","location":{"end":{"column":41,"line":29},"start":{"column":22,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1174","location":{"end":{"column":31,"line":28},"start":{"column":17,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1176","location":{"end":{"column":21,"line":30},"start":{"column":12,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1178","location":{"end":{"column":33,"line":32},"start":{"column":18,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1177","location":{"end":{"column":46,"line":31},"start":{"column":24,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1180","location":{"end":{"column":31,"line":34},"start":{"column":17,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1179","location":{"end":{"column":43,"line":33},"start":{"column":23,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1181","location":{"end":{"column":39,"line":35},"start":{"column":21,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1182","location":{"end":{"column":25,"line":36},"start":{"column":14,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1183","location":{"end":{"column":41,"line":37},"start":{"column":22,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1184","location":{"end":{"column":63,"line":38},"start":{"column":33,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1185","location":{"end":{"column":65,"line":39},"start":{"column":34,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1187","location":{"end":{"column":65,"line":41},"start":{"column":34,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1186","location":{"end":{"column":67,"line":40},"start":{"column":35,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1188","location":{"end":{"column":29,"line":42},"start":{"column":16,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1189","location":{"end":{"column":43,"line":43},"start":{"column":23,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1190","location":{"end":{"column":45,"line":44},"start":{"column":24,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1191","location":{"end":{"column":29,"line":45},"start":{"column":16,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1192","location":{"end":{"column":47,"line":46},"start":{"column":25,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1194","location":{"end":{"column":51,"line":48},"start":{"column":27,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1193","location":{"end":{"column":27,"line":47},"start":{"column":15,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1195","location":{"end":{"column":25,"line":49},"start":{"column":14,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1196","location":{"end":{"column":34,"line":50},"start":{"column":17,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1197","location":{"end":{"column":76,"line":51},"start":{"column":38,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1198","location":{"end":{"column":46,"line":52},"start":{"column":23,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1199","location":{"end":{"column":46,"line":53},"start":{"column":23,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1200","location":{"end":{"column":37,"line":54},"start":{"column":20,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1202","location":{"end":{"column":33,"line":56},"start":{"column":18,"line":56}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1201","location":{"end":{"column":38,"line":55},"start":{"column":19,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1203","location":{"end":{"column":46,"line":57},"start":{"column":23,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1204","location":{"end":{"column":34,"line":58},"start":{"column":17,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const PRIVATE_EVENTS = {\n  BLUR_CARD_NUMBER: 'BLUR_CARD_NUMBER',\n  BLUR_EXPIRATION_DATE: 'BLUR_EXPIRATION_DATE',\n  BLUR_SECURITY_CODE: 'BLUR_SECURITY_CODE',\n  CHANGE_CARD_NUMBER: 'CHANGE_CARD_NUMBER',\n  CHANGE_EXPIRATION_DATE: 'CHANGE_EXPIRATION_DATE',\n  CHANGE_SECURITY_CODE: 'CHANGE_SECURITY_CODE',\n  CHANGE_SECURITY_CODE_LENGTH: 'CHANGE_SECURITY_CODE_LENGTH',\n  FOCUS_CARD_NUMBER: 'FOCUS_CARD_NUMBER',\n  FOCUS_EXPIRATION_DATE: 'FOCUS_EXPIRATION_DATE',\n  FOCUS_SECURITY_CODE: 'FOCUS_SECURITY_CODE',\n  IS_CARD_WITHOUT_CVV: 'IS_CARD_WITHOUT_CVV',\n  VALIDATE_CARD_NUMBER_FIELD: 'VALIDATE_CARD_NUMBER_FIELD',\n  VALIDATE_EXPIRATION_DATE_FIELD: 'VALIDATE_EXPIRATION_DATE_FIELD',\n  VALIDATE_FORM: 'VALIDATE_FORM',\n  VALIDATE_MERCHANT_FIELD: 'VALIDATE_MERCHANT_FIELD',\n  VALIDATE_SECURITY_CODE_FIELD: 'VALIDATE_SECURITY_CODE_FIELD'\n};\n\nexport const PUBLIC_EVENTS = {\n  BIN_PROCESS: 'BIN_PROCESS',\n  BLOCK_FORM: 'BLOCK_FORM',\n  BLOCK_CARD_NUMBER: 'BLOCK_CARD_NUMBER',\n  BLOCK_EXPIRATION_DATE: 'BLOCK_EXPIRATION_DATE',\n  BLOCK_SECURITY_CODE: 'BLOCK_SECURITY_CODE',\n  BLUR_FIELDS: 'BLUR_FIELDS',\n  BY_PASS_CARDINAL: 'BY_PASS_CARDINAL',\n  BY_PASS_INIT: 'BY_PASS_INIT',\n  CALL_SUBMIT_EVENT: 'CALL_SUBMIT_EVENT',\n  DESTROY: 'DESTROY',\n  GET_CYBERTONICA_TID: 'GET_CYBERTONICA_TID ',\n  LOAD_CARDINAL: 'LOAD_CARDINAL',\n  LOAD_CONTROL_FRAME: 'LOAD_CONTROL_FRAME',\n  NOTIFICATION: 'NOTIFICATION',\n  PROCESS_PAYMENTS: 'PROCESS_PAYMENTS',\n  RESET_JWT: 'RESET_JWT',\n  SET_REQUEST_TYPES: 'SET_REQUEST_TYPES',\n  CALL_MERCHANT_ERROR_CALLBACK: 'CALL_MERCHANT_ERROR_CALLBACK',\n  CALL_MERCHANT_CANCEL_CALLBACK: 'CALL_MERCHANT_CANCEL_CALLBACK',\n  CALL_MERCHANT_SUCCESS_CALLBACK: 'CALL_MERCHANT_SUCCESS_CALLBACK',\n  CALL_MERCHANT_SUBMIT_CALLBACK: 'CALL_MERCHANT_SUBMIT_CALLBACK',\n  SUBMIT_FORM: 'SUBMIT_FORM',\n  THREEDINIT_REQUEST: 'THREEDINIT_REQUEST',\n  THREEDINIT_RESPONSE: 'THREEDINIT_RESPONSE',\n  THREEDQUERY: 'THREEDQUERY',\n  TRANSACTION_COMPLETE: 'TRANSACTION_COMPLETE',\n  UPDATE_JWT: 'UPDATE_JWT',\n  UPDATE_MERCHANT_FIELDS: 'UPDATE_MERCHANT_FIELDS',\n  SUBSCRIBE: 'SUBSCRIBE',\n  CONFIG_CHECK: 'ST_CONFIG_CHECK',\n  CARDINAL_COMMERCE_TOKENS_ACQUIRED: 'ST_CARDINAL_COMMERCE_TOKENS_ACQUIRED',\n  CONTROL_FRAME_SHOW: 'ST_CONTROL_FRAME_SHOW',\n  CONTROL_FRAME_HIDE: 'ST_CONTROL_FRAME_HIDE',\n  JSINIT_RESPONSE: 'JSINIT_RESPONSE',\n  CONFIG_CHANGED: 'ST_CONFIG_CHANGED',\n  UNLOCK_BUTTON: 'UNLOCK_BUTTON',\n  INIT_CONTROL_FRAME: 'ST_INIT_CONTROL_FRAME',\n  STORAGE_SYNC: 'ST_STORAGE_SYNC'\n};\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\FormFieldsDetails.ts":{"language":"typescript","mutants":[{"id":"1205","location":{"end":{"column":2,"line":16},"start":{"column":54,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1207","location":{"end":{"column":20,"line":5},"start":{"column":15,"line":5}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"1206","location":{"end":{"column":4,"line":7},"start":{"column":15,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1208","location":{"end":{"column":14,"line":6},"start":{"column":12,"line":6}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1209","location":{"end":{"column":4,"line":11},"start":{"column":19,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1210","location":{"end":{"column":20,"line":9},"start":{"column":15,"line":9}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"1211","location":{"end":{"column":14,"line":10},"start":{"column":12,"line":10}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1212","location":{"end":{"column":4,"line":15},"start":{"column":17,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1213","location":{"end":{"column":20,"line":13},"start":{"column":15,"line":13}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"1214","location":{"end":{"column":14,"line":14},"start":{"column":12,"line":14}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"import { IFormFieldsDetails } from '../IFormFieldsDetails';\r\n\r\nexport const FormFieldsDetails: IFormFieldsDetails = {\r\n  cardNumber: {\r\n    validity: false,\r\n    value: ''\r\n  },\r\n  expirationDate: {\r\n    validity: false,\r\n    value: ''\r\n  },\r\n  securityCode: {\r\n    validity: false,\r\n    value: ''\r\n  }\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\FormFieldsValidity.ts":{"language":"typescript","mutants":[{"id":"1215","location":{"end":{"column":2,"line":16},"start":{"column":56,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1217","location":{"end":{"column":16,"line":5},"start":{"column":14,"line":5}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1216","location":{"end":{"column":4,"line":7},"start":{"column":15,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1218","location":{"end":{"column":17,"line":6},"start":{"column":12,"line":6}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"1219","location":{"end":{"column":4,"line":11},"start":{"column":19,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1220","location":{"end":{"column":16,"line":9},"start":{"column":14,"line":9}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1221","location":{"end":{"column":17,"line":10},"start":{"column":12,"line":10}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"1222","location":{"end":{"column":4,"line":15},"start":{"column":17,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1223","location":{"end":{"column":16,"line":13},"start":{"column":14,"line":13}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1224","location":{"end":{"column":17,"line":14},"start":{"column":12,"line":14}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"}],"source":"import { IFormFieldsValidity } from '../IFormFieldsValidity';\r\n\r\nexport const FormFieldsValidity: IFormFieldsValidity = {\r\n  cardNumber: {\r\n    message: '',\r\n    state: false\r\n  },\r\n  expirationDate: {\r\n    message: '',\r\n    state: false\r\n  },\r\n  securityCode: {\r\n    message: '',\r\n    state: false\r\n  }\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\PaymentBrand.ts":{"language":"typescript","mutants":[{"id":"1225","location":{"end":{"column":42,"line":1},"start":{"column":37,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const PaymentBrand: string = 'cca';\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\PaymentEvents.ts":{"language":"typescript","mutants":[{"id":"1226","location":{"end":{"column":2,"line":7},"start":{"column":30,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1228","location":{"end":{"column":15,"line":3},"start":{"column":9,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1227","location":{"end":{"column":29,"line":2},"start":{"column":16,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1230","location":{"end":{"column":43,"line":5},"start":{"column":19,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1229","location":{"end":{"column":27,"line":4},"start":{"column":15,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1231","location":{"end":{"column":34,"line":6},"start":{"column":14,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const PaymentEvents = {\r\n  BIN_PROCESS: 'bin.process',\r\n  INIT: 'init',\r\n  JWT_UPDATE: 'jwt.update',\r\n  SETUP_COMPLETE: 'payments.setupComplete',\r\n  VALIDATED: 'payments.validated'\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\Selectors.ts":{"language":"typescript","mutants":[{"id":"1232","location":{"end":{"column":63,"line":3},"start":{"column":51,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1233","location":{"end":{"column":66,"line":4},"start":{"column":43,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1235","location":{"end":{"column":67,"line":6},"start":{"column":51,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1234","location":{"end":{"column":64,"line":5},"start":{"column":42,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1236","location":{"end":{"column":68,"line":7},"start":{"column":44,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1237","location":{"end":{"column":64,"line":8},"start":{"column":42,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1238","location":{"end":{"column":69,"line":9},"start":{"column":44,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1240","location":{"end":{"column":74,"line":12},"start":{"column":47,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1239","location":{"end":{"column":71,"line":11},"start":{"column":55,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1241","location":{"end":{"column":72,"line":13},"start":{"column":46,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1242","location":{"end":{"column":75,"line":14},"start":{"column":55,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1243","location":{"end":{"column":76,"line":15},"start":{"column":48,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1244","location":{"end":{"column":72,"line":16},"start":{"column":46,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1245","location":{"end":{"column":77,"line":17},"start":{"column":48,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1246","location":{"end":{"column":67,"line":19},"start":{"column":53,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1247","location":{"end":{"column":70,"line":20},"start":{"column":45,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1248","location":{"end":{"column":68,"line":21},"start":{"column":44,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1249","location":{"end":{"column":71,"line":22},"start":{"column":53,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1250","location":{"end":{"column":72,"line":23},"start":{"column":46,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1251","location":{"end":{"column":68,"line":24},"start":{"column":44,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1252","location":{"end":{"column":73,"line":25},"start":{"column":46,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1254","location":{"end":{"column":74,"line":28},"start":{"column":54,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1253","location":{"end":{"column":69,"line":27},"start":{"column":46,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1255","location":{"end":{"column":82,"line":29},"start":{"column":55,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1256","location":{"end":{"column":80,"line":30},"start":{"column":54,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1257","location":{"end":{"column":86,"line":31},"start":{"column":57,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1258","location":{"end":{"column":84,"line":32},"start":{"column":56,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1259","location":{"end":{"column":67,"line":34},"start":{"column":53,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1260","location":{"end":{"column":70,"line":35},"start":{"column":45,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1261","location":{"end":{"column":56,"line":37},"start":{"column":47,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1262","location":{"end":{"column":63,"line":38},"start":{"column":46,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1263","location":{"end":{"column":89,"line":40},"start":{"column":46,"line":40}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1265","location":{"end":{"column":93,"line":42},"start":{"column":48,"line":42}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1264","location":{"end":{"column":97,"line":41},"start":{"column":50,"line":41}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1266","location":{"end":{"column":93,"line":43},"start":{"column":48,"line":43}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1267","location":{"end":{"column":93,"line":44},"start":{"column":48,"line":44}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1268","location":{"end":{"column":71,"line":46},"start":{"column":53,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1269","location":{"end":{"column":80,"line":47},"start":{"column":55,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1270","location":{"end":{"column":67,"line":48},"start":{"column":53,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { environment } from '../../../../environments/environment';\r\n\r\nexport const CARD_NUMBER_COMPONENT_NAME: string = 'cardNumber';\r\nexport const CARD_NUMBER_IFRAME: string = 'st-card-number-iframe';\r\nexport const CARD_NUMBER_INPUT: string = 'st-card-number-input';\r\nexport const CARD_NUMBER_INPUT_SELECTOR: string = 'st-card-number';\r\nexport const CARD_NUMBER_MESSAGE: string = 'st-card-number-message';\r\nexport const CARD_NUMBER_LABEL: string = 'st-card-number-label';\r\nexport const CARD_NUMBER_WRAPPER: string = 'st-card-number__wrapper';\r\n\r\nexport const EXPIRATION_DATE_COMPONENT_NAME: string = 'expirationDate';\r\nexport const EXPIRATION_DATE_IFRAME: string = 'st-expiration-date-iframe';\r\nexport const EXPIRATION_DATE_INPUT: string = 'st-expiration-date-input';\r\nexport const EXPIRATION_DATE_INPUT_SELECTOR: string = 'st-expiration-date';\r\nexport const EXPIRATION_DATE_MESSAGE: string = 'st-expiration-date-message';\r\nexport const EXPIRATION_DATE_LABEL: string = 'st-expiration-date-label';\r\nexport const EXPIRATION_DATE_WRAPPER: string = 'st-expiration-date__wrapper';\r\n\r\nexport const SECURITY_CODE_COMPONENT_NAME: string = 'securityCode';\r\nexport const SECURITY_CODE_IFRAME: string = 'st-security-code-iframe';\r\nexport const SECURITY_CODE_INPUT: string = 'st-security-code-input';\r\nexport const SECURITY_CODE_INPUT_SELECTOR: string = 'st-security-code';\r\nexport const SECURITY_CODE_MESSAGE: string = 'st-security-code-message';\r\nexport const SECURITY_CODE_LABEL: string = 'st-security-code-label';\r\nexport const SECURITY_CODE_WRAPPER: string = 'st-security-code__wrapper';\r\n\r\nexport const NOTIFICATION_FRAME_ID: string = 'st-notification-frame';\r\nexport const NOTIFICATION_FRAME_CORE_CLASS: string = 'notification-frame';\r\nexport const NOTIFICATION_FRAME_ERROR_CLASS: string = 'notification-frame--error';\r\nexport const NOTIFICATION_FRAME_INFO_CLASS: string = 'notification-frame--info';\r\nexport const NOTIFICATION_FRAME_SUCCESS_CLASS: string = 'notification-frame--success';\r\nexport const NOTIFICATION_FRAME_CANCEL_CLASS: string = 'notification-frame--cancel';\r\n\r\nexport const CONTROL_FRAME_COMPONENT_NAME: string = 'controlFrame';\r\nexport const CONTROL_FRAME_IFRAME: string = 'st-control-frame-iframe';\r\n\r\nexport const MERCHANT_FORM_SELECTOR: string = 'st-form';\r\nexport const MERCHANT_PARENT_FRAME: string = 'st-parent-frame';\r\n\r\nexport const CARD_NUMBER_COMPONENT: string = `${environment.FRAME_URL}/card-number.html`;\r\nexport const EXPIRATION_DATE_COMPONENT: string = `${environment.FRAME_URL}/expiration-date.html`;\r\nexport const SECURITY_CODE_COMPONENT: string = `${environment.FRAME_URL}/security-code.html`;\r\nexport const CONTROL_FRAME_COMPONENT: string = `${environment.FRAME_URL}/control-frame.html`;\r\nexport const ANIMATED_CARD_COMPONENT: string = `${environment.FRAME_URL}/animated-card.html`;\r\n\r\nexport const ANIMATED_CARD_INPUT_SELECTOR: string = 'st-animated-card';\r\nexport const ANIMATED_CARD_COMPONENT_IFRAME: string = 'st-animated-card-iframe';\r\nexport const ANIMATED_CARD_COMPONENT_NAME: string = 'animatedCard';\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\Translations.ts":{"language":"typescript","mutants":[{"id":"1271","location":{"end":{"column":79,"line":1},"start":{"column":46,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1272","location":{"end":{"column":74,"line":2},"start":{"column":37,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1273","location":{"end":{"column":69,"line":3},"start":{"column":52,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1274","location":{"end":{"column":71,"line":4},"start":{"column":53,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1275","location":{"end":{"column":53,"line":5},"start":{"column":44,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1276","location":{"end":{"column":53,"line":6},"start":{"column":34,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1277","location":{"end":{"column":47,"line":7},"start":{"column":34,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1278","location":{"end":{"column":55,"line":8},"start":{"column":38,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1279","location":{"end":{"column":51,"line":9},"start":{"column":36,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1280","location":{"end":{"column":73,"line":10},"start":{"column":44,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1281","location":{"end":{"column":62,"line":11},"start":{"column":38,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1282","location":{"end":{"column":25,"line":12},"start":{"column":20,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1284","location":{"end":{"column":49,"line":14},"start":{"column":30,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1283","location":{"end":{"column":62,"line":13},"start":{"column":34,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1285","location":{"end":{"column":73,"line":15},"start":{"column":32,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1288","location":{"end":{"column":48,"line":19},"start":{"column":33,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1287","location":{"end":{"column":108,"line":18},"start":{"column":3,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1286","location":{"end":{"column":39,"line":16},"start":{"column":27,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1289","location":{"end":{"column":70,"line":20},"start":{"column":51,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1290","location":{"end":{"column":74,"line":21},"start":{"column":50,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1291","location":{"end":{"column":69,"line":22},"start":{"column":49,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const APPLE_PAY_AMOUNT_AND_CURRENCY = 'Amount and currency are not set';\r\nexport const APPLE_PAY_NOT_LOGGED = 'You are not logged to Apple account';\r\nexport const COMMUNICATION_ERROR_INVALID_REQUEST = 'Invalid request';\r\nexport const COMMUNICATION_ERROR_INVALID_RESPONSE = 'Invalid response';\r\nexport const COMMUNICATION_ERROR_TIMEOUT = 'Timeout';\r\nexport const FORM_IS_NOT_VALID = 'Form is not valid';\r\nexport const LABEL_CARD_NUMBER = 'Card number';\r\nexport const LABEL_EXPIRATION_DATE = 'Expiration date';\r\nexport const LABEL_SECURITY_CODE = 'Security code';\r\nexport const MERCHANT_VALIDATION_FAILURE = 'Merchant validation failure';\r\nexport const NOT_IMPLEMENTED_ERROR = 'Method not implemented';\r\nexport const PAY = 'Pay';\r\nexport const PAYMENT_CANCELLED = 'Payment has been cancelled';\r\nexport const PAYMENT_ERROR = 'An error occurred';\r\nexport const PAYMENT_SUCCESS = 'Payment has been successfully processed';\r\nexport const PROCESSING = 'Processing';\r\nexport const TARGET_ELEMENT_IS_NOT_SPECIFIED =\r\n  'A target iframe-factory for the input field with id could not be found. Please check your configuration';\r\nexport const VALIDATION_ERROR = 'Invalid field';\r\nexport const VALIDATION_ERROR_FIELD_IS_REQUIRED = 'Field is required';\r\nexport const VALIDATION_ERROR_PATTERN_MISMATCH = 'Value mismatch pattern';\r\nexport const VALIDATION_ERROR_VALUE_TOO_SHORT = 'Value is too short';\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\config-resolver\\DefaultApmsRequestTypes.ts":{"language":"typescript","mutants":[{"id":"1292","location":{"end":{"column":58,"line":1},"start":{"column":50,"line":1}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1293","location":{"end":{"column":57,"line":1},"start":{"column":51,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const DefaultApmsRequestTypes: string[] = ['AUTH'];\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\config-resolver\\DefaultComponents.ts":{"language":"typescript","mutants":[{"id":"1295","location":{"end":{"column":25,"line":4},"start":{"column":23,"line":4}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1294","location":{"end":{"column":2,"line":8},"start":{"column":34,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1296","location":{"end":{"column":21,"line":5},"start":{"column":17,"line":5}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1297","location":{"end":{"column":20,"line":5},"start":{"column":18,"line":5}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1298","location":{"end":{"column":21,"line":7},"start":{"column":16,"line":7}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"}],"source":"import { DefaultComponentsRequestTypes } from './DefaultComponentsRequestTypes';\r\n\r\nexport const DefaultComponents = {\r\n  defaultPaymentType: '',\r\n  paymentTypes: [''],\r\n  requestTypes: DefaultComponentsRequestTypes,\r\n  startOnLoad: false\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\config-resolver\\DefaultComponentsIds.ts":{"language":"typescript","mutants":[{"id":"1299","location":{"end":{"column":2,"line":16},"start":{"column":53,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { IComponentsIds } from '../../../../../shared/model/config/IComponentsIds';\r\nimport {\r\n  ANIMATED_CARD_INPUT_SELECTOR,\r\n  CARD_NUMBER_INPUT_SELECTOR,\r\n  EXPIRATION_DATE_INPUT_SELECTOR,\r\n  NOTIFICATION_FRAME_ID,\r\n  SECURITY_CODE_INPUT_SELECTOR\r\n} from '../Selectors';\r\n\r\nexport const DefaultComponentsIds: IComponentsIds = {\r\n  animatedCard: ANIMATED_CARD_INPUT_SELECTOR,\r\n  cardNumber: CARD_NUMBER_INPUT_SELECTOR,\r\n  expirationDate: EXPIRATION_DATE_INPUT_SELECTOR,\r\n  notificationFrame: NOTIFICATION_FRAME_ID,\r\n  securityCode: SECURITY_CODE_INPUT_SELECTOR\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\config-resolver\\DefaultComponentsRequestTypes.ts":{"language":"typescript","mutants":[{"id":"1300","location":{"end":{"column":79,"line":1},"start":{"column":56,"line":1}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1301","location":{"end":{"column":70,"line":1},"start":{"column":57,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1302","location":{"end":{"column":78,"line":1},"start":{"column":72,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const DefaultComponentsRequestTypes: string[] = ['THREEDQUERY', 'AUTH'];\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\config-resolver\\DefaultConfig.ts":{"language":"typescript","mutants":[{"id":"1303","location":{"end":{"column":2,"line":42},"start":{"column":39,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1304","location":{"end":{"column":19,"line":12},"start":{"column":14,"line":12}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"1305","location":{"end":{"column":22,"line":13},"start":{"column":17,"line":13}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"1306","location":{"end":{"column":15,"line":15},"start":{"column":13,"line":15}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1307","location":{"end":{"column":18,"line":16},"start":{"column":16,"line":16}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"1308","location":{"end":{"column":28,"line":20},"start":{"column":22,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1309","location":{"end":{"column":19,"line":22},"start":{"column":14,"line":22}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"1310","location":{"end":{"column":29,"line":23},"start":{"column":24,"line":23}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"1311","location":{"end":{"column":23,"line":25},"start":{"column":19,"line":25}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1312","location":{"end":{"column":10,"line":29},"start":{"column":8,"line":29}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1313","location":{"end":{"column":17,"line":32},"start":{"column":12,"line":32}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"1314","location":{"end":{"column":23,"line":37},"start":{"column":18,"line":37}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"1315","location":{"end":{"column":24,"line":38},"start":{"column":20,"line":38}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"}],"source":"import { environment } from '../../../../../environments/environment';\nimport { DefaultFieldsToSubmit } from './DefaultFieldsToSubmit';\nimport { DefaultSubmitFields } from './DefaultSubmitFields';\nimport { DefaultComponentsIds } from './DefaultComponentsIds';\nimport { IConfig } from '../../../../../shared/model/config/IConfig';\nimport { DefaultComponents } from './DefaultComponents';\nimport { DefaultPlaceholders } from './DefaultPlaceholders';\nimport { DefaultInit } from './DefaultInit';\nimport { MERCHANT_FORM_SELECTOR } from '../Selectors';\n\nexport const DefaultConfig: IConfig = {\n  analytics: false,\n  animatedCard: false,\n  applePay: {},\n  buttonId: '',\n  bypassCards: [],\n  cancelCallback: null,\n  componentIds: DefaultComponentsIds,\n  components: DefaultComponents,\n  cybertonicaApiKey: 'stfs',\n  datacenterurl: environment.GATEWAY_URL,\n  deferInit: false,\n  disableNotification: false,\n  errorCallback: null,\n  errorReporting: true,\n  fieldsToSubmit: DefaultFieldsToSubmit,\n  formId: MERCHANT_FORM_SELECTOR,\n  init: DefaultInit,\n  jwt: '',\n  livestatus: 0,\n  origin: window.location.origin,\n  panIcon: false,\n  placeholders: DefaultPlaceholders,\n  styles: {},\n  submitCallback: null,\n  submitFields: DefaultSubmitFields,\n  submitOnError: false,\n  submitOnSuccess: true,\n  successCallback: null,\n  translations: {},\n  visaCheckout: {}\n};\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\config-resolver\\DefaultFieldsToSubmit.ts":{"language":"typescript","mutants":[{"id":"1317","location":{"end":{"column":54,"line":1},"start":{"column":49,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1316","location":{"end":{"column":85,"line":1},"start":{"column":48,"line":1}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1318","location":{"end":{"column":68,"line":1},"start":{"column":56,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1319","location":{"end":{"column":84,"line":1},"start":{"column":70,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const DefaultFieldsToSubmit: string[] = ['pan', 'expirydate', 'securitycode'];\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\config-resolver\\DefaultInit.ts":{"language":"typescript","mutants":[{"id":"1320","location":{"end":{"column":62,"line":1},"start":{"column":28,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1321","location":{"end":{"column":44,"line":1},"start":{"column":42,"line":1}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1322","location":{"end":{"column":60,"line":1},"start":{"column":58,"line":1}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"export const DefaultInit = { cachetoken: '', threedinit: '' };\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\config-resolver\\DefaultPlaceholders.ts":{"language":"typescript","mutants":[{"id":"1323","location":{"end":{"column":2,"line":7},"start":{"column":57,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1325","location":{"end":{"column":22,"line":5},"start":{"column":15,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1324","location":{"end":{"column":29,"line":4},"start":{"column":8,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1326","location":{"end":{"column":22,"line":6},"start":{"column":17,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { IPlaceholdersConfig } from '../../IPlaceholdersConfig';\r\n\r\nexport const DefaultPlaceholders: IPlaceholdersConfig = {\r\n  pan: '**** **** **** ****',\r\n  expirydate: 'MM/YY',\r\n  securitycode: '***'\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\config-resolver\\DefaultRequestTypes.ts":{"language":"typescript","mutants":[{"id":"1327","location":{"end":{"column":69,"line":1},"start":{"column":46,"line":1}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1328","location":{"end":{"column":60,"line":1},"start":{"column":47,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1329","location":{"end":{"column":68,"line":1},"start":{"column":62,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const DefaultRequestTypes: string[] = ['THREEDQUERY', 'AUTH'];\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\config-resolver\\DefaultSubmitFields.ts":{"language":"typescript","mutants":[{"id":"1330","location":{"end":{"column":2,"line":13},"start":{"column":46,"line":1}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1331","location":{"end":{"column":15,"line":2},"start":{"column":3,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1332","location":{"end":{"column":18,"line":3},"start":{"column":3,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1333","location":{"end":{"column":8,"line":4},"start":{"column":3,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1335","location":{"end":{"column":14,"line":6},"start":{"column":3,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1334","location":{"end":{"column":13,"line":5},"start":{"column":3,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1336","location":{"end":{"column":14,"line":7},"start":{"column":3,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1337","location":{"end":{"column":17,"line":8},"start":{"column":3,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1338","location":{"end":{"column":19,"line":9},"start":{"column":3,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1339","location":{"end":{"column":17,"line":10},"start":{"column":3,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1340","location":{"end":{"column":11,"line":11},"start":{"column":3,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1341","location":{"end":{"column":25,"line":12},"start":{"column":3,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const DefaultSubmitFields: string[] = [\r\n  'baseamount',\r\n  'currencyiso3a',\r\n  'eci',\r\n  'enrolled',\r\n  'errorcode',\r\n  'errordata',\r\n  'errormessage',\r\n  'orderreference',\r\n  'settlestatus',\r\n  'status',\r\n  'transactionreference'\r\n];\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\notifications\\NotificationsClasses.ts":{"language":"typescript","mutants":[{"id":"1342","location":{"end":{"column":2,"line":13},"start":{"column":37,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import {\r\n  NOTIFICATION_FRAME_CANCEL_CLASS,\r\n  NOTIFICATION_FRAME_ERROR_CLASS,\r\n  NOTIFICATION_FRAME_INFO_CLASS,\r\n  NOTIFICATION_FRAME_SUCCESS_CLASS\r\n} from '../Selectors';\r\n\r\nexport const NotificationsClasses = {\r\n  error: NOTIFICATION_FRAME_ERROR_CLASS,\r\n  info: NOTIFICATION_FRAME_INFO_CLASS,\r\n  success: NOTIFICATION_FRAME_SUCCESS_CLASS,\r\n  cancel: NOTIFICATION_FRAME_CANCEL_CLASS\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\models\\constants\\notifications\\NotificationsMessageTypes.ts":{"language":"typescript","mutants":[{"id":"1343","location":{"end":{"column":2,"line":6},"start":{"column":42,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1344","location":{"end":{"column":17,"line":2},"start":{"column":10,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1346","location":{"end":{"column":21,"line":4},"start":{"column":12,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1345","location":{"end":{"column":15,"line":3},"start":{"column":9,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1347","location":{"end":{"column":19,"line":5},"start":{"column":11,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const NotificationsMessageTypes = {\r\n  error: 'ERROR',\r\n  info: 'INFO',\r\n  success: 'SUCCESS',\r\n  cancel: 'CANCEL'\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\services\\icon\\IconFactory.ts":{"language":"typescript","mutants":[{"id":"1348","location":{"end":{"column":4,"line":13},"start":{"column":42,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1349","location":{"end":{"column":12,"line":8},"start":{"column":10,"line":8}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1350","location":{"end":{"column":34,"line":9},"start":{"column":16,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1351","location":{"end":{"column":26,"line":10},"start":{"column":12,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1352","location":{"end":{"column":20,"line":11},"start":{"column":9,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1353","location":{"end":{"column":12,"line":12},"start":{"column":10,"line":12}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1354","location":{"end":{"column":4,"line":27},"start":{"column":43,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1355","location":{"end":{"column":46,"line":18},"start":{"column":41,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1356","location":{"end":{"column":6,"line":23},"start":{"column":56,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1357","location":{"end":{"column":32,"line":20},"start":{"column":11,"line":20}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1358","location":{"end":{"column":32,"line":20},"start":{"column":11,"line":20}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1359","location":{"end":{"column":8,"line":22},"start":{"column":34,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1360","location":{"end":{"column":28,"line":24},"start":{"column":23,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1361","location":{"end":{"column":28,"line":25},"start":{"column":23,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { IconMap } from './IconMap';\r\nimport { IIconAttributes } from '../../models/IIconAttributes';\r\n\r\n@Service()\r\nexport class IconFactory {\r\n  private _attributes: IIconAttributes = {\r\n    alt: '',\r\n    ariaLabel: 'Credit card icon',\r\n    class: 'st-card-icon',\r\n    id: 'card-icon',\r\n    src: ''\r\n  };\r\n\r\n  constructor(private _url: IconMap) {}\r\n\r\n  getIcon(name: string): HTMLImageElement {\r\n    const icon = document.createElement('img');\r\n    Object.keys(this._attributes).map((key: string) => {\r\n      if (this._attributes[key]) {\r\n        icon.setAttribute(key, this._attributes[key]);\r\n      }\r\n    });\r\n    icon.setAttribute('src', this._url.getUrl(name));\r\n    icon.setAttribute('alt', this._url.getUrl(name));\r\n    return icon;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\services\\icon\\IconMap.ts":{"language":"typescript","mutants":[{"id":"1363","location":{"end":{"column":28,"line":5},"start":{"column":9,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1362","location":{"end":{"column":2,"line":14},"start":{"column":34,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1364","location":{"end":{"column":44,"line":6},"start":{"column":17,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1365","location":{"end":{"column":32,"line":7},"start":{"column":11,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1366","location":{"end":{"column":36,"line":8},"start":{"column":13,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1368","location":{"end":{"column":34,"line":10},"start":{"column":12,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1367","location":{"end":{"column":26,"line":9},"start":{"column":8,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1369","location":{"end":{"column":40,"line":11},"start":{"column":15,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1370","location":{"end":{"column":28,"line":12},"start":{"column":9,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1372","location":{"end":{"column":4,"line":20},"start":{"column":32,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1371","location":{"end":{"column":28,"line":13},"start":{"column":9,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1373","location":{"end":{"column":46,"line":19},"start":{"column":44,"line":19}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { IIconMap } from '../../models/IIconMap';\r\n\r\nexport const mapIcon: IIconMap = {\r\n  amex: './images/amex.png',\r\n  astropaycard: './images/astropaycard.png',\r\n  diners: './images/diners.png',\r\n  discover: './images/discover.png',\r\n  jcb: './images/jcb.png',\r\n  maestro: './images/maestro.png',\r\n  mastercard: './images/mastercard.png',\r\n  piba: './images/piba.png',\r\n  visa: './images/visa.png'\r\n};\r\n\r\n@Service()\r\nexport class IconMap {\r\n  getUrl(name: string): string {\r\n    return mapIcon[name] ? mapIcon[name] : '';\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\services\\st-codec\\StCodec.class.ts":{"language":"typescript","mutants":[{"id":"1375","location":{"end":{"column":33,"line":21},"start":{"column":27,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1374","location":{"end":{"column":50,"line":20},"start":{"column":32,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1376","location":{"end":{"column":60,"line":22},"start":{"column":32,"line":22}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1379","location":{"end":{"column":13,"line":25},"start":{"column":5,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1377","location":{"end":{"column":4,"line":33},"start":{"column":43,"line":23}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1378","location":{"end":{"column":19,"line":24},"start":{"column":5,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1380","location":{"end":{"column":18,"line":26},"start":{"column":5,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1381","location":{"end":{"column":20,"line":27},"start":{"column":5,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1382","location":{"end":{"column":11,"line":28},"start":{"column":5,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1383","location":{"end":{"column":12,"line":29},"start":{"column":5,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1385","location":{"end":{"column":19,"line":31},"start":{"column":5,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1384","location":{"end":{"column":14,"line":30},"start":{"column":5,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1386","location":{"end":{"column":19,"line":32},"start":{"column":5,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1389","location":{"end":{"column":16,"line":46},"start":{"column":12,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1387","location":{"end":{"column":4,"line":47},"start":{"column":47,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1388","location":{"end":{"column":66,"line":46},"start":{"column":12,"line":46}},"mutatorName":"ArithmeticOperator","replacement":"'J-' - Math.random().toString(36).substring(2, length)","status":"Survived"},{"id":"1390","location":{"end":{"column":4,"line":56},"start":{"column":41,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1392","location":{"end":{"column":4,"line":65},"start":{"column":86,"line":58}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1391","location":{"end":{"column":6,"line":55},"start":{"column":12,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1393","location":{"end":{"column":49,"line":59},"start":{"column":9,"line":59}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1394","location":{"end":{"column":49,"line":59},"start":{"column":9,"line":59}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1396","location":{"end":{"column":4,"line":88},"start":{"column":109,"line":73}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1395","location":{"end":{"column":6,"line":61},"start":{"column":51,"line":59}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1397","location":{"end":{"column":42,"line":76},"start":{"column":23,"line":76}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1399","location":{"end":{"column":34,"line":77},"start":{"column":9,"line":77}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1398","location":{"end":{"column":34,"line":77},"start":{"column":9,"line":77}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1400","location":{"end":{"column":34,"line":77},"start":{"column":9,"line":77}},"mutatorName":"EqualityOperator","replacement":"jwtResponse === undefined","status":"Survived"},{"id":"1401","location":{"end":{"column":6,"line":79},"start":{"column":36,"line":77}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1402","location":{"end":{"column":37,"line":80},"start":{"column":9,"line":80}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1403","location":{"end":{"column":37,"line":80},"start":{"column":9,"line":80}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1405","location":{"end":{"column":6,"line":82},"start":{"column":39,"line":80}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1404","location":{"end":{"column":37,"line":80},"start":{"column":9,"line":80}},"mutatorName":"EqualityOperator","replacement":"threedresponse === undefined","status":"Survived"},{"id":"1406","location":{"end":{"column":6,"line":86},"start":{"column":49,"line":83}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1407","location":{"end":{"column":60,"line":87},"start":{"column":56,"line":87}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1408","location":{"end":{"column":4,"line":100},"start":{"column":48,"line":90}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1410","location":{"end":{"column":8,"line":96},"start":{"column":13,"line":94}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1409","location":{"end":{"column":6,"line":98},"start":{"column":47,"line":93}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1411","location":{"end":{"column":58,"line":99},"start":{"column":54,"line":99}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1412","location":{"end":{"column":4,"line":115},"start":{"column":49,"line":106}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1413","location":{"end":{"column":11,"line":107},"start":{"column":5,"line":107}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1414","location":{"end":{"column":20,"line":108},"start":{"column":5,"line":108}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1415","location":{"end":{"column":12,"line":109},"start":{"column":5,"line":109}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1416","location":{"end":{"column":18,"line":110},"start":{"column":5,"line":110}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1417","location":{"end":{"column":19,"line":111},"start":{"column":5,"line":111}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1418","location":{"end":{"column":14,"line":112},"start":{"column":5,"line":112}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1419","location":{"end":{"column":19,"line":113},"start":{"column":5,"line":113}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1420","location":{"end":{"column":19,"line":114},"start":{"column":5,"line":114}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1421","location":{"end":{"column":86,"line":116},"start":{"column":33,"line":116}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1422","location":{"end":{"column":56,"line":116},"start":{"column":49,"line":116}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1423","location":{"end":{"column":65,"line":116},"start":{"column":62,"line":116}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1424","location":{"end":{"column":84,"line":116},"start":{"column":77,"line":116}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1427","location":{"end":{"column":84,"line":119},"start":{"column":12,"line":119}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1426","location":{"end":{"column":84,"line":119},"start":{"column":12,"line":119}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1425","location":{"end":{"column":4,"line":120},"start":{"column":46,"line":118}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1428","location":{"end":{"column":84,"line":119},"start":{"column":12,"line":119}},"mutatorName":"LogicalOperator","replacement":"StCodec._messageBus && (StCodec._messageBus = Container.get(MessageBus))","status":"Survived"},{"id":"1430","location":{"end":{"column":97,"line":123},"start":{"column":12,"line":123}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1429","location":{"end":{"column":4,"line":124},"start":{"column":57,"line":122}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1431","location":{"end":{"column":97,"line":123},"start":{"column":12,"line":123}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1433","location":{"end":{"column":4,"line":128},"start":{"column":43,"line":126}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1432","location":{"end":{"column":97,"line":123},"start":{"column":12,"line":123}},"mutatorName":"LogicalOperator","replacement":"StCodec._notification && (StCodec._notification = Container.get(NotificationService))","status":"Survived"},{"id":"1434","location":{"end":{"column":69,"line":127},"start":{"column":12,"line":127}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1436","location":{"end":{"column":69,"line":127},"start":{"column":12,"line":127}},"mutatorName":"LogicalOperator","replacement":"StCodec._frame && (StCodec._frame = Container.get(Frame))","status":"Survived"},{"id":"1435","location":{"end":{"column":69,"line":127},"start":{"column":12,"line":127}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1437","location":{"end":{"column":4,"line":135},"start":{"column":46,"line":130}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1438","location":{"end":{"column":4,"line":145},"start":{"column":43,"line":137}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1439","location":{"end":{"column":100,"line":142},"start":{"column":37,"line":142}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1440","location":{"end":{"column":106,"line":142},"start":{"column":102,"line":142}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1441","location":{"end":{"column":4,"line":154},"start":{"column":56,"line":147}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1442","location":{"end":{"column":6,"line":153},"start":{"column":12,"line":148}},"mutatorName":"BooleanLiteral","replacement":"responseData && responseData.version === StCodec.VERSION && responseData.response && responseData.response.length > 0","status":"Survived"},{"id":"1443","location":{"end":{"column":39,"line":152},"start":{"column":7,"line":149}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1444","location":{"end":{"column":39,"line":152},"start":{"column":7,"line":149}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1445","location":{"end":{"column":39,"line":152},"start":{"column":7,"line":149}},"mutatorName":"LogicalOperator","replacement":"responseData && responseData.version === StCodec.VERSION && responseData.response || responseData.response.length > 0","status":"Survived"},{"id":"1446","location":{"end":{"column":28,"line":151},"start":{"column":7,"line":149}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1447","location":{"end":{"column":28,"line":151},"start":{"column":7,"line":149}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1449","location":{"end":{"column":47,"line":150},"start":{"column":7,"line":149}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1448","location":{"end":{"column":28,"line":151},"start":{"column":7,"line":149}},"mutatorName":"LogicalOperator","replacement":"responseData && responseData.version === StCodec.VERSION || responseData.response","status":"Survived"},{"id":"1450","location":{"end":{"column":47,"line":150},"start":{"column":7,"line":149}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1451","location":{"end":{"column":47,"line":150},"start":{"column":7,"line":149}},"mutatorName":"LogicalOperator","replacement":"responseData || responseData.version === StCodec.VERSION","status":"Survived"},{"id":"1452","location":{"end":{"column":47,"line":150},"start":{"column":7,"line":150}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1454","location":{"end":{"column":47,"line":150},"start":{"column":7,"line":150}},"mutatorName":"EqualityOperator","replacement":"responseData.version !== StCodec.VERSION","status":"Survived"},{"id":"1455","location":{"end":{"column":39,"line":152},"start":{"column":7,"line":152}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1453","location":{"end":{"column":47,"line":150},"start":{"column":7,"line":150}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1456","location":{"end":{"column":39,"line":152},"start":{"column":7,"line":152}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1458","location":{"end":{"column":39,"line":152},"start":{"column":7,"line":152}},"mutatorName":"EqualityOperator","replacement":"responseData.response.length <= 0","status":"Survived"},{"id":"1457","location":{"end":{"column":39,"line":152},"start":{"column":7,"line":152}},"mutatorName":"EqualityOperator","replacement":"responseData.response.length >= 0","status":"Survived"},{"id":"1459","location":{"end":{"column":4,"line":167},"start":{"column":56,"line":156}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1460","location":{"end":{"column":6,"line":162},"start":{"column":47,"line":158}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1461","location":{"end":{"column":27,"line":159},"start":{"column":11,"line":159}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1462","location":{"end":{"column":27,"line":159},"start":{"column":11,"line":159}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1463","location":{"end":{"column":8,"line":161},"start":{"column":29,"line":159}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1464","location":{"end":{"column":25,"line":163},"start":{"column":9,"line":163}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1465","location":{"end":{"column":25,"line":163},"start":{"column":9,"line":163}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1466","location":{"end":{"column":25,"line":163},"start":{"column":9,"line":163}},"mutatorName":"BooleanLiteral","replacement":"responseContent","status":"Survived"},{"id":"1468","location":{"end":{"column":79,"line":164},"start":{"column":47,"line":164}},"mutatorName":"ArithmeticOperator","replacement":"responseData.response.length + 1","status":"Survived"},{"id":"1469","location":{"end":{"column":4,"line":202},"start":{"column":99,"line":169}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1467","location":{"end":{"column":6,"line":165},"start":{"column":27,"line":163}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1470","location":{"end":{"column":79,"line":177},"start":{"column":9,"line":177}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1472","location":{"end":{"column":79,"line":177},"start":{"column":9,"line":177}},"mutatorName":"BooleanLiteral","replacement":"StCodec.REQUESTS_WITH_ERROR_MESSAGES.includes(requesttypedescription)","status":"Survived"},{"id":"1471","location":{"end":{"column":79,"line":177},"start":{"column":9,"line":177}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1473","location":{"end":{"column":6,"line":179},"start":{"column":81,"line":177}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1475","location":{"end":{"column":46,"line":181},"start":{"column":9,"line":181}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1474","location":{"end":{"column":46,"line":181},"start":{"column":9,"line":181}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1476","location":{"end":{"column":46,"line":181},"start":{"column":9,"line":181}},"mutatorName":"EqualityOperator","replacement":"errorcode !== StCodec.STATUS_CODES.ok","status":"Survived"},{"id":"1478","location":{"end":{"column":84,"line":186},"start":{"column":9,"line":186}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1477","location":{"end":{"column":6,"line":184},"start":{"column":48,"line":181}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1479","location":{"end":{"column":84,"line":186},"start":{"column":9,"line":186}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1480","location":{"end":{"column":84,"line":186},"start":{"column":9,"line":186}},"mutatorName":"LogicalOperator","replacement":"responseContent.walletsource || responseContent.walletsource === 'APPLEPAY'","status":"Survived"},{"id":"1482","location":{"end":{"column":84,"line":186},"start":{"column":41,"line":186}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1481","location":{"end":{"column":84,"line":186},"start":{"column":41,"line":186}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1483","location":{"end":{"column":84,"line":186},"start":{"column":41,"line":186}},"mutatorName":"EqualityOperator","replacement":"responseContent.walletsource !== 'APPLEPAY'","status":"Survived"},{"id":"1484","location":{"end":{"column":84,"line":186},"start":{"column":74,"line":186}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1485","location":{"end":{"column":6,"line":191},"start":{"column":86,"line":186}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1486","location":{"end":{"column":102,"line":188},"start":{"column":39,"line":188}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1487","location":{"end":{"column":108,"line":188},"start":{"column":104,"line":188}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1488","location":{"end":{"column":56,"line":193},"start":{"column":9,"line":193}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1490","location":{"end":{"column":56,"line":193},"start":{"column":9,"line":193}},"mutatorName":"EqualityOperator","replacement":"errorcode !== StCodec.STATUS_CODES.invalidfield","status":"Survived"},{"id":"1489","location":{"end":{"column":56,"line":193},"start":{"column":9,"line":193}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1491","location":{"end":{"column":6,"line":195},"start":{"column":58,"line":193}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1492","location":{"end":{"column":100,"line":199},"start":{"column":37,"line":199}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1493","location":{"end":{"column":106,"line":199},"start":{"column":102,"line":199}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1494","location":{"end":{"column":4,"line":212},"start":{"column":82,"line":204}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1495","location":{"end":{"column":6,"line":208},"start":{"column":9,"line":206}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1496","location":{"end":{"column":6,"line":210},"start":{"column":17,"line":208}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1498","location":{"end":{"column":4,"line":238},"start":{"column":58,"line":224}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1497","location":{"end":{"column":4,"line":222},"start":{"column":28,"line":216}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1499","location":{"end":{"column":6,"line":237},"start":{"column":12,"line":225}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1500","location":{"end":{"column":35,"line":226},"start":{"column":29,"line":226}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1501","location":{"end":{"column":8,"line":234},"start":{"column":16,"line":228}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1502","location":{"end":{"column":10,"line":233},"start":{"column":9,"line":229}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1503","location":{"end":{"column":4,"line":250},"start":{"column":44,"line":240}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1504","location":{"end":{"column":105,"line":243},"start":{"column":7,"line":242}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1506","location":{"end":{"column":105,"line":243},"start":{"column":7,"line":242}},"mutatorName":"LogicalOperator","replacement":"Object.keys(requestObject).length < StCodec.MINIMUM_REQUEST_FIELDS && !requestObject.requesttypedescriptions.every(val => StCodec.SUPPORTED_REQUEST_TYPES.includes(val))","status":"Survived"},{"id":"1505","location":{"end":{"column":105,"line":243},"start":{"column":7,"line":242}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1507","location":{"end":{"column":73,"line":242},"start":{"column":7,"line":242}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1509","location":{"end":{"column":73,"line":242},"start":{"column":7,"line":242}},"mutatorName":"EqualityOperator","replacement":"Object.keys(requestObject).length <= StCodec.MINIMUM_REQUEST_FIELDS","status":"Survived"},{"id":"1508","location":{"end":{"column":73,"line":242},"start":{"column":7,"line":242}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1510","location":{"end":{"column":73,"line":242},"start":{"column":7,"line":242}},"mutatorName":"EqualityOperator","replacement":"Object.keys(requestObject).length >= StCodec.MINIMUM_REQUEST_FIELDS","status":"Survived"},{"id":"1512","location":{"end":{"column":104,"line":243},"start":{"column":52,"line":243}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1511","location":{"end":{"column":105,"line":243},"start":{"column":7,"line":243}},"mutatorName":"BooleanLiteral","replacement":"requestObject.requesttypedescriptions.every(val => StCodec.SUPPORTED_REQUEST_TYPES.includes(val))","status":"Survived"},{"id":"1513","location":{"end":{"column":6,"line":248},"start":{"column":7,"line":244}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1514","location":{"end":{"column":102,"line":245},"start":{"column":39,"line":245}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1515","location":{"end":{"column":108,"line":245},"start":{"column":104,"line":245}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1516","location":{"end":{"column":4,"line":275},"start":{"column":71,"line":252}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1517","location":{"end":{"column":6,"line":272},"start":{"column":60,"line":254}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1518","location":{"end":{"column":35,"line":255},"start":{"column":11,"line":255}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1519","location":{"end":{"column":35,"line":255},"start":{"column":11,"line":255}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1520","location":{"end":{"column":17,"line":255},"start":{"column":11,"line":255}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1521","location":{"end":{"column":8,"line":268},"start":{"column":37,"line":255}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1522","location":{"end":{"column":10,"line":267},"start":{"column":52,"line":256}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1523","location":{"end":{"column":71,"line":258},"start":{"column":15,"line":258}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1524","location":{"end":{"column":71,"line":258},"start":{"column":15,"line":258}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1526","location":{"end":{"column":71,"line":258},"start":{"column":26,"line":258}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1525","location":{"end":{"column":71,"line":258},"start":{"column":15,"line":258}},"mutatorName":"LogicalOperator","replacement":"decoded || decoded.payload.response[0].errorcode === '0'","status":"Survived"},{"id":"1527","location":{"end":{"column":71,"line":258},"start":{"column":26,"line":258}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1528","location":{"end":{"column":71,"line":258},"start":{"column":26,"line":258}},"mutatorName":"EqualityOperator","replacement":"decoded.payload.response[0].errorcode !== '0'","status":"Survived"},{"id":"1529","location":{"end":{"column":71,"line":258},"start":{"column":68,"line":258}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1531","location":{"end":{"column":12,"line":262},"start":{"column":18,"line":260}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1530","location":{"end":{"column":12,"line":260},"start":{"column":73,"line":258}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1532","location":{"end":{"column":12,"line":266},"start":{"column":19,"line":263}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1533","location":{"end":{"column":8,"line":271},"start":{"column":14,"line":268}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import JwtDecode from 'jwt-decode';\r\nimport { FormState } from '../../models/constants/FormState';\r\nimport { IMessageBusEvent } from '../../models/IMessageBusEvent';\r\nimport { IResponseData } from '../../models/IResponseData';\r\nimport { IStRequest } from '../../models/IStRequest';\r\nimport {\r\n  COMMUNICATION_ERROR_INVALID_RESPONSE,\r\n  COMMUNICATION_ERROR_INVALID_REQUEST\r\n} from '../../models/constants/Translations';\r\nimport { MessageBus } from '../../shared/message-bus/MessageBus';\r\nimport { StJwt } from '../../shared/stjwt/StJwt';\r\nimport { Translator } from '../../shared/translator/Translator';\r\nimport { Validation } from '../../shared/validation/Validation';\r\nimport { version } from '../../../../../package.json';\r\nimport { Container } from 'typedi';\r\nimport { NotificationService } from '../../../../client/notification/NotificationService';\r\nimport { Frame } from '../../shared/frame/Frame';\r\n\r\nexport class StCodec {\r\n  public static CONTENT_TYPE = 'application/json';\r\n  public static VERSION = '1.00';\r\n  public static VERSION_INFO = `STJS::N/A::${version}::N/A`;\r\n  public static SUPPORTED_REQUEST_TYPES = [\r\n    'WALLETVERIFY',\r\n    'JSINIT',\r\n    'THREEDQUERY',\r\n    'CACHETOKENISE',\r\n    'AUTH',\r\n    'ERROR',\r\n    'RISKDEC',\r\n    'SUBSCRIPTION',\r\n    'ACCOUNTCHECK'\r\n  ];\r\n  public static MINIMUM_REQUEST_FIELDS = 1;\r\n  public static jwt: string;\r\n  public static originalJwt: string;\r\n\r\n  /**\r\n   * Generate a unique ID for a request\r\n   * (this is informational. it doesn't need to be cryptographically random since one of those is allocated server-side)\r\n   * @param length The total length of the Request ID\r\n   *   (since we prepend 'J-' the random section will be 2 char shorter)\r\n   * @return A newly generated random request ID\r\n   */\r\n  public static _createRequestId(length = 10) {\r\n    return 'J-' + Math.random().toString(36).substring(2, length);\r\n  }\r\n\r\n  public static getErrorData(data: any) {\r\n    const { errordata, errormessage, requesttypedescription } = data;\r\n    return {\r\n      errordata,\r\n      errormessage,\r\n      requesttypedescription\r\n    };\r\n  }\r\n\r\n  public static verifyResponseObject(responseData: any, jwtResponse: string): object {\r\n    if (StCodec._isInvalidResponse(responseData)) {\r\n      throw StCodec._handleInvalidResponse();\r\n    }\r\n    const responseContent: IResponseData = StCodec._determineResponse(responseData);\r\n    StCodec._handleValidGatewayResponse(responseContent, jwtResponse);\r\n    return responseContent;\r\n  }\r\n\r\n  /** Publishes translated response as a TRANSACTION_COMPLETE event\r\n   * to allow the page to submit to the merchant server\r\n   * @param responseData The decoded response from the gateway\r\n   * @param jwtResponse The raw JWT response from the gateway\r\n   * @param threedresponse the response from Cardinal commerce after call to ACS\r\n   */\r\n  public static publishResponse(responseData: IResponseData, jwtResponse?: string, threedresponse?: string) {\r\n    const translator = new Translator(StCodec._locale);\r\n    responseData.errormessage = translator.translate(responseData.errormessage);\r\n    const eventData = { ...responseData };\r\n    if (jwtResponse !== undefined) {\r\n      eventData.jwt = jwtResponse;\r\n    }\r\n    if (threedresponse !== undefined) {\r\n      eventData.threedresponse = threedresponse;\r\n    }\r\n    const notificationEvent: IMessageBusEvent = {\r\n      data: eventData,\r\n      type: MessageBus.EVENTS_PUBLIC.TRANSACTION_COMPLETE\r\n    };\r\n    StCodec.getMessageBus().publish(notificationEvent, true);\r\n  }\r\n\r\n  public static updateJWTValue(newJWT: string) {\r\n    StCodec.jwt = newJWT ? newJWT : StCodec.jwt;\r\n    StCodec.originalJwt = newJWT ? newJWT : StCodec.originalJwt;\r\n    const messageBusEvent: IMessageBusEvent = {\r\n      data: {\r\n        newJwt: StCodec.jwt\r\n      },\r\n      type: MessageBus.EVENTS_PUBLIC.UPDATE_JWT\r\n    };\r\n    StCodec.getMessageBus().publish(messageBusEvent, true);\r\n  }\r\n\r\n  private static _notification: NotificationService;\r\n  private static _messageBus: MessageBus;\r\n  private static _frame: Frame;\r\n  private static _locale: string;\r\n  private static REQUESTS_WITH_ERROR_MESSAGES = [\r\n    'AUTH',\r\n    'CACHETOKENISE',\r\n    'ERROR',\r\n    'THREEDQUERY',\r\n    'WALLETVERIFY',\r\n    'RISKDEC',\r\n    'SUBSCRIPTION',\r\n    'ACCOUNTCHECK'\r\n  ];\r\n  private static STATUS_CODES = { invalidfield: '30000', ok: '0', declined: '70000' };\r\n\r\n  private static getMessageBus(): MessageBus {\r\n    return StCodec._messageBus || (StCodec._messageBus = Container.get(MessageBus));\r\n  }\r\n\r\n  private static getNotification(): NotificationService {\r\n    return StCodec._notification || (StCodec._notification = Container.get(NotificationService));\r\n  }\r\n\r\n  private static getFrameService(): Frame {\r\n    return StCodec._frame || (StCodec._frame = Container.get(Frame));\r\n  }\r\n\r\n  private static _createCommunicationError() {\r\n    return {\r\n      errorcode: '50003',\r\n      errormessage: COMMUNICATION_ERROR_INVALID_RESPONSE\r\n    } as IResponseData;\r\n  }\r\n\r\n  private static _handleInvalidResponse() {\r\n    const validation = new Validation();\r\n    StCodec.publishResponse(StCodec._createCommunicationError());\r\n    StCodec.getNotification().error(COMMUNICATION_ERROR_INVALID_RESPONSE);\r\n    validation.blockForm(FormState.AVAILABLE);\r\n    StCodec.getMessageBus().publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK }, true);\r\n\r\n    return new Error(COMMUNICATION_ERROR_INVALID_RESPONSE);\r\n  }\r\n\r\n  private static _isInvalidResponse(responseData: any) {\r\n    return !(\r\n      responseData &&\r\n      responseData.version === StCodec.VERSION &&\r\n      responseData.response &&\r\n      responseData.response.length > 0\r\n    );\r\n  }\r\n\r\n  private static _determineResponse(responseData: any) {\r\n    let responseContent: IResponseData;\r\n    responseData.response.forEach((r: any) => {\r\n      if (r.customeroutput) {\r\n        responseContent = r;\r\n      }\r\n    });\r\n    if (!responseContent) {\r\n      responseContent = responseData.response[responseData.response.length - 1];\r\n    }\r\n    return responseContent;\r\n  }\r\n\r\n  private static _handleValidGatewayResponse(responseContent: IResponseData, jwtResponse: string) {\r\n    const translator = new Translator(StCodec._locale);\r\n    const validation = new Validation();\r\n\r\n    const { errorcode, errormessage, requesttypedescription } = responseContent;\r\n\r\n    const errormessageTranslated = translator.translate(errormessage);\r\n\r\n    if (!StCodec.REQUESTS_WITH_ERROR_MESSAGES.includes(requesttypedescription)) {\r\n      return;\r\n    }\r\n\r\n    if (errorcode === StCodec.STATUS_CODES.ok) {\r\n      StCodec.publishResponse(responseContent, jwtResponse);\r\n      return;\r\n    }\r\n\r\n    if (responseContent.walletsource && responseContent.walletsource === 'APPLEPAY') {\r\n      StCodec.getNotification().error(errormessageTranslated);\r\n      StCodec.getMessageBus().publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK }, true);\r\n      StCodec.publishResponse(responseContent, jwtResponse);\r\n      return;\r\n    }\r\n\r\n    if (errorcode === StCodec.STATUS_CODES.invalidfield) {\r\n      validation.getErrorData(StCodec.getErrorData(responseContent));\r\n    }\r\n\r\n    validation.blockForm(FormState.AVAILABLE);\r\n    StCodec.getNotification().error(errormessageTranslated);\r\n    StCodec.getMessageBus().publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK }, true);\r\n    StCodec.publishResponse(responseContent, jwtResponse);\r\n    throw new Error(errormessage);\r\n  }\r\n\r\n  private static _decodeResponseJwt(jwt: string, reject: (error: Error) => void) {\r\n    let decoded: any;\r\n    try {\r\n      decoded = JwtDecode(jwt) as any;\r\n    } catch (e) {\r\n      reject(StCodec._handleInvalidResponse());\r\n    }\r\n    return decoded;\r\n  }\r\n\r\n  private readonly _requestId: string;\r\n\r\n  constructor(jwt: string) {\r\n    this._requestId = StCodec._createRequestId();\r\n    StCodec._notification = Container.get(NotificationService);\r\n    StCodec.jwt = jwt;\r\n    StCodec.originalJwt = jwt;\r\n    StCodec._locale = new StJwt(StCodec.jwt).locale;\r\n  }\r\n\r\n  public buildRequestObject(requestData: object): object {\r\n    return {\r\n      acceptcustomeroutput: '1.00',\r\n      jwt: StCodec.jwt,\r\n      request: [\r\n        {\r\n          ...requestData,\r\n          requestid: this._requestId,\r\n          sitereference: new StJwt(StCodec.jwt).sitereference\r\n        }\r\n      ],\r\n      version: StCodec.VERSION,\r\n      versioninfo: StCodec.VERSION_INFO\r\n    };\r\n  }\r\n\r\n  public encode(requestObject: IStRequest) {\r\n    if (\r\n      Object.keys(requestObject).length < StCodec.MINIMUM_REQUEST_FIELDS ||\r\n      !requestObject.requesttypedescriptions.every(val => StCodec.SUPPORTED_REQUEST_TYPES.includes(val))\r\n    ) {\r\n      StCodec.getMessageBus().publish({ type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK }, true);\r\n      StCodec.getNotification().error(COMMUNICATION_ERROR_INVALID_REQUEST);\r\n      throw new Error(COMMUNICATION_ERROR_INVALID_REQUEST);\r\n    }\r\n    return JSON.stringify(this.buildRequestObject(requestObject));\r\n  }\r\n\r\n  public async decode(responseObject: Response | {}): Promise<object> {\r\n    let decoded: any;\r\n    const promise = await new Promise((resolve, reject) => {\r\n      if ('json' in responseObject) {\r\n        responseObject.json().then(responseData => {\r\n          decoded = StCodec._decodeResponseJwt(responseData.jwt, reject);\r\n          if (decoded && decoded.payload.response[0].errorcode === '0') {\r\n            StCodec.jwt = decoded.payload.jwt;\r\n          } else {\r\n            StCodec.jwt = StCodec.originalJwt;\r\n          }\r\n          resolve({\r\n            jwt: responseData.jwt,\r\n            response: StCodec.verifyResponseObject(decoded.payload, responseData.jwt)\r\n          });\r\n        });\r\n      } else {\r\n        StCodec.jwt = StCodec.originalJwt;\r\n        reject(StCodec._handleInvalidResponse());\r\n      }\r\n    });\r\n    // @ts-ignore\r\n    return promise;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\services\\st-transport\\StTransport.class.ts":{"language":"typescript","mutants":[{"id":"1534","location":{"end":{"column":4,"line":28},"start":{"column":42,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1536","location":{"end":{"column":19,"line":27},"start":{"column":13,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1535","location":{"end":{"column":6,"line":26},"start":{"column":14,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1538","location":{"end":{"column":51,"line":50},"start":{"column":9,"line":50}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1537","location":{"end":{"column":4,"line":56},"start":{"column":72,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1539","location":{"end":{"column":51,"line":50},"start":{"column":9,"line":50}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1540","location":{"end":{"column":51,"line":50},"start":{"column":9,"line":50}},"mutatorName":"BooleanLiteral","replacement":"this._throttlingRequests.has(requestBody)","status":"Survived"},{"id":"1542","location":{"end":{"column":68,"line":52},"start":{"column":18,"line":52}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1541","location":{"end":{"column":6,"line":53},"start":{"column":53,"line":50}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1543","location":{"end":{"column":4,"line":70},"start":{"column":69,"line":58}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1544","location":{"end":{"column":6,"line":65},"start":{"column":41,"line":62}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1545","location":{"end":{"column":8,"line":69},"start":{"column":20,"line":67}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1546","location":{"end":{"column":4,"line":98},"start":{"column":5,"line":91}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1549","location":{"end":{"column":4,"line":106},"start":{"column":32,"line":100}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1547","location":{"end":{"column":90,"line":93},"start":{"column":7,"line":93}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1548","location":{"end":{"column":73,"line":93},"start":{"column":48,"line":93}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1551","location":{"end":{"column":22,"line":101},"start":{"column":9,"line":101}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1550","location":{"end":{"column":22,"line":101},"start":{"column":9,"line":101}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1552","location":{"end":{"column":22,"line":101},"start":{"column":9,"line":101}},"mutatorName":"BooleanLiteral","replacement":"this._config","status":"Survived"},{"id":"1554","location":{"end":{"column":4,"line":115},"start":{"column":31,"line":108}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1555","location":{"end":{"column":21,"line":109},"start":{"column":9,"line":109}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1553","location":{"end":{"column":6,"line":103},"start":{"column":24,"line":101}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1556","location":{"end":{"column":21,"line":109},"start":{"column":9,"line":109}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1557","location":{"end":{"column":21,"line":109},"start":{"column":9,"line":109}},"mutatorName":"BooleanLiteral","replacement":"this._codec","status":"Survived"},{"id":"1558","location":{"end":{"column":6,"line":112},"start":{"column":23,"line":109}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Utils } from '../../shared/utils/Utils';\r\nimport { StCodec } from '../st-codec/StCodec.class';\r\nimport { Service } from 'typedi';\r\nimport { ConfigProvider } from '../../../../shared/services/config-provider/ConfigProvider';\r\nimport { IConfig } from '../../../../shared/model/config/IConfig';\r\nimport { IStRequest } from '../../models/IStRequest';\r\n\r\n/**\r\n * Establishes connection with ST, defines client.\r\n * example usage:\r\n *   st.sendRequest({\r\n *     accounttypedescription: 'ECOM',\r\n *     expirydate: '01/20',\r\n *     pan: '4111111111111111',\r\n *     requesttypedescription: 'AUTH',\r\n *     securitycode: '123',\r\n *     sitereference: 'test_james38641'\r\n *   }).then();\r\n */\r\n@Service()\r\nexport class StTransport {\r\n  private static DEFAULT_FETCH_OPTIONS = {\r\n    headers: {\r\n      Accept: StCodec.CONTENT_TYPE,\r\n      'Content-Type': StCodec.CONTENT_TYPE\r\n    },\r\n    method: 'post'\r\n  };\r\n\r\n  public static readonly THROTTLE_TIME = 250;\r\n  private static DELAY = 1000;\r\n  private static RETRY_LIMIT = 5;\r\n  private static RETRY_TIMEOUT = 10000;\r\n  private static TIMEOUT = 10000;\r\n  private _throttlingRequests = new Map<string, Promise<object>>();\r\n  private _config: IConfig;\r\n  private _codec: StCodec;\r\n  public _threeDQueryResult: any;\r\n\r\n  constructor(private configProvider: ConfigProvider) {}\r\n\r\n  /**\r\n   * Perform a JSON API request with ST\r\n   * @param requestObject A request object to send to ST\r\n   * @return A Promise object that resolves the gateway response\r\n   */\r\n  public async sendRequest(requestObject: IStRequest): Promise<object> {\r\n    const requestBody = this.getCodec().encode(requestObject);\r\n\r\n    if (!this._throttlingRequests.has(requestBody)) {\r\n      this._throttlingRequests.set(requestBody, this.sendRequestInternal(requestBody));\r\n      setTimeout(() => this._throttlingRequests.delete(requestBody), StTransport.THROTTLE_TIME);\r\n    }\r\n\r\n    return this._throttlingRequests.get(requestBody);\r\n  }\r\n\r\n  private sendRequestInternal(requestBody: string): Promise<object> {\r\n    const codec = this.getCodec();\r\n    const gatewayUrl = this.getConfig().datacenterurl;\r\n\r\n    return this._fetchRetry(gatewayUrl, {\r\n      ...StTransport.DEFAULT_FETCH_OPTIONS,\r\n      body: requestBody\r\n    })\r\n      .then(codec.decode)\r\n      .catch(() => {\r\n        return codec.decode({});\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Fetch with timeout and retry\r\n   * We probably want to update this to use an AbortControllor once this is standardised in the future\r\n   * @param url The URL to be passed to the fetch request\r\n   * @param options The options object to be passed to the fetch request\r\n   * @param connectTimeout The time (ms) after which to time out\r\n   * @param delay The delay for the retry\r\n   * @param retries The number of retries\r\n   * @param retryTimeout The longest amount of time to spend retrying\r\n   * @return A Promise that resolves to a fetch response or rejects with an error\r\n   * @private\r\n   */\r\n  private _fetchRetry(\r\n    url: string,\r\n    options: object,\r\n    connectTimeout = StTransport.TIMEOUT,\r\n    delay = StTransport.DELAY,\r\n    retries = StTransport.RETRY_LIMIT,\r\n    retryTimeout = StTransport.RETRY_TIMEOUT\r\n  ) {\r\n    return Utils.retryPromise(\r\n      () => Utils.promiseWithTimeout<Response>(() => fetch(url, options), connectTimeout),\r\n      delay,\r\n      retries,\r\n      retryTimeout\r\n    );\r\n  }\r\n\r\n  private getConfig(): IConfig {\r\n    if (!this._config) {\r\n      this._config = this.configProvider.getConfig();\r\n    }\r\n\r\n    return this._config;\r\n  }\r\n\r\n  private getCodec(): StCodec {\r\n    if (!this._codec) {\r\n      const { jwt } = this.getConfig();\r\n      this._codec = new StCodec(jwt);\r\n    }\r\n\r\n    return this._codec;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\services\\store-config-provider\\StoreConfigProvider.ts":{"language":"typescript","mutants":[{"id":"1559","location":{"end":{"column":4,"line":14},"start":{"column":24,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1561","location":{"end":{"column":44,"line":18},"start":{"column":16,"line":18}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1560","location":{"end":{"column":4,"line":22},"start":{"column":62,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { ConfigProvider } from '../../../../shared/services/config-provider/ConfigProvider';\r\nimport { Service } from 'typedi';\r\nimport { IConfig } from '../../../../shared/model/config/IConfig';\r\nimport { Observable } from 'rxjs';\r\nimport { Store } from '../../store/Store';\r\nimport { filter, first } from 'rxjs/operators';\r\n\r\n@Service()\r\nexport class StoreConfigProvider implements ConfigProvider {\r\n  constructor(private store: Store) {}\r\n\r\n  getConfig(): IConfig {\r\n    return this.store.getState().config.config;\r\n  }\r\n\r\n  getConfig$(watchForChanges?: boolean): Observable<IConfig> {\r\n    const config$: Observable<IConfig> = this.store\r\n      .select$(state => state.config.config)\r\n      .pipe(filter<IConfig>(Boolean));\r\n\r\n    return watchForChanges ? config$ : config$.pipe(first());\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\array-utils\\ArrayUtils.ts":{"language":"typescript","mutants":[{"id":"1562","location":{"end":{"column":4,"line":4},"start":{"column":44,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1563","location":{"end":{"column":4,"line":8},"start":{"column":53,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1564","location":{"end":{"column":76,"line":7},"start":{"column":12,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1565","location":{"end":{"column":76,"line":7},"start":{"column":12,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1566","location":{"end":{"column":76,"line":7},"start":{"column":12,"line":7}},"mutatorName":"LogicalOperator","replacement":"a.length === b.length || JSON.stringify(a) === JSON.stringify(b)","status":"Survived"},{"id":"1568","location":{"end":{"column":33,"line":7},"start":{"column":12,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1567","location":{"end":{"column":33,"line":7},"start":{"column":12,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1569","location":{"end":{"column":33,"line":7},"start":{"column":12,"line":7}},"mutatorName":"EqualityOperator","replacement":"a.length !== b.length","status":"Survived"},{"id":"1570","location":{"end":{"column":76,"line":7},"start":{"column":37,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1571","location":{"end":{"column":76,"line":7},"start":{"column":37,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1572","location":{"end":{"column":76,"line":7},"start":{"column":37,"line":7}},"mutatorName":"EqualityOperator","replacement":"JSON.stringify(a) !== JSON.stringify(b)","status":"Survived"}],"source":"export class ArrayUtils {\r\n  public static unique<T>(array: T[]): T[] {\r\n    return Array.from(new Set(array).values());\r\n  }\r\n\r\n  public static equals(a: any[], b: any[]): boolean {\r\n    return a.length === b.length && JSON.stringify(a) === JSON.stringify(b);\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\dom-methods\\DomMethods.ts":{"language":"typescript","mutants":[{"id":"1574","location":{"end":{"column":53,"line":5},"start":{"column":45,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1573","location":{"end":{"column":46,"line":4},"start":{"column":40,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1575","location":{"end":{"column":48,"line":6},"start":{"column":41,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1577","location":{"end":{"column":50,"line":8},"start":{"column":42,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1576","location":{"end":{"column":50,"line":7},"start":{"column":42,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1578","location":{"end":{"column":47,"line":9},"start":{"column":42,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1579","location":{"end":{"column":60,"line":10},"start":{"column":46,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1580","location":{"end":{"column":48,"line":11},"start":{"column":41,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1582","location":{"end":{"column":6,"line":33},"start":{"column":54,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1581","location":{"end":{"column":4,"line":34},"start":{"column":90,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1583","location":{"end":{"column":44,"line":15},"start":{"column":11,"line":15}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1584","location":{"end":{"column":44,"line":15},"start":{"column":11,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1585","location":{"end":{"column":44,"line":15},"start":{"column":11,"line":15}},"mutatorName":"LogicalOperator","replacement":"!fields && fields.includes(field)","status":"Survived"},{"id":"1586","location":{"end":{"column":18,"line":15},"start":{"column":11,"line":15}},"mutatorName":"BooleanLiteral","replacement":"fields","status":"Survived"},{"id":"1587","location":{"end":{"column":8,"line":32},"start":{"column":46,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1588","location":{"end":{"column":110,"line":16},"start":{"column":65,"line":16}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1589","location":{"end":{"column":25,"line":18},"start":{"column":13,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1590","location":{"end":{"column":25,"line":18},"start":{"column":13,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1592","location":{"end":{"column":61,"line":19},"start":{"column":59,"line":19}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1591","location":{"end":{"column":10,"line":20},"start":{"column":27,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1593","location":{"end":{"column":10,"line":29},"start":{"column":16,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1594","location":{"end":{"column":4,"line":38},"start":{"column":90,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1596","location":{"end":{"column":4,"line":52},"start":{"column":87,"line":48}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1595","location":{"end":{"column":4,"line":46},"start":{"column":81,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1597","location":{"end":{"column":85,"line":50},"start":{"column":33,"line":50}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1598","location":{"end":{"column":4,"line":57},"start":{"column":38,"line":54}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1599","location":{"end":{"column":4,"line":57},"start":{"column":68,"line":54}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1600","location":{"end":{"column":4,"line":73},"start":{"column":87,"line":59}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1601","location":{"end":{"column":6,"line":72},"start":{"column":45,"line":60}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1602","location":{"end":{"column":17,"line":62},"start":{"column":11,"line":62}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1603","location":{"end":{"column":17,"line":62},"start":{"column":11,"line":62}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1604","location":{"end":{"column":8,"line":64},"start":{"column":19,"line":62}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1605","location":{"end":{"column":8,"line":71},"start":{"column":14,"line":64}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1606","location":{"end":{"column":39,"line":68},"start":{"column":33,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1607","location":{"end":{"column":10,"line":70},"start":{"column":47,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1608","location":{"end":{"column":4,"line":85},"start":{"column":55,"line":75}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1610","location":{"end":{"column":15,"line":78},"start":{"column":9,"line":78}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1609","location":{"end":{"column":15,"line":78},"start":{"column":9,"line":78}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1612","location":{"end":{"column":6,"line":83},"start":{"column":17,"line":78}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1611","location":{"end":{"column":15,"line":78},"start":{"column":9,"line":78}},"mutatorName":"BooleanLiteral","replacement":"style","status":"Survived"},{"id":"1613","location":{"end":{"column":30,"line":80},"start":{"column":26,"line":80}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1615","location":{"end":{"column":32,"line":81},"start":{"column":26,"line":81}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1614","location":{"end":{"column":48,"line":80},"start":{"column":32,"line":80}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1616","location":{"end":{"column":44,"line":81},"start":{"column":34,"line":81}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1618","location":{"end":{"column":4,"line":97},"start":{"column":47,"line":87}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1617","location":{"end":{"column":90,"line":84},"start":{"column":22,"line":84}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1619","location":{"end":{"column":6,"line":95},"start":{"column":27,"line":91}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1620","location":{"end":{"column":56,"line":92},"start":{"column":11,"line":92}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1621","location":{"end":{"column":56,"line":92},"start":{"column":11,"line":92}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1622","location":{"end":{"column":8,"line":94},"start":{"column":58,"line":92}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1623","location":{"end":{"column":4,"line":108},"start":{"column":67,"line":99}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1624","location":{"end":{"column":17,"line":101},"start":{"column":9,"line":101}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1625","location":{"end":{"column":17,"line":101},"start":{"column":9,"line":101}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1626","location":{"end":{"column":17,"line":101},"start":{"column":9,"line":101}},"mutatorName":"BooleanLiteral","replacement":"element","status":"Survived"},{"id":"1627","location":{"end":{"column":6,"line":103},"start":{"column":19,"line":101}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1629","location":{"end":{"column":6,"line":106},"start":{"column":31,"line":104}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1628","location":{"end":{"column":29,"line":104},"start":{"column":12,"line":104}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1630","location":{"end":{"column":4,"line":122},"start":{"column":65,"line":110}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1631","location":{"end":{"column":19,"line":114},"start":{"column":9,"line":114}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1632","location":{"end":{"column":19,"line":114},"start":{"column":9,"line":114}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1633","location":{"end":{"column":6,"line":116},"start":{"column":21,"line":114}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1634","location":{"end":{"column":6,"line":121},"start":{"column":47,"line":117}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1635","location":{"end":{"column":64,"line":118},"start":{"column":11,"line":118}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1636","location":{"end":{"column":64,"line":118},"start":{"column":11,"line":118}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1637","location":{"end":{"column":64,"line":118},"start":{"column":11,"line":118}},"mutatorName":"EqualityOperator","replacement":"script.getAttribute(DomMethods.SRC_ATTRIBUTE) !== src","status":"Survived"},{"id":"1638","location":{"end":{"column":8,"line":120},"start":{"column":66,"line":118}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1639","location":{"end":{"column":4,"line":131},"start":{"column":76,"line":124}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1640","location":{"end":{"column":6,"line":129},"start":{"column":52,"line":126}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { IScriptParams } from '../../models/IScriptParams';\r\n\r\nexport class DomMethods {\r\n  private static BODY_MARKUP: string = 'body';\r\n  private static HIDDEN_ATTRIBUTE: string = 'hidden';\r\n  private static INPUT_MARKUP: string = 'input';\r\n  private static SCRIPT_MARKUP: string = 'script';\r\n  private static SELECT_MARKUP: string = 'select';\r\n  private static SRC_ATTRIBUTE: string = 'src';\r\n  private static ST_NAME_ATTRIBUTE: string = 'data-st-name';\r\n  private static STYLE_MARKUP: string = 'style';\r\n\r\n  public static addDataToForm(form: HTMLFormElement, data: any, fields?: string[]): void {\r\n    Object.entries(data).forEach(([field, value]) => {\r\n      if (!fields || fields.includes(field)) {\r\n        let inputElement: HTMLInputElement = form.querySelector(`${DomMethods.INPUT_MARKUP}[name=\"${field}\"]`);\r\n\r\n        if (inputElement) {\r\n          inputElement.value = value ? value.toString() : '';\r\n        } else {\r\n          inputElement = DomMethods.createHtmlElement(\r\n            {\r\n              name: field,\r\n              type: DomMethods.HIDDEN_ATTRIBUTE,\r\n              value\r\n            },\r\n            DomMethods.INPUT_MARKUP\r\n          ) as HTMLInputElement;\r\n        }\r\n\r\n        form.appendChild(inputElement);\r\n      }\r\n    });\r\n  }\r\n\r\n  public static addListener(targetId: string, listenerType: string, callback: any): void {\r\n    document.getElementById(targetId).addEventListener(listenerType, callback);\r\n  }\r\n\r\n  public static appendChildIntoDOM(target: string, child: HTMLElement): Element {\r\n    const element: Element = document.getElementById(target)\r\n      ? document.getElementById(target)\r\n      : document.getElementsByTagName(DomMethods.BODY_MARKUP)[0];\r\n    element.appendChild(child);\r\n    return element;\r\n  }\r\n\r\n  public static createHtmlElement = (attributes: any, markup: string): HTMLElement => {\r\n    const element: HTMLElement = document.createElement(markup);\r\n    Object.keys(attributes).map(item => element.setAttribute(item, attributes[item]));\r\n    return element;\r\n  };\r\n\r\n  public static getAllFormElements = (form: HTMLElement): any[] => [\r\n    ...Array.from(form.querySelectorAll(DomMethods.SELECT_MARKUP)),\r\n    ...Array.from(form.querySelectorAll(DomMethods.INPUT_MARKUP))\r\n  ];\r\n\r\n  public static insertScript(target: string, params: IScriptParams): Promise<Element> {\r\n    return new Promise((resolve, reject) => {\r\n      const loaded: Element = DomMethods.isScriptLoaded(params);\r\n      if (loaded) {\r\n        resolve(loaded);\r\n      } else {\r\n        const targetElement: Element = document.getElementsByTagName(target)[0];\r\n        const script: Element = DomMethods.setMarkupAttributes(DomMethods.SCRIPT_MARKUP, params);\r\n        targetElement.appendChild(script);\r\n        script.addEventListener('load', () => {\r\n          resolve(script);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public static insertStyle(contents: string[]): void {\r\n    let style: HTMLStyleElement = document.getElementById('insertedStyles') as HTMLStyleElement;\r\n\r\n    if (!style) {\r\n      style = document.createElement(DomMethods.STYLE_MARKUP) as HTMLStyleElement;\r\n      style.setAttribute('id', 'insertedStyles');\r\n      style.setAttribute('type', 'text/css');\r\n      document.head.appendChild(style);\r\n    }\r\n    contents.forEach((item: string) => (style.sheet as CSSStyleSheet).insertRule(item, 0));\r\n  }\r\n\r\n  public static parseForm(formId: string): {} {\r\n    const form: HTMLElement = document.getElementById(formId);\r\n    const els = DomMethods.getAllFormElements(form);\r\n    const result: any = {};\r\n    for (const el of els) {\r\n      if (el.hasAttribute(DomMethods.ST_NAME_ATTRIBUTE)) {\r\n        result[el.getAttribute(DomMethods.ST_NAME_ATTRIBUTE)] = el.value;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public static removeAllChildren(placement: string): HTMLElement {\r\n    const element: HTMLElement = document.getElementById(placement);\r\n    if (!element) {\r\n      return element;\r\n    }\r\n    while (element.lastChild) {\r\n      element.removeChild(element.lastChild);\r\n    }\r\n    return element;\r\n  }\r\n\r\n  private static isScriptLoaded(params: IScriptParams): Element {\r\n    const { src, id } = params;\r\n    const scripts: HTMLCollection = document.getElementsByTagName(DomMethods.SCRIPT_MARKUP);\r\n    const scriptById: HTMLElement = document.getElementById(id);\r\n    if (scriptById) {\r\n      return scriptById;\r\n    }\r\n    for (const script of Array.from(scripts)) {\r\n      if (script.getAttribute(DomMethods.SRC_ATTRIBUTE) === src) {\r\n        return script;\r\n      }\r\n    }\r\n  }\r\n\r\n  private static setMarkupAttributes(target: string, params: any): Element {\r\n    const element: Element = document.createElement(target) as Element;\r\n    Object.keys(params).forEach((param: string) => {\r\n      // @ts-ignore\r\n      element.setAttribute(param, params[param]);\r\n    });\r\n    return element;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\formatter\\Formatter.ts":{"language":"typescript","mutants":[{"id":"1641","location":{"end":{"column":37,"line":7},"start":{"column":31,"line":7}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1643","location":{"end":{"column":25,"line":10},"start":{"column":23,"line":10}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1642","location":{"end":{"column":4,"line":13},"start":{"column":25,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1645","location":{"end":{"column":25,"line":12},"start":{"column":23,"line":12}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1644","location":{"end":{"column":24,"line":11},"start":{"column":22,"line":11}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1646","location":{"end":{"column":37,"line":14},"start":{"column":29,"line":14}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1647","location":{"end":{"column":32,"line":14},"start":{"column":30,"line":14}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1649","location":{"end":{"column":4,"line":19},"start":{"column":17,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1648","location":{"end":{"column":36,"line":14},"start":{"column":34,"line":14}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1650","location":{"end":{"column":4,"line":56},"start":{"column":49,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1652","location":{"end":{"column":35,"line":32},"start":{"column":9,"line":32}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1651","location":{"end":{"column":96,"line":27},"start":{"column":55,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1653","location":{"end":{"column":35,"line":32},"start":{"column":9,"line":32}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1656","location":{"end":{"column":35,"line":32},"start":{"column":19,"line":32}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1655","location":{"end":{"column":35,"line":32},"start":{"column":19,"line":32}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1654","location":{"end":{"column":35,"line":32},"start":{"column":9,"line":32}},"mutatorName":"LogicalOperator","replacement":"format || value.length > 0","status":"Survived"},{"id":"1657","location":{"end":{"column":35,"line":32},"start":{"column":19,"line":32}},"mutatorName":"EqualityOperator","replacement":"value.length >= 0","status":"Survived"},{"id":"1658","location":{"end":{"column":35,"line":32},"start":{"column":19,"line":32}},"mutatorName":"EqualityOperator","replacement":"value.length <= 0","status":"Survived"},{"id":"1659","location":{"end":{"column":6,"line":45},"start":{"column":37,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1660","location":{"end":{"column":54,"line":34},"start":{"column":52,"line":34}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1661","location":{"end":{"column":44,"line":35},"start":{"column":11,"line":35}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1662","location":{"end":{"column":44,"line":35},"start":{"column":11,"line":35}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1663","location":{"end":{"column":8,"line":37},"start":{"column":46,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1664","location":{"end":{"column":32,"line":39},"start":{"column":11,"line":39}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1666","location":{"end":{"column":32,"line":39},"start":{"column":11,"line":39}},"mutatorName":"LogicalOperator","replacement":"format || matched > 1","status":"Survived"},{"id":"1665","location":{"end":{"column":32,"line":39},"start":{"column":11,"line":39}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1667","location":{"end":{"column":32,"line":39},"start":{"column":21,"line":39}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1668","location":{"end":{"column":32,"line":39},"start":{"column":21,"line":39}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1669","location":{"end":{"column":32,"line":39},"start":{"column":21,"line":39}},"mutatorName":"EqualityOperator","replacement":"matched >= 1","status":"Survived"},{"id":"1671","location":{"end":{"column":8,"line":44},"start":{"column":34,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1670","location":{"end":{"column":32,"line":39},"start":{"column":21,"line":39}},"mutatorName":"EqualityOperator","replacement":"matched <= 1","status":"Survived"},{"id":"1672","location":{"end":{"column":51,"line":40},"start":{"column":48,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1673","location":{"end":{"column":44,"line":41},"start":{"column":24,"line":41}},"mutatorName":"ArithmeticOperator","replacement":"matched + preMatched","status":"Survived"},{"id":"1674","location":{"end":{"column":42,"line":42},"start":{"column":22,"line":42}},"mutatorName":"ArithmeticOperator","replacement":"matched + preMatched","status":"Survived"},{"id":"1675","location":{"end":{"column":33,"line":43},"start":{"column":30,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1676","location":{"end":{"column":32,"line":47},"start":{"column":9,"line":47}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1677","location":{"end":{"column":32,"line":47},"start":{"column":9,"line":47}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1678","location":{"end":{"column":32,"line":47},"start":{"column":9,"line":47}},"mutatorName":"EqualityOperator","replacement":"value === previousValue","status":"Survived"},{"id":"1679","location":{"end":{"column":6,"line":50},"start":{"column":34,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1680","location":{"end":{"column":43,"line":48},"start":{"column":34,"line":48}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1681","location":{"end":{"column":51,"line":51},"start":{"column":49,"line":51}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1683","location":{"end":{"column":14,"line":52},"start":{"column":9,"line":52}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1682","location":{"end":{"column":14,"line":52},"start":{"column":9,"line":52}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1684","location":{"end":{"column":6,"line":54},"start":{"column":16,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1685","location":{"end":{"column":65,"line":53},"start":{"column":63,"line":53}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1686","location":{"end":{"column":100,"line":55},"start":{"column":12,"line":55}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1687","location":{"end":{"column":4,"line":75},"start":{"column":43,"line":58}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1689","location":{"end":{"column":6,"line":70},"start":{"column":36,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1688","location":{"end":{"column":28,"line":61},"start":{"column":26,"line":61}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1690","location":{"end":{"column":98,"line":64},"start":{"column":11,"line":64}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1691","location":{"end":{"column":98,"line":64},"start":{"column":11,"line":64}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1692","location":{"end":{"column":98,"line":64},"start":{"column":11,"line":64}},"mutatorName":"LogicalOperator","replacement":"this._validation.expirationDateValue || this._validation.expirationDateValue.length > 0","status":"Survived"},{"id":"1694","location":{"end":{"column":98,"line":64},"start":{"column":51,"line":64}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1693","location":{"end":{"column":98,"line":64},"start":{"column":51,"line":64}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1695","location":{"end":{"column":98,"line":64},"start":{"column":51,"line":64}},"mutatorName":"EqualityOperator","replacement":"this._validation.expirationDateValue.length >= 0","status":"Survived"},{"id":"1696","location":{"end":{"column":98,"line":64},"start":{"column":51,"line":64}},"mutatorName":"EqualityOperator","replacement":"this._validation.expirationDateValue.length <= 0","status":"Survived"},{"id":"1697","location":{"end":{"column":8,"line":69},"start":{"column":100,"line":64}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1698","location":{"end":{"column":43,"line":73},"start":{"column":41,"line":73}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1699","location":{"end":{"column":4,"line":82},"start":{"column":59,"line":77}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1700","location":{"end":{"column":97,"line":80},"start":{"column":95,"line":80}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1702","location":{"end":{"column":50,"line":89},"start":{"column":9,"line":89}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1701","location":{"end":{"column":4,"line":107},"start":{"column":67,"line":84}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1703","location":{"end":{"column":50,"line":89},"start":{"column":9,"line":89}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1704","location":{"end":{"column":50,"line":89},"start":{"column":9,"line":89}},"mutatorName":"BooleanLiteral","replacement":"this._dateBlocks.currentDateMonth.length","status":"Survived"},{"id":"1705","location":{"end":{"column":6,"line":91},"start":{"column":52,"line":89}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1706","location":{"end":{"column":16,"line":90},"start":{"column":14,"line":90}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1707","location":{"end":{"column":105,"line":91},"start":{"column":16,"line":91}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1708","location":{"end":{"column":105,"line":91},"start":{"column":16,"line":91}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1709","location":{"end":{"column":105,"line":91},"start":{"column":16,"line":91}},"mutatorName":"LogicalOperator","replacement":"this._dateBlocks.currentDateMonth.length || this._dateBlocks.currentDateYear.length === 0","status":"Survived"},{"id":"1710","location":{"end":{"column":105,"line":91},"start":{"column":60,"line":91}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1711","location":{"end":{"column":105,"line":91},"start":{"column":60,"line":91}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1713","location":{"end":{"column":6,"line":93},"start":{"column":107,"line":91}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1712","location":{"end":{"column":105,"line":91},"start":{"column":60,"line":91}},"mutatorName":"EqualityOperator","replacement":"this._dateBlocks.currentDateYear.length !== 0","status":"Survived"},{"id":"1715","location":{"end":{"column":53,"line":96},"start":{"column":7,"line":94}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1716","location":{"end":{"column":53,"line":96},"start":{"column":7,"line":94}},"mutatorName":"LogicalOperator","replacement":"this._dateBlocks.currentDateMonth.length === 2 && this._dateBlocks.currentDateYear.length === 1 || this._dateBlocks.previousDateYear.length === 0","status":"Survived"},{"id":"1714","location":{"end":{"column":53,"line":96},"start":{"column":7,"line":94}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1717","location":{"end":{"column":52,"line":95},"start":{"column":7,"line":94}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1718","location":{"end":{"column":52,"line":95},"start":{"column":7,"line":94}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1720","location":{"end":{"column":53,"line":94},"start":{"column":7,"line":94}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1719","location":{"end":{"column":52,"line":95},"start":{"column":7,"line":94}},"mutatorName":"LogicalOperator","replacement":"this._dateBlocks.currentDateMonth.length === 2 || this._dateBlocks.currentDateYear.length === 1","status":"Survived"},{"id":"1721","location":{"end":{"column":53,"line":94},"start":{"column":7,"line":94}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1722","location":{"end":{"column":53,"line":94},"start":{"column":7,"line":94}},"mutatorName":"EqualityOperator","replacement":"this._dateBlocks.currentDateMonth.length !== 2","status":"Survived"},{"id":"1723","location":{"end":{"column":52,"line":95},"start":{"column":7,"line":95}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1724","location":{"end":{"column":52,"line":95},"start":{"column":7,"line":95}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1725","location":{"end":{"column":52,"line":95},"start":{"column":7,"line":95}},"mutatorName":"EqualityOperator","replacement":"this._dateBlocks.currentDateYear.length !== 1","status":"Survived"},{"id":"1726","location":{"end":{"column":53,"line":96},"start":{"column":7,"line":96}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1728","location":{"end":{"column":53,"line":96},"start":{"column":7,"line":96}},"mutatorName":"EqualityOperator","replacement":"this._dateBlocks.previousDateYear.length !== 0","status":"Survived"},{"id":"1727","location":{"end":{"column":53,"line":96},"start":{"column":7,"line":96}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1730","location":{"end":{"column":88,"line":98},"start":{"column":14,"line":98}},"mutatorName":"ArithmeticOperator","replacement":"this._dateBlocks.currentDateMonth + '/' - this._dateBlocks.currentDateYear","status":"Survived"},{"id":"1729","location":{"end":{"column":6,"line":99},"start":{"column":7,"line":97}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1731","location":{"end":{"column":53,"line":98},"start":{"column":14,"line":98}},"mutatorName":"ArithmeticOperator","replacement":"this._dateBlocks.currentDateMonth - '/'","status":"Survived"},{"id":"1732","location":{"end":{"column":53,"line":98},"start":{"column":50,"line":98}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1733","location":{"end":{"column":104,"line":103},"start":{"column":7,"line":100}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1735","location":{"end":{"column":104,"line":103},"start":{"column":7,"line":100}},"mutatorName":"LogicalOperator","replacement":"this._dateBlocks.currentDateMonth.length === 2 && this._dateBlocks.currentDateYear.length === 1 && (this._dateBlocks.previousDateYear.length === 1 || this._dateBlocks.previousDateYear.length === 2) && this._dateBlocks.currentDateMonth.length === 2 && this._dateBlocks.currentDateYear.length === 2","status":"Survived"},{"id":"1734","location":{"end":{"column":104,"line":103},"start":{"column":7,"line":100}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1736","location":{"end":{"column":107,"line":102},"start":{"column":8,"line":100}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1737","location":{"end":{"column":107,"line":102},"start":{"column":8,"line":100}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1738","location":{"end":{"column":107,"line":102},"start":{"column":8,"line":100}},"mutatorName":"LogicalOperator","replacement":"this._dateBlocks.currentDateMonth.length === 2 && this._dateBlocks.currentDateYear.length === 1 || this._dateBlocks.previousDateYear.length === 1 || this._dateBlocks.previousDateYear.length === 2","status":"Survived"},{"id":"1739","location":{"end":{"column":54,"line":101},"start":{"column":8,"line":100}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1740","location":{"end":{"column":54,"line":101},"start":{"column":8,"line":100}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1741","location":{"end":{"column":54,"line":101},"start":{"column":8,"line":100}},"mutatorName":"LogicalOperator","replacement":"this._dateBlocks.currentDateMonth.length === 2 || this._dateBlocks.currentDateYear.length === 1","status":"Survived"},{"id":"1742","location":{"end":{"column":54,"line":100},"start":{"column":8,"line":100}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1743","location":{"end":{"column":54,"line":100},"start":{"column":8,"line":100}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1744","location":{"end":{"column":54,"line":100},"start":{"column":8,"line":100}},"mutatorName":"EqualityOperator","replacement":"this._dateBlocks.currentDateMonth.length !== 2","status":"Survived"},{"id":"1746","location":{"end":{"column":54,"line":101},"start":{"column":9,"line":101}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1745","location":{"end":{"column":54,"line":101},"start":{"column":9,"line":101}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1747","location":{"end":{"column":54,"line":101},"start":{"column":9,"line":101}},"mutatorName":"EqualityOperator","replacement":"this._dateBlocks.currentDateYear.length !== 1","status":"Survived"},{"id":"1748","location":{"end":{"column":106,"line":102},"start":{"column":10,"line":102}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1749","location":{"end":{"column":106,"line":102},"start":{"column":10,"line":102}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1751","location":{"end":{"column":56,"line":102},"start":{"column":10,"line":102}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1750","location":{"end":{"column":106,"line":102},"start":{"column":10,"line":102}},"mutatorName":"LogicalOperator","replacement":"this._dateBlocks.previousDateYear.length === 1 && this._dateBlocks.previousDateYear.length === 2","status":"Survived"},{"id":"1752","location":{"end":{"column":56,"line":102},"start":{"column":10,"line":102}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1753","location":{"end":{"column":56,"line":102},"start":{"column":10,"line":102}},"mutatorName":"EqualityOperator","replacement":"this._dateBlocks.previousDateYear.length !== 1","status":"Survived"},{"id":"1755","location":{"end":{"column":106,"line":102},"start":{"column":60,"line":102}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1754","location":{"end":{"column":106,"line":102},"start":{"column":60,"line":102}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1756","location":{"end":{"column":106,"line":102},"start":{"column":60,"line":102}},"mutatorName":"EqualityOperator","replacement":"this._dateBlocks.previousDateYear.length !== 2","status":"Survived"},{"id":"1757","location":{"end":{"column":103,"line":103},"start":{"column":8,"line":103}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1758","location":{"end":{"column":103,"line":103},"start":{"column":8,"line":103}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1759","location":{"end":{"column":103,"line":103},"start":{"column":8,"line":103}},"mutatorName":"LogicalOperator","replacement":"this._dateBlocks.currentDateMonth.length === 2 || this._dateBlocks.currentDateYear.length === 2","status":"Survived"},{"id":"1760","location":{"end":{"column":54,"line":103},"start":{"column":8,"line":103}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1762","location":{"end":{"column":54,"line":103},"start":{"column":8,"line":103}},"mutatorName":"EqualityOperator","replacement":"this._dateBlocks.currentDateMonth.length !== 2","status":"Survived"},{"id":"1761","location":{"end":{"column":54,"line":103},"start":{"column":8,"line":103}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1763","location":{"end":{"column":103,"line":103},"start":{"column":58,"line":103}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1764","location":{"end":{"column":103,"line":103},"start":{"column":58,"line":103}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1765","location":{"end":{"column":103,"line":103},"start":{"column":58,"line":103}},"mutatorName":"EqualityOperator","replacement":"this._dateBlocks.currentDateYear.length !== 2","status":"Survived"},{"id":"1766","location":{"end":{"column":6,"line":106},"start":{"column":7,"line":104}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1767","location":{"end":{"column":88,"line":105},"start":{"column":14,"line":105}},"mutatorName":"ArithmeticOperator","replacement":"this._dateBlocks.currentDateMonth + '/' - this._dateBlocks.currentDateYear","status":"Survived"},{"id":"1768","location":{"end":{"column":53,"line":105},"start":{"column":14,"line":105}},"mutatorName":"ArithmeticOperator","replacement":"this._dateBlocks.currentDateMonth - '/'","status":"Survived"},{"id":"1770","location":{"end":{"column":4,"line":115},"start":{"column":37,"line":109}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1769","location":{"end":{"column":53,"line":105},"start":{"column":50,"line":105}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1771","location":{"end":{"column":25,"line":113},"start":{"column":12,"line":113}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import { Utils } from '../utils/Utils';\r\nimport { Container, Service } from 'typedi';\r\nimport { Validation } from '../validation/Validation';\r\n\r\n@Service()\r\nexport class Formatter {\r\n  private _blocks: number[] = [2, 2];\r\n  private _cardNumberFormatted: string;\r\n  private _dateBlocks = {\r\n    currentDateMonth: '',\r\n    currentDateYear: '',\r\n    previousDateYear: ''\r\n  };\r\n  private _date: string[] = ['', ''];\r\n  private _validation: Validation;\r\n\r\n  constructor() {\r\n    this._validation = Container.get(Validation);\r\n  }\r\n\r\n  public number(cardNumber: string, id: string) {\r\n    this._validation.cardNumber(cardNumber);\r\n    const element: HTMLInputElement = document.getElementById(id) as HTMLInputElement;\r\n    const cardNumberCleaned: string = this._validation.removeNonDigits(this._validation.cardNumberValue);\r\n    element.value = cardNumberCleaned;\r\n    const cardDetails = this._validation.getCardDetails(cardNumberCleaned);\r\n    const format = cardDetails ? cardDetails.format : '(\\\\d{1,4})(\\\\d{1,4})?(\\\\d{1,4})?(\\\\d+)?';\r\n    const previousValue = cardNumberCleaned;\r\n    let value = previousValue;\r\n    let selectEnd = element.selectionEnd;\r\n    let selectStart = element.selectionStart;\r\n    if (format && value.length > 0) {\r\n      value = Utils.stripChars(value, undefined);\r\n      let matches = value.match(new RegExp(format, '')).slice(1);\r\n      if (Utils.inArray(matches, undefined)) {\r\n        matches = matches.slice(0, matches.indexOf(undefined));\r\n      }\r\n      const matched = matches.length;\r\n      if (format && matched > 1) {\r\n        const preMatched = previousValue.split(' ').length;\r\n        selectStart += matched - preMatched;\r\n        selectEnd += matched - preMatched;\r\n        value = matches.join(' ');\r\n      }\r\n    }\r\n\r\n    if (value !== previousValue) {\r\n      Utils.setElementAttributes({ value }, element);\r\n      element.setSelectionRange(selectStart, selectEnd);\r\n    }\r\n    this._cardNumberFormatted = value ? value : '';\r\n    if (value) {\r\n      this._validation.cardNumberValue = value.replace(/\\s/g, '');\r\n    }\r\n    return { formatted: this._cardNumberFormatted, nonformatted: this._validation.cardNumberValue };\r\n  }\r\n\r\n  public date(value: string, id?: string) {\r\n    this._validation.expirationDate(value);\r\n    const element: HTMLInputElement = document.getElementById(id) as HTMLInputElement;\r\n    let result: string = '';\r\n\r\n    this._blocks.forEach(length => {\r\n      if (this._validation.expirationDateValue && this._validation.expirationDateValue.length > 0) {\r\n        const sub = this._validation.expirationDateValue.slice(0, length);\r\n        const rest = this._validation.expirationDateValue.slice(length);\r\n        result += sub;\r\n        this._validation.expirationDateValue = rest;\r\n      }\r\n    });\r\n    let fixedDate = this._dateFixed(result);\r\n    element.value = fixedDate;\r\n    fixedDate = fixedDate ? fixedDate : '';\r\n    return fixedDate;\r\n  }\r\n\r\n  public code(value: string, length: number, id?: string) {\r\n    this._validation.securityCode(value, length);\r\n    const element: HTMLInputElement = document.getElementById(id) as HTMLInputElement;\r\n    element.value = this._validation.securityCodeValue ? this._validation.securityCodeValue : '';\r\n    return this._validation.securityCodeValue;\r\n  }\r\n\r\n  private _dateISO(previousDate: string[], currentDate: string[]) {\r\n    this._dateBlocks.currentDateMonth = currentDate[0];\r\n    this._dateBlocks.currentDateYear = currentDate[1];\r\n    this._dateBlocks.previousDateYear = previousDate[1];\r\n\r\n    if (!this._dateBlocks.currentDateMonth.length) {\r\n      return '';\r\n    } else if (this._dateBlocks.currentDateMonth.length && this._dateBlocks.currentDateYear.length === 0) {\r\n      return this._dateBlocks.currentDateMonth;\r\n    } else if (\r\n      this._dateBlocks.currentDateMonth.length === 2 &&\r\n      this._dateBlocks.currentDateYear.length === 1 &&\r\n      this._dateBlocks.previousDateYear.length === 0\r\n    ) {\r\n      return this._dateBlocks.currentDateMonth + '/' + this._dateBlocks.currentDateYear;\r\n    } else if (\r\n      (this._dateBlocks.currentDateMonth.length === 2 &&\r\n        this._dateBlocks.currentDateYear.length === 1 &&\r\n        (this._dateBlocks.previousDateYear.length === 1 || this._dateBlocks.previousDateYear.length === 2)) ||\r\n      (this._dateBlocks.currentDateMonth.length === 2 && this._dateBlocks.currentDateYear.length === 2)\r\n    ) {\r\n      return this._dateBlocks.currentDateMonth + '/' + this._dateBlocks.currentDateYear;\r\n    }\r\n  }\r\n\r\n  private _dateFixed(value: string) {\r\n    let date: string[];\r\n    const month: string = value.slice(0, 2);\r\n    const year: string = value.slice(2, 4);\r\n    date = [month, year];\r\n    return this._dateISO(this._date, date);\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\frame\\Frame.ts":{"language":"typescript","mutants":[{"id":"1772","location":{"end":{"column":4,"line":10},"start":{"column":39,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1773","location":{"end":{"column":32,"line":9},"start":{"column":12,"line":9}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"1775","location":{"end":{"column":31,"line":9},"start":{"column":23,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1774","location":{"end":{"column":21,"line":9},"start":{"column":13,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1776","location":{"end":{"column":4,"line":14},"start":{"column":45,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1777","location":{"end":{"column":4,"line":30},"start":{"column":57,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1778","location":{"end":{"column":43,"line":19},"start":{"column":29,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1779","location":{"end":{"column":41,"line":19},"start":{"column":39,"line":19}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"1780","location":{"end":{"column":6,"line":27},"start":{"column":70,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1781","location":{"end":{"column":40,"line":22},"start":{"column":11,"line":22}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1782","location":{"end":{"column":40,"line":22},"start":{"column":11,"line":22}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1783","location":{"end":{"column":8,"line":24},"start":{"column":42,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1784","location":{"end":{"column":8,"line":26},"start":{"column":14,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1785","location":{"end":{"column":46,"line":25},"start":{"column":28,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { IAllowedStyles } from '../../models/IAllowedStyles';\r\nimport { IParams } from '../../models/IParams';\r\nimport { frameAllowedStyles } from './frame-const';\r\n\r\n@Service()\r\nexport class Frame {\r\n  public getAllowedParams(): string[] {\r\n    return ['locale', 'origin'];\r\n  }\r\n\r\n  public getAllowedStyles(): IAllowedStyles {\r\n    return frameAllowedStyles;\r\n  }\r\n\r\n  public parseUrl(additionalParams?: string[]): IParams {\r\n    const parsedUrl = new URL(window.location.href);\r\n    const allowedParams = this.getAllowedParams().concat(additionalParams);\r\n    const params: IParams = { styles: [] };\r\n\r\n    parsedUrl.searchParams.forEach((value: string, param: string) => {\r\n      if (allowedParams.includes(param)) {\r\n        params[param] = value;\r\n      } else {\r\n        params.styles.push({ [param]: value });\r\n      }\r\n    });\r\n\r\n    return params;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\frame\\frame-const.ts":{"language":"typescript","mutants":[{"id":"1786","location":{"end":{"column":2,"line":10},"start":{"column":51,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1787","location":{"end":{"column":78,"line":4},"start":{"column":28,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1788","location":{"end":{"column":58,"line":4},"start":{"column":40,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1789","location":{"end":{"column":76,"line":4},"start":{"column":70,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1790","location":{"end":{"column":56,"line":5},"start":{"column":17,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1791","location":{"end":{"column":36,"line":5},"start":{"column":29,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1792","location":{"end":{"column":54,"line":5},"start":{"column":48,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1793","location":{"end":{"column":64,"line":6},"start":{"column":21,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1795","location":{"end":{"column":62,"line":6},"start":{"column":56,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1796","location":{"end":{"column":68,"line":7},"start":{"column":23,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1794","location":{"end":{"column":44,"line":6},"start":{"column":33,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1797","location":{"end":{"column":48,"line":7},"start":{"column":35,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1798","location":{"end":{"column":66,"line":7},"start":{"column":60,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1799","location":{"end":{"column":64,"line":8},"start":{"column":23,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1800","location":{"end":{"column":44,"line":8},"start":{"column":35,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1803","location":{"end":{"column":44,"line":9},"start":{"column":36,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1802","location":{"end":{"column":64,"line":9},"start":{"column":24,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1801","location":{"end":{"column":62,"line":8},"start":{"column":56,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1804","location":{"end":{"column":62,"line":9},"start":{"column":56,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { IAllowedStyles } from '../../models/IAllowedStyles';\r\n\r\nexport const frameAllowedStyles: IAllowedStyles = {\r\n  'background-color-body': { property: 'background-color', selector: 'body' },\r\n  'color-body': { property: 'color', selector: 'body' },\r\n  'font-size-body': { property: 'font-size', selector: 'body' },\r\n  'line-height-body': { property: 'line-height', selector: 'body' },\r\n  'space-inset-body': { property: 'padding', selector: 'body' },\r\n  'space-outset-body': { property: 'margin', selector: 'body' }\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\input\\AllowedStylesService.ts":{"language":"typescript","mutants":[{"id":"1806","location":{"end":{"column":6,"line":62},"start":{"column":12,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1805","location":{"end":{"column":4,"line":63},"start":{"column":5,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1807","location":{"end":{"column":82,"line":15},"start":{"column":33,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1808","location":{"end":{"column":63,"line":15},"start":{"column":45,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1809","location":{"end":{"column":93,"line":16},"start":{"column":39,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1810","location":{"end":{"column":69,"line":16},"start":{"column":51,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1811","location":{"end":{"column":86,"line":17},"start":{"column":35,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1812","location":{"end":{"column":65,"line":17},"start":{"column":47,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1813","location":{"end":{"column":82,"line":18},"start":{"column":33,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1814","location":{"end":{"column":63,"line":18},"start":{"column":45,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1816","location":{"end":{"column":55,"line":19},"start":{"column":41,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1815","location":{"end":{"column":74,"line":19},"start":{"column":29,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1817","location":{"end":{"column":85,"line":20},"start":{"column":35,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1819","location":{"end":{"column":76,"line":21},"start":{"column":30,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1818","location":{"end":{"column":61,"line":20},"start":{"column":47,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1820","location":{"end":{"column":57,"line":21},"start":{"column":42,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1822","location":{"end":{"column":63,"line":22},"start":{"column":48,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1821","location":{"end":{"column":87,"line":22},"start":{"column":36,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1824","location":{"end":{"column":54,"line":23},"start":{"column":40,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1825","location":{"end":{"column":84,"line":24},"start":{"column":34,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1823","location":{"end":{"column":73,"line":23},"start":{"column":28,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1826","location":{"end":{"column":60,"line":24},"start":{"column":46,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1827","location":{"end":{"column":70,"line":25},"start":{"column":27,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1828","location":{"end":{"column":51,"line":25},"start":{"column":39,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1829","location":{"end":{"column":62,"line":26},"start":{"column":22,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1830","location":{"end":{"column":41,"line":26},"start":{"column":34,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1831","location":{"end":{"column":60,"line":27},"start":{"column":22,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1832","location":{"end":{"column":41,"line":27},"start":{"column":34,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1833","location":{"end":{"column":71,"line":28},"start":{"column":28,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1835","location":{"end":{"column":83,"line":29},"start":{"column":34,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1834","location":{"end":{"column":47,"line":28},"start":{"column":40,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1836","location":{"end":{"column":53,"line":29},"start":{"column":46,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1837","location":{"end":{"column":60,"line":30},"start":{"column":22,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1838","location":{"end":{"column":41,"line":30},"start":{"column":34,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1839","location":{"end":{"column":64,"line":31},"start":{"column":24,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1840","location":{"end":{"column":45,"line":31},"start":{"column":36,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1841","location":{"end":{"column":68,"line":32},"start":{"column":26,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1842","location":{"end":{"column":49,"line":32},"start":{"column":38,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1843","location":{"end":{"column":79,"line":33},"start":{"column":32,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1844","location":{"end":{"column":55,"line":33},"start":{"column":44,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1845","location":{"end":{"column":68,"line":34},"start":{"column":26,"line":34}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1846","location":{"end":{"column":49,"line":34},"start":{"column":38,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1848","location":{"end":{"column":51,"line":35},"start":{"column":40,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1847","location":{"end":{"column":72,"line":35},"start":{"column":28,"line":35}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1849","location":{"end":{"column":72,"line":36},"start":{"column":28,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1851","location":{"end":{"column":83,"line":37},"start":{"column":34,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1850","location":{"end":{"column":53,"line":36},"start":{"column":40,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1852","location":{"end":{"column":59,"line":37},"start":{"column":46,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1853","location":{"end":{"column":72,"line":38},"start":{"column":28,"line":38}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1854","location":{"end":{"column":53,"line":38},"start":{"column":40,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1855","location":{"end":{"column":76,"line":39},"start":{"column":30,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1856","location":{"end":{"column":55,"line":39},"start":{"column":42,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1858","location":{"end":{"column":53,"line":40},"start":{"column":40,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1857","location":{"end":{"column":72,"line":40},"start":{"column":28,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1859","location":{"end":{"column":83,"line":41},"start":{"column":34,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1860","location":{"end":{"column":59,"line":41},"start":{"column":46,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1861","location":{"end":{"column":72,"line":42},"start":{"column":28,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1862","location":{"end":{"column":53,"line":42},"start":{"column":40,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1863","location":{"end":{"column":76,"line":43},"start":{"column":30,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1864","location":{"end":{"column":55,"line":43},"start":{"column":42,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1866","location":{"end":{"column":49,"line":44},"start":{"column":38,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1865","location":{"end":{"column":68,"line":44},"start":{"column":26,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1867","location":{"end":{"column":64,"line":45},"start":{"column":24,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1868","location":{"end":{"column":45,"line":45},"start":{"column":36,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1869","location":{"end":{"column":68,"line":46},"start":{"column":28,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1870","location":{"end":{"column":49,"line":46},"start":{"column":40,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1871","location":{"end":{"column":79,"line":47},"start":{"column":34,"line":47}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1872","location":{"end":{"column":55,"line":47},"start":{"column":46,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1874","location":{"end":{"column":51,"line":48},"start":{"column":42,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1873","location":{"end":{"column":72,"line":48},"start":{"column":30,"line":48}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1875","location":{"end":{"column":68,"line":49},"start":{"column":29,"line":49}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1876","location":{"end":{"column":49,"line":49},"start":{"column":41,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1877","location":{"end":{"column":79,"line":50},"start":{"column":35,"line":50}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1878","location":{"end":{"column":55,"line":50},"start":{"column":47,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1879","location":{"end":{"column":72,"line":51},"start":{"column":31,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1880","location":{"end":{"column":51,"line":51},"start":{"column":43,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1881","location":{"end":{"column":63,"line":52},"start":{"column":28,"line":52}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1882","location":{"end":{"column":45,"line":52},"start":{"column":40,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1883","location":{"end":{"column":69,"line":53},"start":{"column":31,"line":53}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1884","location":{"end":{"column":51,"line":53},"start":{"column":43,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1885","location":{"end":{"column":67,"line":54},"start":{"column":30,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1886","location":{"end":{"column":49,"line":54},"start":{"column":42,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1887","location":{"end":{"column":65,"line":55},"start":{"column":29,"line":55}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1888","location":{"end":{"column":47,"line":55},"start":{"column":41,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1889","location":{"end":{"column":65,"line":56},"start":{"column":29,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1890","location":{"end":{"column":46,"line":56},"start":{"column":41,"line":56}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1891","location":{"end":{"column":71,"line":57},"start":{"column":32,"line":57}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1892","location":{"end":{"column":52,"line":57},"start":{"column":44,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1893","location":{"end":{"column":69,"line":58},"start":{"column":31,"line":58}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1894","location":{"end":{"column":50,"line":58},"start":{"column":43,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1895","location":{"end":{"column":67,"line":59},"start":{"column":30,"line":59}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1897","location":{"end":{"column":60,"line":60},"start":{"column":22,"line":60}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1896","location":{"end":{"column":48,"line":59},"start":{"column":42,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1898","location":{"end":{"column":41,"line":60},"start":{"column":34,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1899","location":{"end":{"column":72,"line":61},"start":{"column":30,"line":61}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1900","location":{"end":{"column":51,"line":61},"start":{"column":42,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { Service } from 'typedi';\r\n\r\n@Service()\r\nexport class AllowedStylesService {\r\n  getStyles(\r\n    input: string,\r\n    inputError: string,\r\n    inputPlaceholder: string,\r\n    message: string,\r\n    label: string,\r\n    icon?: string,\r\n    wrapper?: string\r\n  ) {\r\n    return {\r\n      'background-color-input': { property: 'background-color', selector: input },\r\n      'background-color-input-error': { property: 'background-color', selector: inputError },\r\n      'background-color-message': { property: 'background-color', selector: message },\r\n      'background-color-label': { property: 'background-color', selector: label },\r\n      'border-color-input': { property: 'border-color', selector: input },\r\n      'border-color-input-error': { property: 'border-color', selector: inputError },\r\n      'border-radius-input': { property: 'border-radius', selector: input },\r\n      'border-radius-input-error': { property: 'border-radius', selector: inputError },\r\n      'border-size-input': { property: 'border-width', selector: input },\r\n      'border-size-input-error': { property: 'border-width', selector: inputError },\r\n      'box-shadow-input': { property: 'box-shadow', selector: input },\r\n      'color-error': { property: 'color', selector: message },\r\n      'color-input': { property: 'color', selector: input },\r\n      'color-input-error': { property: 'color', selector: inputError },\r\n      'color-input-placeholder': { property: 'color', selector: inputPlaceholder },\r\n      'color-label': { property: 'color', selector: label },\r\n      'display-label': { property: 'display', selector: label },\r\n      'font-size-input': { property: 'font-size', selector: input },\r\n      'font-size-input-error': { property: 'font-size', selector: inputError },\r\n      'font-size-label': { property: 'font-size', selector: label },\r\n      'font-size-message': { property: 'font-size', selector: message },\r\n      'font-family-input': { property: 'font-family', selector: input },\r\n      'font-family-input-error': { property: 'font-family', selector: inputError },\r\n      'font-family-label': { property: 'font-family', selector: label },\r\n      'font-family-message': { property: 'font-family', selector: message },\r\n      'line-height-input': { property: 'line-height', selector: input },\r\n      'line-height-input-error': { property: 'line-height', selector: inputError },\r\n      'line-height-label': { property: 'line-height', selector: label },\r\n      'line-height-message': { property: 'line-height', selector: message },\r\n      'max-width-label': { property: 'max-width', selector: label },\r\n      'outline-input': { property: 'outline', selector: input },\r\n      'space-inset-input': { property: 'padding', selector: input },\r\n      'space-inset-input-error': { property: 'padding', selector: inputError },\r\n      'space-inset-message': { property: 'padding', selector: message },\r\n      'space-outset-input': { property: 'margin', selector: input },\r\n      'space-outset-input-error': { property: 'margin', selector: inputError },\r\n      'space-outset-message': { property: 'margin', selector: message },\r\n      'position-top-icon': { property: 'top', selector: icon },\r\n      'position-bottom-icon': { property: 'bottom', selector: icon },\r\n      'position-right-icon': { property: 'right', selector: icon },\r\n      'position-left-icon': { property: 'left', selector: icon },\r\n      'position-top-label': { property: 'top', selector: label },\r\n      'position-bottom-label': { property: 'bottom', selector: label },\r\n      'position-right-label': { property: 'right', selector: label },\r\n      'position-left-label': { property: 'left', selector: label },\r\n      'width-label': { property: 'width', selector: label },\r\n      'space-inset-wrapper': { property: 'padding', selector: wrapper }\r\n    };\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\input\\Input.ts":{"language":"typescript","mutants":[{"id":"1901","location":{"end":{"column":65,"line":15},"start":{"column":52,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1903","location":{"end":{"column":4,"line":53},"start":{"column":23,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1902","location":{"end":{"column":4,"line":45},"start":{"column":111,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1904","location":{"end":{"column":4,"line":57},"start":{"column":34,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1906","location":{"end":{"column":6,"line":72},"start":{"column":15,"line":61}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1905","location":{"end":{"column":4,"line":74},"start":{"column":32,"line":59}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1907","location":{"end":{"column":34,"line":64},"start":{"column":9,"line":64}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1908","location":{"end":{"column":46,"line":65},"start":{"column":9,"line":65}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1910","location":{"end":{"column":36,"line":67},"start":{"column":9,"line":67}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1909","location":{"end":{"column":47,"line":66},"start":{"column":9,"line":66}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1911","location":{"end":{"column":44,"line":68},"start":{"column":9,"line":68}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1912","location":{"end":{"column":45,"line":69},"start":{"column":9,"line":69}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1914","location":{"end":{"column":4,"line":78},"start":{"column":32,"line":76}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1913","location":{"end":{"column":36,"line":70},"start":{"column":9,"line":70}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1915","location":{"end":{"column":4,"line":85},"start":{"column":41,"line":80}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1916","location":{"end":{"column":6,"line":84},"start":{"column":12,"line":81}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1917","location":{"end":{"column":4,"line":90},"start":{"column":22,"line":87}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1918","location":{"end":{"column":4,"line":94},"start":{"column":35,"line":92}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1919","location":{"end":{"column":4,"line":98},"start":{"column":35,"line":96}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1920","location":{"end":{"column":4,"line":104},"start":{"column":35,"line":100}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1922","location":{"end":{"column":4,"line":115},"start":{"column":46,"line":106}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1921","location":{"end":{"column":43,"line":102},"start":{"column":41,"line":102}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1923","location":{"end":{"column":34,"line":107},"start":{"column":9,"line":107}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1925","location":{"end":{"column":6,"line":114},"start":{"column":36,"line":107}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1924","location":{"end":{"column":34,"line":107},"start":{"column":9,"line":107}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1928","location":{"end":{"column":54,"line":109},"start":{"column":11,"line":109}},"mutatorName":"EqualityOperator","replacement":"this._inputElement.id !== CARD_NUMBER_INPUT","status":"Survived"},{"id":"1926","location":{"end":{"column":54,"line":109},"start":{"column":11,"line":109}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1927","location":{"end":{"column":54,"line":109},"start":{"column":11,"line":109}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1929","location":{"end":{"column":8,"line":111},"start":{"column":56,"line":109}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1930","location":{"end":{"column":4,"line":119},"start":{"column":45,"line":117}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1931","location":{"end":{"column":4,"line":140},"start":{"column":44,"line":121}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1932","location":{"end":{"column":54,"line":124},"start":{"column":9,"line":124}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1933","location":{"end":{"column":54,"line":124},"start":{"column":9,"line":124}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1934","location":{"end":{"column":54,"line":124},"start":{"column":9,"line":124}},"mutatorName":"EqualityOperator","replacement":"this._inputElement !== document.activeElement","status":"Survived"},{"id":"1935","location":{"end":{"column":6,"line":126},"start":{"column":56,"line":124}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1936","location":{"end":{"column":45,"line":127},"start":{"column":9,"line":127}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1938","location":{"end":{"column":45,"line":127},"start":{"column":9,"line":127}},"mutatorName":"EqualityOperator","replacement":"typeof clipboardData !== 'undefined'","status":"Survived"},{"id":"1937","location":{"end":{"column":45,"line":127},"start":{"column":9,"line":127}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1939","location":{"end":{"column":45,"line":127},"start":{"column":34,"line":127}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1940","location":{"end":{"column":6,"line":130},"start":{"column":47,"line":127}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1941","location":{"end":{"column":58,"line":129},"start":{"column":52,"line":129}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1944","location":{"end":{"column":43,"line":137},"start":{"column":41,"line":137}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1943","location":{"end":{"column":63,"line":132},"start":{"column":51,"line":132}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1942","location":{"end":{"column":6,"line":133},"start":{"column":12,"line":130}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1946","location":{"end":{"column":6,"line":147},"start":{"column":41,"line":144}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1945","location":{"end":{"column":4,"line":148},"start":{"column":47,"line":142}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1947","location":{"end":{"column":69,"line":150},"start":{"column":65,"line":150}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"1948","location":{"end":{"column":4,"line":156},"start":{"column":71,"line":150}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1949","location":{"end":{"column":6,"line":155},"start":{"column":45,"line":151}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1951","location":{"end":{"column":19,"line":152},"start":{"column":11,"line":152}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1950","location":{"end":{"column":19,"line":152},"start":{"column":11,"line":152}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1952","location":{"end":{"column":8,"line":154},"start":{"column":21,"line":152}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1953","location":{"end":{"column":4,"line":160},"start":{"column":37,"line":158}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1954","location":{"end":{"column":4,"line":168},"start":{"column":65,"line":162}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1956","location":{"end":{"column":4,"line":174},"start":{"column":29,"line":170}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1955","location":{"end":{"column":6,"line":167},"start":{"column":12,"line":164}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1957","location":{"end":{"column":36,"line":171},"start":{"column":29,"line":171}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1958","location":{"end":{"column":6,"line":173},"start":{"column":47,"line":171}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1959","location":{"end":{"column":4,"line":178},"start":{"column":19,"line":176}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1960","location":{"end":{"column":4,"line":182},"start":{"column":20,"line":180}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1961","location":{"end":{"column":4,"line":186},"start":{"column":20,"line":184}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1962","location":{"end":{"column":4,"line":219},"start":{"column":32,"line":188}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1963","location":{"end":{"column":48,"line":189},"start":{"column":41,"line":189}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1964","location":{"end":{"column":6,"line":191},"start":{"column":77,"line":189}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1965","location":{"end":{"column":51,"line":193},"start":{"column":41,"line":193}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1966","location":{"end":{"column":6,"line":195},"start":{"column":79,"line":193}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1967","location":{"end":{"column":50,"line":197},"start":{"column":41,"line":197}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1968","location":{"end":{"column":6,"line":199},"start":{"column":78,"line":197}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1969","location":{"end":{"column":14,"line":202},"start":{"column":7,"line":202}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1970","location":{"end":{"column":8,"line":205},"start":{"column":39,"line":203}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1971","location":{"end":{"column":48,"line":208},"start":{"column":41,"line":208}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1972","location":{"end":{"column":6,"line":210},"start":{"column":68,"line":208}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1973","location":{"end":{"column":47,"line":212},"start":{"column":41,"line":212}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1974","location":{"end":{"column":6,"line":214},"start":{"column":55,"line":212}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1975","location":{"end":{"column":48,"line":216},"start":{"column":41,"line":216}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"1976","location":{"end":{"column":6,"line":218},"start":{"column":68,"line":216}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1977","location":{"end":{"column":4,"line":223},"start":{"column":27,"line":221}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1979","location":{"end":{"column":52,"line":227},"start":{"column":9,"line":227}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1978","location":{"end":{"column":4,"line":231},"start":{"column":28,"line":225}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1981","location":{"end":{"column":52,"line":227},"start":{"column":9,"line":227}},"mutatorName":"EqualityOperator","replacement":"this._inputElement.id !== CARD_NUMBER_INPUT","status":"Survived"},{"id":"1980","location":{"end":{"column":52,"line":227},"start":{"column":9,"line":227}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1982","location":{"end":{"column":6,"line":229},"start":{"column":54,"line":227}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { IFormFieldState } from '../../models/IFormFieldState';\r\nimport { IMessageBusEvent } from '../../models/IMessageBusEvent';\r\nimport { Translator } from '../translator/Translator';\r\nimport { Utils } from '../utils/Utils';\r\nimport { Validation } from '../validation/Validation';\r\nimport { onInputWraper } from '../on-input-wrapper/onInputWrapper';\r\nimport { Frame } from '../frame/Frame';\r\nimport { MessageBus } from '../message-bus/MessageBus';\r\nimport { Container } from 'typedi';\r\nimport { NOT_IMPLEMENTED_ERROR } from '../../models/constants/Translations';\r\nimport { CARD_NUMBER_INPUT, CARD_NUMBER_WRAPPER } from '../../models/constants/Selectors';\r\nimport { AllowedStylesService } from './AllowedStylesService';\r\n\r\nexport class Input {\r\n  protected static PLACEHOLDER_ATTRIBUTE: string = 'placeholder';\r\n  public validation: Validation;\r\n  protected _inputSelector: string;\r\n  protected _labelSelector: string;\r\n  protected _messageSelector: string;\r\n  protected _wrapperSelector: string;\r\n  protected _inputElement: HTMLInputElement;\r\n  protected _labelElement: HTMLLabelElement;\r\n  protected _messageElement: HTMLDivElement;\r\n  protected _cardNumberInput: HTMLInputElement;\r\n  protected placeholder: string;\r\n  private _translator: Translator;\r\n  private _frame: Frame;\r\n  private _messageBus: MessageBus;\r\n  private _allowedStyles: AllowedStylesService;\r\n\r\n  constructor(inputSelector: string, messageSelector: string, labelSelector: string, wrapperSelector: string) {\r\n    this._messageBus = Container.get(MessageBus);\r\n    this._allowedStyles = Container.get(AllowedStylesService);\r\n    this._frame = Container.get(Frame);\r\n    this._cardNumberInput = document.getElementById(CARD_NUMBER_INPUT) as HTMLInputElement;\r\n    this._inputElement = document.getElementById(inputSelector) as HTMLInputElement;\r\n    this._labelElement = document.getElementById(labelSelector) as HTMLLabelElement;\r\n    this._messageElement = document.getElementById(messageSelector) as HTMLInputElement;\r\n    this._inputSelector = inputSelector;\r\n    this._labelSelector = labelSelector;\r\n    this._messageSelector = messageSelector;\r\n    this._wrapperSelector = wrapperSelector;\r\n    this._setInputListeners();\r\n    this.init();\r\n  }\r\n\r\n  public init(): void {\r\n    this._translator = new Translator(this._frame.parseUrl().locale);\r\n    this.validation = new Validation();\r\n\r\n    this._setLabelText();\r\n    this._addTabListener();\r\n  }\r\n\r\n  protected format(data: string) {\r\n    this._inputElement.value = data;\r\n  }\r\n\r\n  protected getAllowedStyles() {\r\n    let allowed = this._frame.getAllowedStyles();\r\n    allowed = {\r\n      ...allowed,\r\n      ...this._allowedStyles.getStyles(\r\n        `#${this._inputSelector}`,\r\n        `#${this._inputSelector}.error-field`,\r\n        `#${this._inputSelector}::placeholder`,\r\n        `#${this._messageSelector}`,\r\n        `label[for=${this._inputSelector}]`,\r\n        `.${CARD_NUMBER_WRAPPER} #card-icon`,\r\n        `.${this._wrapperSelector}`\r\n      )\r\n    };\r\n    return allowed;\r\n  }\r\n\r\n  protected getLabel(): string {\r\n    throw new Error(NOT_IMPLEMENTED_ERROR);\r\n  }\r\n\r\n  protected getState(): IFormFieldState {\r\n    return {\r\n      validity: this._inputElement.validity.valid,\r\n      value: this._inputElement.value\r\n    };\r\n  }\r\n\r\n  protected onBlur() {\r\n    this._blur();\r\n    this.validation.validate(this._inputElement, this._messageElement);\r\n  }\r\n\r\n  protected onClick(event: Event) {\r\n    this._click();\r\n  }\r\n\r\n  protected onFocus(event: Event) {\r\n    this._focus();\r\n  }\r\n\r\n  protected onInput(event: Event) {\r\n    this.validation.keepCursorsPosition(this._inputElement);\r\n    Validation.setCustomValidationError('', this._inputElement);\r\n    this.format(this._inputElement.value);\r\n  }\r\n\r\n  protected onKeyPress(event: KeyboardEvent) {\r\n    if (Validation.isEnter(event)) {\r\n      event.preventDefault();\r\n      if (this._inputElement.id === CARD_NUMBER_INPUT) {\r\n        this.validation.luhnCheck(this._cardNumberInput, this._inputElement, this._messageElement);\r\n      }\r\n      this._validateInput();\r\n      this.validation.callSubmitEvent();\r\n    }\r\n  }\r\n\r\n  protected onKeydown(event: KeyboardEvent) {\r\n    this.validation.setOnKeyDownProperties(this._inputElement, event);\r\n  }\r\n\r\n  protected onPaste(event: ClipboardEvent) {\r\n    let { clipboardData } = event;\r\n    event.preventDefault();\r\n    if (this._inputElement === document.activeElement) {\r\n      this.validation.keepCursorsPosition(this._inputElement);\r\n    }\r\n    if (typeof clipboardData === 'undefined') {\r\n      // @ts-ignore\r\n      clipboardData = window.clipboardData.getData('Text');\r\n    } else {\r\n      // @ts-ignore\r\n      clipboardData = event.clipboardData.getData('text/plain');\r\n    }\r\n\r\n    // @ts-ignore\r\n    this._inputElement.value = Utils.stripChars(clipboardData, undefined);\r\n    Validation.setCustomValidationError('', this._inputElement);\r\n    this.format(this._inputElement.value);\r\n    this.validation.validate(this._inputElement, this._messageElement);\r\n  }\r\n\r\n  protected setAttributes(attributes: object) {\r\n    // tslint:disable-next-line:forin\r\n    for (const attribute in attributes) {\r\n      // @ts-ignore\r\n      this._inputElement.setAttribute(attribute, attributes[attribute]);\r\n    }\r\n  }\r\n\r\n  protected setEventListener(event: string, validate: boolean = true) {\r\n    this._messageBus.subscribe(event, () => {\r\n      if (validate) {\r\n        this._validateInput();\r\n      }\r\n    });\r\n  }\r\n\r\n  protected setValue(value: string) {\r\n    this._inputElement.value = value;\r\n  }\r\n\r\n  protected setMessageBusEvent(event: string): IMessageBusEvent {\r\n    const formFieldState: IFormFieldState = this.getState();\r\n    return {\r\n      data: formFieldState,\r\n      type: event\r\n    };\r\n  }\r\n\r\n  private _addTabListener() {\r\n    window.addEventListener('focus', event => {\r\n      this.onFocus(event);\r\n    });\r\n  }\r\n\r\n  private _blur() {\r\n    this._inputElement.blur();\r\n  }\r\n\r\n  private _click() {\r\n    this._inputElement.click();\r\n  }\r\n\r\n  private _focus() {\r\n    this._inputElement.focus();\r\n  }\r\n\r\n  private _setInputListeners() {\r\n    this._inputElement.addEventListener('paste', (event: ClipboardEvent) => {\r\n      this.onPaste(event);\r\n    });\r\n\r\n    this._inputElement.addEventListener('keypress', (event: KeyboardEvent) => {\r\n      this.onKeyPress(event);\r\n    });\r\n\r\n    this._inputElement.addEventListener('keydown', (event: KeyboardEvent) => {\r\n      this.onKeydown(event);\r\n    });\r\n\r\n    this._inputElement.addEventListener(\r\n      'input',\r\n      onInputWraper((event: Event) => {\r\n        this.onInput(event);\r\n      })\r\n    );\r\n\r\n    this._inputElement.addEventListener('focus', (event: Event) => {\r\n      this.onFocus(event);\r\n    });\r\n\r\n    this._inputElement.addEventListener('blur', () => {\r\n      this.onBlur();\r\n    });\r\n\r\n    this._inputElement.addEventListener('click', (event: Event) => {\r\n      this.onClick(event);\r\n    });\r\n  }\r\n\r\n  private _setLabelText() {\r\n    this._labelElement.textContent = this._translator.translate(this.getLabel());\r\n  }\r\n\r\n  private _validateInput() {\r\n    this.format(this._inputElement.value);\r\n    if (this._inputElement.id === CARD_NUMBER_INPUT) {\r\n      this.validation.luhnCheck(this._cardNumberInput, this._inputElement, this._messageElement);\r\n    }\r\n    this.validation.validate(this._inputElement, this._messageElement);\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\message-bus\\MessageBus.ts":{"language":"typescript","mutants":[{"id":"1983","location":{"end":{"column":4,"line":37},"start":{"column":5,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1984","location":{"end":{"column":41,"line":34},"start":{"column":9,"line":34}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1986","location":{"end":{"column":6,"line":36},"start":{"column":43,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1985","location":{"end":{"column":41,"line":34},"start":{"column":9,"line":34}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1987","location":{"end":{"column":4,"line":51},"start":{"column":82,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1988","location":{"end":{"column":6,"line":46},"start":{"column":81,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1989","location":{"end":{"column":8,"line":43},"start":{"column":11,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1990","location":{"end":{"column":8,"line":45},"start":{"column":19,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1991","location":{"end":{"column":63,"line":44},"start":{"column":22,"line":44}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"1992","location":{"end":{"column":24,"line":48},"start":{"column":9,"line":48}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1994","location":{"end":{"column":6,"line":50},"start":{"column":26,"line":48}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1993","location":{"end":{"column":24,"line":48},"start":{"column":9,"line":48}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1995","location":{"end":{"column":4,"line":77},"start":{"column":55,"line":64}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1996","location":{"end":{"column":69,"line":65},"start":{"column":9,"line":65}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"1997","location":{"end":{"column":69,"line":65},"start":{"column":9,"line":65}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1998","location":{"end":{"column":69,"line":65},"start":{"column":9,"line":65}},"mutatorName":"LogicalOperator","replacement":"typeof args[0] === 'string' || typeof args[1] === 'function'","status":"Survived"},{"id":"2000","location":{"end":{"column":36,"line":65},"start":{"column":9,"line":65}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"1999","location":{"end":{"column":36,"line":65},"start":{"column":9,"line":65}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2001","location":{"end":{"column":36,"line":65},"start":{"column":9,"line":65}},"mutatorName":"EqualityOperator","replacement":"typeof args[0] !== 'string'","status":"Survived"},{"id":"2003","location":{"end":{"column":69,"line":65},"start":{"column":40,"line":65}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2002","location":{"end":{"column":36,"line":65},"start":{"column":28,"line":65}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2004","location":{"end":{"column":69,"line":65},"start":{"column":40,"line":65}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2005","location":{"end":{"column":69,"line":65},"start":{"column":40,"line":65}},"mutatorName":"EqualityOperator","replacement":"typeof args[1] !== 'function'","status":"Survived"},{"id":"2006","location":{"end":{"column":69,"line":65},"start":{"column":59,"line":65}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2008","location":{"end":{"column":57,"line":71},"start":{"column":15,"line":71}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2007","location":{"end":{"column":6,"line":74},"start":{"column":71,"line":65}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2009","location":{"end":{"column":4,"line":90},"start":{"column":64,"line":79}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2010","location":{"end":{"column":70,"line":80},"start":{"column":9,"line":80}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2011","location":{"end":{"column":70,"line":80},"start":{"column":9,"line":80}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2013","location":{"end":{"column":6,"line":82},"start":{"column":72,"line":80}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2012","location":{"end":{"column":70,"line":80},"start":{"column":9,"line":80}},"mutatorName":"BooleanLiteral","replacement":"Object.values(MessageBus.EVENTS_PUBLIC).includes(event.type)","status":"Survived"},{"id":"2014","location":{"end":{"column":86,"line":81},"start":{"column":23,"line":81}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"2015","location":{"end":{"column":40,"line":84},"start":{"column":9,"line":84}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2016","location":{"end":{"column":40,"line":84},"start":{"column":9,"line":84}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2018","location":{"end":{"column":4,"line":111},"start":{"column":60,"line":92}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2017","location":{"end":{"column":6,"line":87},"start":{"column":42,"line":84}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2019","location":{"end":{"column":41,"line":93},"start":{"column":9,"line":93}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2020","location":{"end":{"column":41,"line":93},"start":{"column":9,"line":93}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2021","location":{"end":{"column":6,"line":95},"start":{"column":43,"line":93}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2023","location":{"end":{"column":40,"line":97},"start":{"column":9,"line":97}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2022","location":{"end":{"column":40,"line":97},"start":{"column":9,"line":97}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2025","location":{"end":{"column":8,"line":109},"start":{"column":30,"line":102}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2024","location":{"end":{"column":6,"line":99},"start":{"column":42,"line":97}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2026","location":{"end":{"column":10,"line":108},"start":{"column":63,"line":106}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2027","location":{"end":{"column":76,"line":107},"start":{"column":45,"line":107}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import { IMessageBusEvent } from '../../models/IMessageBusEvent';\r\nimport { Service } from 'typedi';\r\nimport { merge, Observable, Subject, Subscribable } from 'rxjs';\r\nimport { InterFrameCommunicator } from '../../../../shared/services/message-bus/InterFrameCommunicator';\r\nimport { FramesHub } from '../../../../shared/services/message-bus/FramesHub';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { CONTROL_FRAME_IFRAME, MERCHANT_PARENT_FRAME } from '../../models/constants/Selectors';\r\nimport { PartialObserver, Unsubscribable } from 'rxjs/src/internal/types';\r\nimport { ofType } from '../../../../shared/services/message-bus/operators/ofType';\r\nimport { FrameCollection } from '../../../../shared/services/message-bus/interfaces/FrameCollection';\r\nimport { FrameIdentifier } from '../../../../shared/services/message-bus/FrameIdentifier';\r\nimport { FrameAccessor } from '../../../../shared/services/message-bus/FrameAccessor';\r\nimport { PRIVATE_EVENTS, PUBLIC_EVENTS } from '../../models/constants/EventTypes';\r\n\r\ntype ControlFrameWindow = Window & { stMessages: Observable<IMessageBusEvent> };\r\n\r\n@Service()\r\nexport class MessageBus implements Subscribable<IMessageBusEvent> {\r\n  public static EVENTS = PRIVATE_EVENTS;\r\n  public static EVENTS_PUBLIC = PUBLIC_EVENTS;\r\n  public readonly pipe: Observable<any>['pipe'];\r\n  private readonly parentFrameStream$ = new Subject<IMessageBusEvent>();\r\n  private readonly messageStream$: Observable<IMessageBusEvent>;\r\n\r\n  constructor(\r\n    private communicator: InterFrameCommunicator,\r\n    private framesHub: FramesHub,\r\n    private identifier: FrameIdentifier,\r\n    private frameAccessor: FrameAccessor\r\n  ) {\r\n    this.messageStream$ = this.getMessageStream();\r\n    this.pipe = this.messageStream$.pipe.bind(this.messageStream$);\r\n\r\n    if (this.identifier.isControlFrame()) {\r\n      ((window as unknown) as ControlFrameWindow).stMessages = this.messageStream$;\r\n    }\r\n  }\r\n\r\n  public publish<T>(event: IMessageBusEvent<T>, publishToParent?: boolean): void {\r\n    this.framesHub.waitForFrame(CONTROL_FRAME_IFRAME).subscribe(controlFrame => {\r\n      try {\r\n        this.communicator.send(event, controlFrame);\r\n      } catch (e) {\r\n        console.warn(`Cannot send event to ControlFrame. ${e}`);\r\n      }\r\n    });\r\n\r\n    if (publishToParent) {\r\n      this.publishToParent(event);\r\n    }\r\n  }\r\n\r\n  public subscribe<T>(observer?: PartialObserver<IMessageBusEvent<T>>): Unsubscribable;\r\n\r\n  public subscribe<T>(\r\n    next?: (value: IMessageBusEvent<T>) => void,\r\n    error?: (error: any) => void,\r\n    complete?: () => void\r\n  ): Unsubscribable;\r\n\r\n  /** @deprecated use RxJS implementation instead */\r\n  public subscribe<T>(eventType: string, callback: (data: T) => void): Unsubscribable;\r\n\r\n  public subscribe<T>(...args: any[]): Unsubscribable {\r\n    if (typeof args[0] === 'string' && typeof args[1] === 'function') {\r\n      const [eventType, callback] = args;\r\n\r\n      return this.messageStream$\r\n        .pipe(\r\n          ofType(eventType),\r\n          map((event: IMessageBusEvent<T>) => event.data)\r\n        )\r\n        .subscribe(callback);\r\n    }\r\n\r\n    return this.messageStream$.subscribe.apply(this.messageStream$, args);\r\n  }\r\n\r\n  private publishToParent<T>(event: IMessageBusEvent<T>): void {\r\n    if (!Object.values(MessageBus.EVENTS_PUBLIC).includes(event.type)) {\r\n      throw new Error(`Cannot publish private event \"${event.type}\" to parent frame.`);\r\n    }\r\n\r\n    if (this.identifier.isParentFrame()) {\r\n      this.parentFrameStream$.next(event);\r\n      return;\r\n    }\r\n\r\n    this.communicator.send(event, MERCHANT_PARENT_FRAME);\r\n  }\r\n\r\n  private getMessageStream(): Observable<IMessageBusEvent> {\r\n    if (this.identifier.isControlFrame()) {\r\n      return this.communicator.incomingEvent$;\r\n    }\r\n\r\n    if (this.identifier.isParentFrame()) {\r\n      return merge(this.communicator.incomingEvent$, this.parentFrameStream$);\r\n    }\r\n\r\n    return this.framesHub.waitForFrame(CONTROL_FRAME_IFRAME).pipe(\r\n      switchMap(frameName => {\r\n        const frames: FrameCollection = this.frameAccessor.getFrameCollection();\r\n        const controlFrame: ControlFrameWindow = frames[frameName] as ControlFrameWindow;\r\n\r\n        return new Observable<IMessageBusEvent>(subscriber => {\r\n          controlFrame.stMessages.subscribe(value => subscriber.next(value));\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\notification\\Notification.ts":{"language":"typescript","mutants":[{"id":"2028","location":{"end":{"column":4,"line":44},"start":{"column":5,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2030","location":{"end":{"column":6,"line":39},"start":{"column":102,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2029","location":{"end":{"column":46,"line":35},"start":{"column":39,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2031","location":{"end":{"column":6,"line":43},"start":{"column":72,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2032","location":{"end":{"column":83,"line":42},"start":{"column":75,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2033","location":{"end":{"column":4,"line":54},"start":{"column":32,"line":46}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2035","location":{"end":{"column":66,"line":48},"start":{"column":29,"line":48}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2034","location":{"end":{"column":6,"line":53},"start":{"column":70,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2036","location":{"end":{"column":66,"line":48},"start":{"column":29,"line":48}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2037","location":{"end":{"column":66,"line":48},"start":{"column":29,"line":48}},"mutatorName":"LogicalOperator","replacement":"config.styles.notificationFrame && {}","status":"Survived"},{"id":"2038","location":{"end":{"column":8,"line":51},"start":{"column":71,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2039","location":{"end":{"column":47,"line":50},"start":{"column":16,"line":50}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2040","location":{"end":{"column":4,"line":138},"start":{"column":47,"line":56}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2041","location":{"end":{"column":6,"line":64},"start":{"column":35,"line":57}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2043","location":{"end":{"column":62,"line":58},"start":{"column":44,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2042","location":{"end":{"column":82,"line":58},"start":{"column":32,"line":58}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2044","location":{"end":{"column":80,"line":58},"start":{"column":74,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2046","location":{"end":{"column":40,"line":59},"start":{"column":33,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2045","location":{"end":{"column":60,"line":59},"start":{"column":21,"line":59}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2047","location":{"end":{"column":58,"line":59},"start":{"column":52,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2049","location":{"end":{"column":48,"line":60},"start":{"column":37,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2048","location":{"end":{"column":68,"line":60},"start":{"column":25,"line":60}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2051","location":{"end":{"column":72,"line":61},"start":{"column":27,"line":61}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2050","location":{"end":{"column":66,"line":60},"start":{"column":60,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2052","location":{"end":{"column":52,"line":61},"start":{"column":39,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2053","location":{"end":{"column":70,"line":61},"start":{"column":64,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2054","location":{"end":{"column":68,"line":62},"start":{"column":27,"line":62}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2055","location":{"end":{"column":48,"line":62},"start":{"column":39,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2056","location":{"end":{"column":66,"line":62},"start":{"column":60,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2059","location":{"end":{"column":66,"line":63},"start":{"column":60,"line":63}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2057","location":{"end":{"column":68,"line":63},"start":{"column":28,"line":63}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2058","location":{"end":{"column":48,"line":63},"start":{"column":40,"line":63}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2060","location":{"end":{"column":53,"line":65},"start":{"column":26,"line":65}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"2061","location":{"end":{"column":66,"line":66},"start":{"column":19,"line":66}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"2062","location":{"end":{"column":70,"line":67},"start":{"column":21,"line":67}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"2063","location":{"end":{"column":68,"line":68},"start":{"column":20,"line":68}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"2065","location":{"end":{"column":6,"line":136},"start":{"column":15,"line":70}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2064","location":{"end":{"column":64,"line":69},"start":{"column":18,"line":69}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"2066","location":{"end":{"column":8,"line":75},"start":{"column":40,"line":72}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2068","location":{"end":{"column":8,"line":79},"start":{"column":46,"line":76}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2067","location":{"end":{"column":37,"line":73},"start":{"column":19,"line":73}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2069","location":{"end":{"column":37,"line":77},"start":{"column":19,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2070","location":{"end":{"column":8,"line":83},"start":{"column":45,"line":80}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2071","location":{"end":{"column":37,"line":81},"start":{"column":19,"line":81}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2072","location":{"end":{"column":8,"line":87},"start":{"column":48,"line":84}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2073","location":{"end":{"column":37,"line":85},"start":{"column":19,"line":85}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2074","location":{"end":{"column":8,"line":91},"start":{"column":47,"line":88}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2075","location":{"end":{"column":37,"line":89},"start":{"column":19,"line":89}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2076","location":{"end":{"column":88,"line":92},"start":{"column":36,"line":92}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2077","location":{"end":{"column":62,"line":92},"start":{"column":48,"line":92}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2078","location":{"end":{"column":87,"line":93},"start":{"column":42,"line":93}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2079","location":{"end":{"column":68,"line":93},"start":{"column":54,"line":93}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2080","location":{"end":{"column":85,"line":94},"start":{"column":41,"line":94}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2081","location":{"end":{"column":67,"line":94},"start":{"column":53,"line":94}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2082","location":{"end":{"column":8,"line":98},"start":{"column":44,"line":95}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2083","location":{"end":{"column":33,"line":96},"start":{"column":19,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2085","location":{"end":{"column":33,"line":100},"start":{"column":19,"line":100}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2084","location":{"end":{"column":8,"line":102},"start":{"column":43,"line":99}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2086","location":{"end":{"column":90,"line":103},"start":{"column":37,"line":103}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2088","location":{"end":{"column":89,"line":104},"start":{"column":43,"line":104}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2087","location":{"end":{"column":64,"line":103},"start":{"column":49,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2089","location":{"end":{"column":70,"line":104},"start":{"column":55,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2090","location":{"end":{"column":87,"line":105},"start":{"column":42,"line":105}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2091","location":{"end":{"column":69,"line":105},"start":{"column":54,"line":105}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2092","location":{"end":{"column":8,"line":109},"start":{"column":45,"line":106}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2093","location":{"end":{"column":34,"line":107},"start":{"column":19,"line":107}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2094","location":{"end":{"column":8,"line":113},"start":{"column":44,"line":110}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2095","location":{"end":{"column":34,"line":111},"start":{"column":19,"line":111}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2096","location":{"end":{"column":87,"line":114},"start":{"column":35,"line":114}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2097","location":{"end":{"column":61,"line":114},"start":{"column":47,"line":114}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2099","location":{"end":{"column":67,"line":115},"start":{"column":53,"line":115}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2098","location":{"end":{"column":86,"line":115},"start":{"column":41,"line":115}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2101","location":{"end":{"column":66,"line":116},"start":{"column":52,"line":116}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2100","location":{"end":{"column":84,"line":116},"start":{"column":40,"line":116}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2102","location":{"end":{"column":90,"line":117},"start":{"column":43,"line":117}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2103","location":{"end":{"column":69,"line":117},"start":{"column":55,"line":117}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2104","location":{"end":{"column":88,"line":118},"start":{"column":42,"line":118}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2106","location":{"end":{"column":74,"line":119},"start":{"column":29,"line":119}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2105","location":{"end":{"column":68,"line":118},"start":{"column":54,"line":118}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2107","location":{"end":{"column":48,"line":119},"start":{"column":41,"line":119}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2108","location":{"end":{"column":73,"line":120},"start":{"column":35,"line":120}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2109","location":{"end":{"column":54,"line":120},"start":{"column":47,"line":120}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2110","location":{"end":{"column":71,"line":121},"start":{"column":34,"line":121}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2111","location":{"end":{"column":53,"line":121},"start":{"column":46,"line":121}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2112","location":{"end":{"column":77,"line":122},"start":{"column":37,"line":122}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2113","location":{"end":{"column":56,"line":122},"start":{"column":49,"line":122}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2114","location":{"end":{"column":75,"line":123},"start":{"column":36,"line":123}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2117","location":{"end":{"column":56,"line":124},"start":{"column":45,"line":124}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2116","location":{"end":{"column":82,"line":124},"start":{"column":33,"line":124}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2115","location":{"end":{"column":55,"line":123},"start":{"column":48,"line":123}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2118","location":{"end":{"column":86,"line":125},"start":{"column":35,"line":125}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2119","location":{"end":{"column":60,"line":125},"start":{"column":47,"line":125}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2120","location":{"end":{"column":82,"line":126},"start":{"column":35,"line":126}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2121","location":{"end":{"column":56,"line":126},"start":{"column":47,"line":126}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2123","location":{"end":{"column":62,"line":127},"start":{"column":53,"line":127}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2122","location":{"end":{"column":81,"line":127},"start":{"column":41,"line":127}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2124","location":{"end":{"column":79,"line":128},"start":{"column":40,"line":128}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2126","location":{"end":{"column":85,"line":129},"start":{"column":43,"line":129}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2127","location":{"end":{"column":64,"line":129},"start":{"column":55,"line":129}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2125","location":{"end":{"column":61,"line":128},"start":{"column":52,"line":128}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2129","location":{"end":{"column":63,"line":130},"start":{"column":54,"line":130}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2128","location":{"end":{"column":83,"line":130},"start":{"column":42,"line":130}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2130","location":{"end":{"column":82,"line":131},"start":{"column":36,"line":131}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2131","location":{"end":{"column":56,"line":131},"start":{"column":48,"line":131}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2133","location":{"end":{"column":62,"line":132},"start":{"column":54,"line":132}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2132","location":{"end":{"column":81,"line":132},"start":{"column":42,"line":132}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2134","location":{"end":{"column":79,"line":133},"start":{"column":41,"line":133}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2135","location":{"end":{"column":61,"line":133},"start":{"column":53,"line":133}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2136","location":{"end":{"column":85,"line":134},"start":{"column":44,"line":134}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2137","location":{"end":{"column":64,"line":134},"start":{"column":56,"line":134}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2138","location":{"end":{"column":83,"line":135},"start":{"column":43,"line":135}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2139","location":{"end":{"column":63,"line":135},"start":{"column":55,"line":135}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2140","location":{"end":{"column":4,"line":142},"start":{"column":88,"line":140}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2141","location":{"end":{"column":110,"line":144},"start":{"column":30,"line":144}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2143","location":{"end":{"column":15,"line":150},"start":{"column":7,"line":148}},"mutatorName":"ConditionalExpression","replacement":"case NotificationsMessageTypes.error:","status":"Survived"},{"id":"2142","location":{"end":{"column":4,"line":163},"start":{"column":112,"line":146}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2144","location":{"end":{"column":72,"line":149},"start":{"column":47,"line":149}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2145","location":{"end":{"column":79,"line":149},"start":{"column":74,"line":149}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2146","location":{"end":{"column":15,"line":153},"start":{"column":7,"line":151}},"mutatorName":"ConditionalExpression","replacement":"case NotificationsMessageTypes.info:","status":"Survived"},{"id":"2147","location":{"end":{"column":72,"line":152},"start":{"column":47,"line":152}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2148","location":{"end":{"column":80,"line":152},"start":{"column":74,"line":152}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2149","location":{"end":{"column":15,"line":156},"start":{"column":7,"line":154}},"mutatorName":"ConditionalExpression","replacement":"case NotificationsMessageTypes.success:","status":"Survived"},{"id":"2150","location":{"end":{"column":72,"line":155},"start":{"column":47,"line":155}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2151","location":{"end":{"column":81,"line":155},"start":{"column":74,"line":155}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2152","location":{"end":{"column":15,"line":159},"start":{"column":7,"line":157}},"mutatorName":"ConditionalExpression","replacement":"case NotificationsMessageTypes.cancel:","status":"Survived"},{"id":"2153","location":{"end":{"column":72,"line":158},"start":{"column":47,"line":158}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2154","location":{"end":{"column":82,"line":158},"start":{"column":74,"line":158}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2155","location":{"end":{"column":87,"line":161},"start":{"column":7,"line":160}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Survived"},{"id":"2157","location":{"end":{"column":85,"line":161},"start":{"column":74,"line":161}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2156","location":{"end":{"column":72,"line":161},"start":{"column":47,"line":161}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2158","location":{"end":{"column":4,"line":182},"start":{"column":89,"line":165}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2159","location":{"end":{"column":33,"line":168},"start":{"column":9,"line":168}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2160","location":{"end":{"column":33,"line":168},"start":{"column":9,"line":168}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2162","location":{"end":{"column":53,"line":172},"start":{"column":11,"line":172}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2161","location":{"end":{"column":6,"line":181},"start":{"column":35,"line":168}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2163","location":{"end":{"column":53,"line":172},"start":{"column":11,"line":172}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2164","location":{"end":{"column":53,"line":172},"start":{"column":11,"line":172}},"mutatorName":"EqualityOperator","replacement":"type !== NotificationsMessageTypes.success","status":"Survived"},{"id":"2165","location":{"end":{"column":8,"line":175},"start":{"column":55,"line":172}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2166","location":{"end":{"column":8,"line":180},"start":{"column":49,"line":176}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2167","location":{"end":{"column":57,"line":179},"start":{"column":55,"line":179}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"2168","location":{"end":{"column":4,"line":196},"start":{"column":64,"line":184}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2169","location":{"end":{"column":34,"line":190},"start":{"column":9,"line":190}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2170","location":{"end":{"column":34,"line":190},"start":{"column":9,"line":190}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2171","location":{"end":{"column":34,"line":190},"start":{"column":9,"line":190}},"mutatorName":"BooleanLiteral","replacement":"notificationFrameElement","status":"Survived"},{"id":"2172","location":{"end":{"column":6,"line":192},"start":{"column":36,"line":190}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { INotificationEvent } from '../../models/INotificationEvent';\nimport { Service } from 'typedi';\nimport {\n  CONTROL_FRAME_IFRAME,\n  NOTIFICATION_FRAME_CORE_CLASS,\n  NOTIFICATION_FRAME_ID\n} from '../../models/constants/Selectors';\nimport { environment } from '../../../../environments/environment';\nimport { Translator } from '../translator/Translator';\nimport { MessageBus } from '../message-bus/MessageBus';\nimport { FramesHub } from '../../../../shared/services/message-bus/FramesHub';\nimport { BrowserLocalStorage } from '../../../../shared/services/storage/BrowserLocalStorage';\nimport { Styler } from '../styler/Styler';\nimport { IAllowedStyles } from '../../models/IAllowedStyles';\nimport { ConfigProvider } from '../../../../shared/services/config-provider/ConfigProvider';\nimport { NotificationsClasses } from '../../models/constants/notifications/NotificationsClasses';\nimport { NotificationsMessageTypes } from '../../models/constants/notifications/NotificationsMessageTypes';\nimport { IConfig } from '../../../../shared/model/config/IConfig';\nimport { Frame } from '../frame/Frame';\n\n@Service()\nexport class Notification {\n  private _messageMap: Map<string, string>;\n  private _translator: Translator;\n  private _timeoutId: number;\n\n  constructor(\n    private _messageBus: MessageBus,\n    private _browserLocalStorage: BrowserLocalStorage,\n    private _configProvider: ConfigProvider,\n    private _framesHub: FramesHub,\n    private _frame: Frame\n  ) {\n    this._applyStyles();\n    this._translator = new Translator('en_GB');\n    this._messageMap = new Map(Object.entries(NotificationsClasses));\n    this._messageBus.subscribe(MessageBus.EVENTS_PUBLIC.NOTIFICATION, (event: INotificationEvent) => {\n      this._displayNotification(event);\n    });\n\n    this._framesHub.waitForFrame(CONTROL_FRAME_IFRAME).subscribe(() => {\n      this._translator = new Translator(this._browserLocalStorage.getItem('locale'));\n    });\n  }\n\n  private _applyStyles(): void {\n    this._configProvider.getConfig$().subscribe((config: IConfig) => {\n      const definedStyles = config.styles.notificationFrame || {};\n      const styles = Object.keys(definedStyles).map((item: string) => {\n        return { [item]: definedStyles[item] };\n      });\n      const styler: Styler = new Styler(this._getAllowedStyles(), styles);\n    });\n  }\n\n  private _getAllowedStyles(): IAllowedStyles {\n    let allowed: IAllowedStyles = {\n      'background-color-body': { property: 'background-color', selector: 'body' },\n      'color-body': { property: 'color', selector: 'body' },\n      'font-size-body': { property: 'font-size', selector: 'body' },\n      'line-height-body': { property: 'line-height', selector: 'body' },\n      'space-inset-body': { property: 'padding', selector: 'body' },\n      'space-outset-body': { property: 'margin', selector: 'body' }\n    };\n    const notification = `#${NOTIFICATION_FRAME_ID}`;\n    const error = `.${NotificationsClasses.error}${notification}`;\n    const success = `.${NotificationsClasses.success}${notification}`;\n    const cancel = `.${NotificationsClasses.cancel}${notification}`;\n    const info = `.${NotificationsClasses.info}${notification}`;\n    allowed = {\n      ...allowed,\n      'background-color-notification': {\n        property: 'background-color',\n        selector: notification\n      },\n      'background-color-notification-error': {\n        property: 'background-color',\n        selector: error\n      },\n      'background-color-notification-info': {\n        property: 'background-color',\n        selector: info\n      },\n      'background-color-notification-success': {\n        property: 'background-color',\n        selector: success\n      },\n      'background-color-notification-cancel': {\n        property: 'background-color',\n        selector: cancel\n      },\n      'border-color-notification': { property: 'border-color', selector: notification },\n      'border-color-notification-error': { property: 'border-color', selector: error },\n      'border-color-notification-info': { property: 'border-color', selector: info },\n      'border-color-notification-success': {\n        property: 'border-color',\n        selector: success\n      },\n      'border-color-notification-cancel': {\n        property: 'border-color',\n        selector: cancel\n      },\n      'border-radius-notification': { property: 'border-radius', selector: notification },\n      'border-radius-notification-error': { property: 'border-radius', selector: error },\n      'border-radius-notification-info': { property: 'border-radius', selector: info },\n      'border-radius-notification-success': {\n        property: 'border-radius',\n        selector: success\n      },\n      'border-radius-notification-cancel': {\n        property: 'border-radius',\n        selector: cancel\n      },\n      'border-size-notification': { property: 'border-width', selector: notification },\n      'border-size-notification-error': { property: 'border-width', selector: error },\n      'border-size-notification-info': { property: 'border-width', selector: info },\n      'border-size-notification-success': { property: 'border-width', selector: success },\n      'border-size-notification-cancel': { property: 'border-width', selector: cancel },\n      'color-notification': { property: 'color', selector: notification },\n      'color-notification-error': { property: 'color', selector: error },\n      'color-notification-info': { property: 'color', selector: info },\n      'color-notification-success': { property: 'color', selector: success },\n      'color-notification-cancel': { property: 'color', selector: cancel },\n      'font-size-notification': { property: 'font-size', selector: notification },\n      'line-height-notification': { property: 'line-height', selector: notification },\n      'space-inset-notification': { property: 'padding', selector: notification },\n      'space-inset-notification-error': { property: 'padding', selector: error },\n      'space-inset-notification-info': { property: 'padding', selector: info },\n      'space-inset-notification-success': { property: 'padding', selector: success },\n      'space-inset-notification-cancel': { property: 'padding', selector: cancel },\n      'space-outset-notification': { property: 'margin', selector: notification },\n      'space-outset-notification-error': { property: 'margin', selector: error },\n      'space-outset-notification-info': { property: 'margin', selector: info },\n      'space-outset-notification-success': { property: 'margin', selector: success },\n      'space-outset-notification-cancel': { property: 'margin', selector: cancel }\n    };\n    return allowed;\n  }\n\n  private _insertContent(notificationFrameElement: HTMLElement, content: string): void {\n    notificationFrameElement.textContent = this._translator.translate(content);\n  }\n\n  private _getMessageClass = (messageType: string): string => this._messageMap.get(messageType.toLowerCase());\n\n  private _setDataNotificationColorAttribute(notificationFrameElement: HTMLElement, messageType: string): void {\n    switch (messageType) {\n      case NotificationsMessageTypes.error:\n        notificationFrameElement.setAttribute('data-notification-color', 'red');\n        break;\n      case NotificationsMessageTypes.info:\n        notificationFrameElement.setAttribute('data-notification-color', 'grey');\n        break;\n      case NotificationsMessageTypes.success:\n        notificationFrameElement.setAttribute('data-notification-color', 'green');\n        break;\n      case NotificationsMessageTypes.cancel:\n        notificationFrameElement.setAttribute('data-notification-color', 'yellow');\n        break;\n      default:\n        notificationFrameElement.setAttribute('data-notification-color', 'undefined');\n    }\n  }\n\n  private _setAttributeClass(notificationFrameElement: HTMLElement, type: string): void {\n    const notificationElementClass = this._getMessageClass(type);\n    notificationFrameElement.classList.add(NOTIFICATION_FRAME_CORE_CLASS);\n    if (notificationElementClass) {\n      notificationFrameElement.classList.remove(...Object.values(NotificationsClasses));\n      notificationFrameElement.classList.add(notificationElementClass);\n      this._setDataNotificationColorAttribute(notificationFrameElement, type);\n      if (type === NotificationsMessageTypes.success) {\n        window.clearTimeout(this._timeoutId);\n        return;\n      }\n      this._timeoutId = window.setTimeout(() => {\n        notificationFrameElement.classList.remove(notificationElementClass);\n        notificationFrameElement.classList.remove(NOTIFICATION_FRAME_CORE_CLASS);\n        this._insertContent(notificationFrameElement, '');\n      }, environment.NOTIFICATION_TTL);\n    }\n  }\n\n  private _displayNotification(data: INotificationEvent): void {\n    const { content, type } = data;\n    const notificationFrameElement = document.getElementById(\n      this._configProvider.getConfig().componentIds.notificationFrame\n    );\n\n    if (!notificationFrameElement) {\n      return;\n    }\n\n    this._insertContent(notificationFrameElement, content);\n    this._setAttributeClass(notificationFrameElement, type);\n  }\n}\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\on-input-wrapper\\onInputWrapper.ts":{"language":"typescript","mutants":[{"id":"2173","location":{"end":{"column":2,"line":22},"start":{"column":64,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2174","location":{"end":{"column":56,"line":6},"start":{"column":7,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2175","location":{"end":{"column":56,"line":6},"start":{"column":7,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2176","location":{"end":{"column":56,"line":6},"start":{"column":7,"line":6}},"mutatorName":"BooleanLiteral","replacement":"window.navigator.userAgent.match(/MSIE|Trident/)","status":"Survived"},{"id":"2178","location":{"end":{"column":48,"line":10},"start":{"column":20,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2177","location":{"end":{"column":4,"line":21},"start":{"column":29,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2179","location":{"end":{"column":48,"line":10},"start":{"column":20,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2180","location":{"end":{"column":48,"line":10},"start":{"column":20,"line":10}},"mutatorName":"EqualityOperator","replacement":"t !== document.activeElement","status":"Survived"},{"id":"2181","location":{"end":{"column":69,"line":11},"start":{"column":9,"line":11}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2182","location":{"end":{"column":69,"line":11},"start":{"column":9,"line":11}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2183","location":{"end":{"column":69,"line":11},"start":{"column":9,"line":11}},"mutatorName":"LogicalOperator","replacement":"!active && t.placeholder && t.composition_started !== true","status":"Survived"},{"id":"2186","location":{"end":{"column":68,"line":11},"start":{"column":21,"line":11}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2185","location":{"end":{"column":68,"line":11},"start":{"column":21,"line":11}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2184","location":{"end":{"column":16,"line":11},"start":{"column":9,"line":11}},"mutatorName":"BooleanLiteral","replacement":"active","status":"Survived"},{"id":"2187","location":{"end":{"column":68,"line":11},"start":{"column":21,"line":11}},"mutatorName":"LogicalOperator","replacement":"t.placeholder || t.composition_started !== true","status":"Survived"},{"id":"2189","location":{"end":{"column":68,"line":11},"start":{"column":38,"line":11}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2188","location":{"end":{"column":68,"line":11},"start":{"column":38,"line":11}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2190","location":{"end":{"column":68,"line":11},"start":{"column":38,"line":11}},"mutatorName":"EqualityOperator","replacement":"t.composition_started === true","status":"Survived"},{"id":"2191","location":{"end":{"column":68,"line":11},"start":{"column":64,"line":11}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2193","location":{"end":{"column":73,"line":13},"start":{"column":11,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2192","location":{"end":{"column":6,"line":19},"start":{"column":71,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2194","location":{"end":{"column":73,"line":13},"start":{"column":11,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2195","location":{"end":{"column":73,"line":13},"start":{"column":11,"line":13}},"mutatorName":"LogicalOperator","replacement":"!active && t.tagName === 'TEXTAREA' && t.tagName === 'INPUT'","status":"Survived"},{"id":"2196","location":{"end":{"column":47,"line":13},"start":{"column":12,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2198","location":{"end":{"column":47,"line":13},"start":{"column":12,"line":13}},"mutatorName":"LogicalOperator","replacement":"!active || t.tagName === 'TEXTAREA'","status":"Survived"},{"id":"2197","location":{"end":{"column":47,"line":13},"start":{"column":12,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2199","location":{"end":{"column":19,"line":13},"start":{"column":12,"line":13}},"mutatorName":"BooleanLiteral","replacement":"active","status":"Survived"},{"id":"2202","location":{"end":{"column":47,"line":13},"start":{"column":23,"line":13}},"mutatorName":"EqualityOperator","replacement":"t.tagName !== 'TEXTAREA'","status":"Survived"},{"id":"2200","location":{"end":{"column":47,"line":13},"start":{"column":23,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2201","location":{"end":{"column":47,"line":13},"start":{"column":23,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2204","location":{"end":{"column":73,"line":13},"start":{"column":52,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2203","location":{"end":{"column":47,"line":13},"start":{"column":37,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2205","location":{"end":{"column":73,"line":13},"start":{"column":52,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2206","location":{"end":{"column":73,"line":13},"start":{"column":52,"line":13}},"mutatorName":"EqualityOperator","replacement":"t.tagName !== 'INPUT'","status":"Survived"},{"id":"2207","location":{"end":{"column":73,"line":13},"start":{"column":66,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2208","location":{"end":{"column":8,"line":18},"start":{"column":75,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2209","location":{"end":{"column":21,"line":17},"start":{"column":16,"line":17}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"}],"source":"/**\r\n * This wrapper disables the \"input\" event being fired when placeholder changes on IE\r\n * @link https://stackoverflow.com/a/57607005\r\n */\r\nexport function onInputWraper(cb: (event: InputEvent) => void) {\r\n  if (!window.navigator.userAgent.match(/MSIE|Trident/)) return cb;\r\n\r\n  return (e: InputEvent) => {\r\n    const t = e.target as (HTMLInputElement | HTMLTextAreaElement) & { composition_started: boolean };\r\n    const active = t === document.activeElement;\r\n    if (!active || (t.placeholder && t.composition_started !== true)) {\r\n      t.composition_started = active;\r\n      if ((!active && t.tagName === 'TEXTAREA') || t.tagName === 'INPUT') {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        return false;\r\n      }\r\n    }\r\n    cb(e);\r\n  };\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\override-domain\\OverrideDomain.ts":{"language":"typescript","mutants":[{"id":"2210","location":{"end":{"column":31,"line":3},"start":{"column":5,"line":3}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2211","location":{"end":{"column":31,"line":3},"start":{"column":5,"line":3}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2212","location":{"end":{"column":2,"line":5},"start":{"column":33,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { environment } from '../../../../environments/environment';\r\n\r\nif (environment.overrideDomain) {\r\n  document.domain = environment.overrideDomain;\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\payment\\Payment.ts":{"language":"typescript","mutants":[{"id":"2213","location":{"end":{"column":4,"line":30},"start":{"column":17,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2214","location":{"end":{"column":6,"line":29},"start":{"column":33,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2215","location":{"end":{"column":48,"line":28},"start":{"column":32,"line":28}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2216","location":{"end":{"column":47,"line":28},"start":{"column":33,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2217","location":{"end":{"column":4,"line":34},"start":{"column":60,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2218","location":{"end":{"column":4,"line":69},"start":{"column":22,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2219","location":{"end":{"column":34,"line":42},"start":{"column":9,"line":42}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2221","location":{"end":{"column":34,"line":42},"start":{"column":9,"line":42}},"mutatorName":"EqualityOperator","replacement":"requestTypes.length !== 0","status":"Survived"},{"id":"2220","location":{"end":{"column":34,"line":42},"start":{"column":9,"line":42}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2222","location":{"end":{"column":6,"line":54},"start":{"column":36,"line":42}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2223","location":{"end":{"column":8,"line":47},"start":{"column":28,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2224","location":{"end":{"column":24,"line":46},"start":{"column":20,"line":46}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2225","location":{"end":{"column":8,"line":53},"start":{"column":30,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2226","location":{"end":{"column":6,"line":61},"start":{"column":39,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2227","location":{"end":{"column":23,"line":64},"start":{"column":9,"line":64}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2228","location":{"end":{"column":23,"line":64},"start":{"column":9,"line":64}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2229","location":{"end":{"column":6,"line":66},"start":{"column":25,"line":64}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2230","location":{"end":{"column":4,"line":74},"start":{"column":52,"line":71}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { IStRequest } from '../../models/IStRequest';\r\nimport { StCodec } from '../../services/st-codec/StCodec.class';\r\nimport { StTransport } from '../../services/st-transport/StTransport.class';\r\nimport { ICard } from '../../models/ICard';\r\nimport { IMerchantData } from '../../models/IMerchantData';\r\nimport { IWallet } from '../../models/IWallet';\r\nimport { IWalletVerify } from '../../models/IWalletVerify';\r\nimport { Validation } from '../validation/Validation';\r\nimport { Container } from 'typedi';\r\nimport { NotificationService } from '../../../../client/notification/NotificationService';\r\nimport { Cybertonica } from '../../integrations/cybertonica/Cybertonica';\r\nimport { PAYMENT_SUCCESS } from '../../models/constants/Translations';\r\n\r\nexport class Payment {\r\n  private _cardinalCommerceCacheToken: string;\r\n  private _notification: NotificationService;\r\n  private _stTransport: StTransport;\r\n  private _validation: Validation;\r\n  private _cybertonica: Cybertonica;\r\n  private readonly _walletVerifyRequest: IStRequest;\r\n\r\n  constructor() {\r\n    this._notification = Container.get(NotificationService);\r\n    this._cybertonica = Container.get(Cybertonica);\r\n    this._stTransport = Container.get(StTransport);\r\n    this._validation = new Validation();\r\n    this._walletVerifyRequest = {\r\n      requesttypedescriptions: ['WALLETVERIFY']\r\n    };\r\n  }\r\n\r\n  public setCardinalCommerceCacheToken(cachetoken: string) {\r\n    this._cardinalCommerceCacheToken = cachetoken;\r\n  }\r\n\r\n  public async processPayment(\r\n    requestTypes: string[],\r\n    payment: ICard | IWallet,\r\n    merchantData: IMerchantData,\r\n    additionalData?: any\r\n  ): Promise<object> {\r\n    if (requestTypes.length === 0) {\r\n      // This should only happen if were processing a 3DS payment with no requests after the THREEDQUERY\r\n      const responseData = {\r\n        ...this._stTransport._threeDQueryResult.response,\r\n        validated: true\r\n      };\r\n\r\n      StCodec.publishResponse(responseData, this._stTransport._threeDQueryResult.jwt, additionalData.threedresponse);\r\n      this._notification.success(PAYMENT_SUCCESS);\r\n      return Promise.resolve({\r\n        response: {}\r\n      });\r\n    }\r\n\r\n    const processPaymentRequestBody = {\r\n      requesttypedescriptions: requestTypes,\r\n      ...additionalData,\r\n      ...merchantData,\r\n      ...payment\r\n    };\r\n    const cybertonicaTid = await this._cybertonica.getTransactionId();\r\n\r\n    if (cybertonicaTid) {\r\n      (processPaymentRequestBody as any).fraudcontroltransactionid = cybertonicaTid;\r\n    }\r\n\r\n    return this._stTransport.sendRequest(processPaymentRequestBody);\r\n  }\r\n\r\n  public walletVerify(walletVerify: IWalletVerify) {\r\n    Object.assign(this._walletVerifyRequest, walletVerify);\r\n    return this._stTransport.sendRequest(this._walletVerifyRequest);\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\stjwt\\StJwt.ts":{"language":"typescript","mutants":[{"id":"2232","location":{"end":{"column":4,"line":17},"start":{"column":30,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2231","location":{"end":{"column":4,"line":13},"start":{"column":28,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2233","location":{"end":{"column":4,"line":21},"start":{"column":30,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2234","location":{"end":{"column":4,"line":25},"start":{"column":26,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2235","location":{"end":{"column":4,"line":29},"start":{"column":23,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2237","location":{"end":{"column":42,"line":28},"start":{"column":12,"line":28}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2236","location":{"end":{"column":42,"line":28},"start":{"column":12,"line":28}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2238","location":{"end":{"column":42,"line":28},"start":{"column":12,"line":28}},"mutatorName":"LogicalOperator","replacement":"this.payload.locale && 'en_GB'","status":"Survived"},{"id":"2239","location":{"end":{"column":42,"line":28},"start":{"column":35,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2240","location":{"end":{"column":4,"line":40},"start":{"column":27,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2241","location":{"end":{"column":33,"line":33},"start":{"column":9,"line":33}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2242","location":{"end":{"column":33,"line":33},"start":{"column":9,"line":33}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2243","location":{"end":{"column":33,"line":33},"start":{"column":9,"line":33}},"mutatorName":"EqualityOperator","replacement":"mainamount !== undefined","status":"Survived"},{"id":"2245","location":{"end":{"column":8,"line":37},"start":{"column":38,"line":34}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2244","location":{"end":{"column":6,"line":38},"start":{"column":35,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import JwtDecode from 'jwt-decode';\r\nimport { Currencies, Money } from 'ts-money';\r\nimport { IStJwtObj } from '../../models/IStJwtObj';\r\nimport { IStJwtPayload } from '../../models/IStJwtPayload';\r\n\r\nexport class StJwt {\r\n  public payload: IStJwtPayload;\r\n  private _decodedJwt: IStJwtObj;\r\n\r\n  constructor(jwt: string) {\r\n    this._decodedJwt = JwtDecode<IStJwtObj>(jwt);\r\n    this.payload = this._decodedJwt.payload;\r\n  }\r\n\r\n  public get sitereference() {\r\n    return this.payload.sitereference;\r\n  }\r\n\r\n  public get currencyiso3a() {\r\n    return this.payload.currencyiso3a;\r\n  }\r\n\r\n  private get currency() {\r\n    return (Currencies as any)[this.payload.currencyiso3a];\r\n  }\r\n\r\n  public get locale() {\r\n    return this.payload.locale || 'en_GB';\r\n  }\r\n\r\n  public get mainamount() {\r\n    let mainamount = this.payload.mainamount;\r\n    if (mainamount === undefined) {\r\n      mainamount = Money.fromInteger({\r\n        amount: parseInt(this.payload.baseamount, 10),\r\n        currency: this.currency\r\n      }).toString();\r\n    }\r\n    return mainamount;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\styler\\Styler.ts":{"language":"typescript","mutants":[{"id":"2247","location":{"end":{"column":23,"line":13},"start":{"column":21,"line":13}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"2246","location":{"end":{"column":4,"line":19},"start":{"column":60,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2248","location":{"end":{"column":6,"line":17},"start":{"column":33,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2249","location":{"end":{"column":49,"line":16},"start":{"column":20,"line":16}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"2250","location":{"end":{"column":28,"line":18},"start":{"column":25,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2251","location":{"end":{"column":4,"line":28},"start":{"column":59,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2252","location":{"end":{"column":4,"line":32},"start":{"column":42,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2253","location":{"end":{"column":4,"line":42},"start":{"column":45,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2254","location":{"end":{"column":6,"line":40},"start":{"column":33,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2256","location":{"end":{"column":60,"line":37},"start":{"column":11,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2255","location":{"end":{"column":60,"line":37},"start":{"column":11,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2257","location":{"end":{"column":60,"line":37},"start":{"column":11,"line":37}},"mutatorName":"LogicalOperator","replacement":"style === 'isLinedUp' || styles[style] === 'true'","status":"Survived"},{"id":"2259","location":{"end":{"column":32,"line":37},"start":{"column":11,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2258","location":{"end":{"column":32,"line":37},"start":{"column":11,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2261","location":{"end":{"column":32,"line":37},"start":{"column":21,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2260","location":{"end":{"column":32,"line":37},"start":{"column":11,"line":37}},"mutatorName":"EqualityOperator","replacement":"style !== 'isLinedUp'","status":"Survived"},{"id":"2262","location":{"end":{"column":60,"line":37},"start":{"column":36,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2263","location":{"end":{"column":60,"line":37},"start":{"column":36,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2265","location":{"end":{"column":60,"line":37},"start":{"column":54,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2264","location":{"end":{"column":60,"line":37},"start":{"column":36,"line":37}},"mutatorName":"EqualityOperator","replacement":"styles[style] !== 'true'","status":"Survived"},{"id":"2266","location":{"end":{"column":8,"line":39},"start":{"column":62,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2267","location":{"end":{"column":20,"line":38},"start":{"column":16,"line":38}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2268","location":{"end":{"column":17,"line":41},"start":{"column":12,"line":41}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"2269","location":{"end":{"column":4,"line":51},"start":{"column":113,"line":44}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2270","location":{"end":{"column":27,"line":47},"start":{"column":25,"line":47}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"2271","location":{"end":{"column":25,"line":48},"start":{"column":23,"line":48}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"2272","location":{"end":{"column":75,"line":49},"start":{"column":30,"line":49}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2273","location":{"end":{"column":71,"line":50},"start":{"column":28,"line":50}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2274","location":{"end":{"column":4,"line":64},"start":{"column":46,"line":53}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2275","location":{"end":{"column":6,"line":62},"start":{"column":46,"line":56}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2277","location":{"end":{"column":49,"line":58},"start":{"column":11,"line":58}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2276","location":{"end":{"column":49,"line":58},"start":{"column":11,"line":58}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2278","location":{"end":{"column":8,"line":61},"start":{"column":51,"line":58}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2279","location":{"end":{"column":4,"line":75},"start":{"column":45,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2281","location":{"end":{"column":89,"line":70},"start":{"column":11,"line":70}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2280","location":{"end":{"column":6,"line":73},"start":{"column":33,"line":69}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2282","location":{"end":{"column":89,"line":70},"start":{"column":11,"line":70}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2283","location":{"end":{"column":8,"line":72},"start":{"column":91,"line":70}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2284","location":{"end":{"column":4,"line":88},"start":{"column":50,"line":77}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2285","location":{"end":{"column":6,"line":86},"start":{"column":33,"line":80}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2286","location":{"end":{"column":52,"line":82},"start":{"column":11,"line":82}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2287","location":{"end":{"column":52,"line":82},"start":{"column":11,"line":82}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2288","location":{"end":{"column":52,"line":82},"start":{"column":11,"line":82}},"mutatorName":"BooleanLiteral","replacement":"grouped.hasOwnProperty(allowed.selector)","status":"Survived"},{"id":"2289","location":{"end":{"column":8,"line":84},"start":{"column":54,"line":82}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2290","location":{"end":{"column":4,"line":104},"start":{"column":56,"line":90}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2291","location":{"end":{"column":61,"line":94},"start":{"column":33,"line":94}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2292","location":{"end":{"column":60,"line":94},"start":{"column":34,"line":94}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"2294","location":{"end":{"column":46,"line":101},"start":{"column":22,"line":101}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"2293","location":{"end":{"column":6,"line":102},"start":{"column":32,"line":99}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { IAllowedStyles } from '../../models/IAllowedStyles';\r\nimport { IGroupedStyles } from '../../models/IGroupedStyles';\r\nimport { IStyle } from '../../../../shared/model/config/IStyle';\r\nimport { ISubStyles } from '../../models/ISubStyles';\r\nimport { DomMethods } from '../dom-methods/DomMethods';\r\nimport { Container, Service } from 'typedi';\r\nimport { Frame } from '../frame/Frame';\r\nimport { IStyles } from '../../../../shared/model/config/IStyles';\r\n\r\n@Service()\r\nexport class Styler {\r\n  private static _getTagStyles(styles: ISubStyles): string {\r\n    const results = [];\r\n    // tslint:disable-next-line:forin\r\n    for (const style in styles) {\r\n      results.push(`${style}: ${styles[style]};`);\r\n    }\r\n    return results.join(' ');\r\n  }\r\n\r\n  private _frame: Frame;\r\n  private readonly _allowed: IAllowedStyles;\r\n\r\n  constructor(allowed: IAllowedStyles, styles: IStyles[]) {\r\n    this._frame = Container.get(Frame);\r\n    this._allowed = allowed;\r\n    this.inject(styles);\r\n  }\r\n\r\n  public inject(styles: IStyles[]): void {\r\n    DomMethods.insertStyle(this._getStyleString(styles));\r\n  }\r\n\r\n  public isLinedUp(styles: IStyle): boolean {\r\n    // tslint:disable-next-line:forin\r\n    for (const style in styles) {\r\n      if (style === 'isLinedUp' && styles[style] === 'true') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public lineUp(wrapperId: string, labelId: string, wrapperClassList: string[], labelClassList: string[]): void {\r\n    const wrapper = document.getElementById(wrapperId);\r\n    const label = document.getElementById(labelId);\r\n    wrapper.className = '';\r\n    label.className = '';\r\n    wrapperClassList.forEach(className => wrapper.classList.add(className));\r\n    labelClassList.forEach(className => label.classList.add(className));\r\n  }\r\n\r\n  private _filter(styles: IStyles[]): IStyle {\r\n    const filtered: IStyle = {};\r\n    // tslint:disable-next-line:forin\r\n    styles.forEach((style: IStyle, index) => {\r\n      const propName: string = Object.keys(style)[0];\r\n      if (this._allowed.hasOwnProperty(propName)) {\r\n        // @ts-ignore\r\n        filtered[propName] = styles[index][propName];\r\n      }\r\n    });\r\n    return filtered;\r\n  }\r\n\r\n  private _sanitize(styles: IStyle): IStyle {\r\n    const sanitized: IStyle = {};\r\n    // tslint:disable-next-line:forin\r\n    for (const style in styles) {\r\n      if (/^[A-Za-z0-9 _%#)(,.-]*[A-Za-z0-9][A-Za-z0-9 _%#)(,.-]*$/i.test(styles[style])) {\r\n        sanitized[style] = styles[style];\r\n      }\r\n    }\r\n    return sanitized;\r\n  }\r\n\r\n  private _group(styles: IStyle): IGroupedStyles {\r\n    const grouped: IGroupedStyles = {};\r\n    // tslint:disable-next-line:forin\r\n    for (const style in styles) {\r\n      const allowed = this._allowed[style];\r\n      if (!grouped.hasOwnProperty(allowed.selector)) {\r\n        grouped[allowed.selector] = {};\r\n      }\r\n      grouped[allowed.selector][allowed.property] = styles[style];\r\n    }\r\n    return grouped;\r\n  }\r\n\r\n  private _getStyleString(styles: IStyles[]): string[] {\r\n    let groupedStyles: IGroupedStyles;\r\n    let styled: IStyle;\r\n    let tag: string;\r\n    const templates: string[] = [`body { display: block; }`];\r\n    styled = this._filter(styles);\r\n    styled = this._sanitize(styled);\r\n    groupedStyles = this._group(styled);\r\n    // tslint:disable-next-line:forin\r\n    for (tag in groupedStyles) {\r\n      const tagStyle = Styler._getTagStyles(groupedStyles[tag]);\r\n      templates.push(`${tag} { ${tagStyle} }`);\r\n    }\r\n    return templates;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\translator\\Translator.ts":{"language":"typescript","mutants":[{"id":"2295","location":{"end":{"column":4,"line":45},"start":{"column":31,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2296","location":{"end":{"column":6,"line":44},"start":{"column":18,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2298","location":{"end":{"column":8,"line":43},"start":{"column":18,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2297","location":{"end":{"column":19,"line":30},"start":{"column":14,"line":30}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"2300","location":{"end":{"column":38,"line":34},"start":{"column":16,"line":34}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2301","location":{"end":{"column":38,"line":35},"start":{"column":16,"line":35}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2299","location":{"end":{"column":38,"line":33},"start":{"column":16,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2302","location":{"end":{"column":38,"line":36},"start":{"column":16,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2303","location":{"end":{"column":38,"line":37},"start":{"column":16,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2304","location":{"end":{"column":38,"line":38},"start":{"column":16,"line":38}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2305","location":{"end":{"column":38,"line":39},"start":{"column":16,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2308","location":{"end":{"column":38,"line":42},"start":{"column":16,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2306","location":{"end":{"column":38,"line":40},"start":{"column":16,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2307","location":{"end":{"column":38,"line":41},"start":{"column":16,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2309","location":{"end":{"column":4,"line":60},"start":{"column":40,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2310","location":{"end":{"column":6,"line":53},"start":{"column":9,"line":50}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2311","location":{"end":{"column":80,"line":51},"start":{"column":58,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2312","location":{"end":{"column":6,"line":55},"start":{"column":17,"line":53}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2314","location":{"end":{"column":73,"line":59},"start":{"column":56,"line":59}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2313","location":{"end":{"column":83,"line":58},"start":{"column":81,"line":58}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"2315","location":{"end":{"column":4,"line":64},"start":{"column":42,"line":62}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import i18next from 'i18next';\nimport { BrowserLocalStorage } from '../../../../shared/services/storage/BrowserLocalStorage';\n// @ts-ignore\nimport cy_GB from '../../../../translations/json/cy_GB.json';\n// @ts-ignore\nimport da_DK from '../../../../translations/json/da_DK.json';\n// @ts-ignore\nimport de_DE from '../../../../translations/json/de_DE.json';\n// @ts-ignore\nimport en_GB from '../../../../translations/json/en_GB.json';\n// @ts-ignore\nimport en_US from '../../../../translations/json/en_US.json';\n// @ts-ignore\nimport es_ES from '../../../../translations/json/es_ES.json';\n// @ts-ignore\nimport fr_FR from '../../../../translations/json/fr_FR.json';\n// @ts-ignore\nimport nl_NL from '../../../../translations/json/nl_NL.json';\n// @ts-ignore\nimport no_NO from '../../../../translations/json/no_NO.json';\n// @ts-ignore\nimport sv_SE from '../../../../translations/json/sv_SE.json';\nimport { Container } from 'typedi';\n\nexport class Translator {\n  private _storage: BrowserLocalStorage = Container.get(BrowserLocalStorage);\n\n  constructor(locale: string) {\n    i18next.init({\n      debug: false,\n      lng: locale,\n      resources: {\n        cy_GB: { translation: cy_GB },\n        da_DK: { translation: da_DK },\n        de_DE: { translation: de_DE },\n        en_GB: { translation: en_GB },\n        en_US: { translation: en_US },\n        es_ES: { translation: es_ES },\n        fr_FR: { translation: fr_FR },\n        nl_NL: { translation: nl_NL },\n        no_NO: { translation: no_NO },\n        sv_SE: { translation: sv_SE }\n      }\n    });\n  }\n\n  public translate = (text: string) => {\n    let json: object;\n\n    try {\n      const translations: string = this._storage.getItem('merchantTranslations');\n      json = translations ? JSON.parse(translations) : {};\n    } catch (e) {\n      json = {};\n    }\n\n    // @ts-ignore\n    const translation: string = Object.keys(json).includes(text) ? json[text] : '';\n    return translation ? translation : i18next.t(text, { content: text });\n  };\n\n  changeLanguage(language: string): void {\n    i18next.changeLanguage(language);\n  }\n}\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\utils\\Utils.ts":{"language":"typescript","mutants":[{"id":"2316","location":{"end":{"column":4,"line":4},"start":{"column":58,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2317","location":{"end":{"column":48,"line":3},"start":{"column":12,"line":3}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2318","location":{"end":{"column":48,"line":3},"start":{"column":12,"line":3}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2319","location":{"end":{"column":48,"line":3},"start":{"column":12,"line":3}},"mutatorName":"EqualityOperator","replacement":"Array.from(array).indexOf(item) > 0","status":"Survived"},{"id":"2320","location":{"end":{"column":48,"line":3},"start":{"column":12,"line":3}},"mutatorName":"EqualityOperator","replacement":"Array.from(array).indexOf(item) < 0","status":"Survived"},{"id":"2321","location":{"end":{"column":4,"line":19},"start":{"column":17,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2324","location":{"end":{"column":17,"line":14},"start":{"column":11,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2323","location":{"end":{"column":17,"line":14},"start":{"column":11,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2322","location":{"end":{"column":6,"line":17},"start":{"column":31,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2325","location":{"end":{"column":8,"line":16},"start":{"column":19,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2326","location":{"end":{"column":26,"line":18},"start":{"column":12,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2327","location":{"end":{"column":26,"line":18},"start":{"column":12,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2328","location":{"end":{"column":26,"line":18},"start":{"column":12,"line":18}},"mutatorName":"LogicalOperator","replacement":"result && null","status":"Survived"},{"id":"2329","location":{"end":{"column":4,"line":23},"start":{"column":84,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2331","location":{"end":{"column":67,"line":22},"start":{"column":50,"line":22}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2330","location":{"end":{"column":77,"line":22},"start":{"column":24,"line":22}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2332","location":{"end":{"column":4,"line":27},"start":{"column":114,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2333","location":{"end":{"column":75,"line":26},"start":{"column":25,"line":26}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2334","location":{"end":{"column":4,"line":50},"start":{"column":119,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2335","location":{"end":{"column":6,"line":49},"start":{"column":45,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2336","location":{"end":{"column":48,"line":31},"start":{"column":23,"line":31}},"mutatorName":"ArithmeticOperator","replacement":"Date.now() - retryTimeout","status":"Survived"},{"id":"2337","location":{"end":{"column":8,"line":46},"start":{"column":26,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2338","location":{"end":{"column":48,"line":35},"start":{"column":13,"line":35}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2339","location":{"end":{"column":48,"line":35},"start":{"column":13,"line":35}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2340","location":{"end":{"column":48,"line":35},"start":{"column":13,"line":35}},"mutatorName":"LogicalOperator","replacement":"retries > 0 || Date.now() < endtime","status":"Survived"},{"id":"2341","location":{"end":{"column":24,"line":35},"start":{"column":13,"line":35}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2342","location":{"end":{"column":24,"line":35},"start":{"column":13,"line":35}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2343","location":{"end":{"column":24,"line":35},"start":{"column":13,"line":35}},"mutatorName":"EqualityOperator","replacement":"retries >= 0","status":"Survived"},{"id":"2344","location":{"end":{"column":24,"line":35},"start":{"column":13,"line":35}},"mutatorName":"EqualityOperator","replacement":"retries <= 0","status":"Survived"},{"id":"2345","location":{"end":{"column":48,"line":35},"start":{"column":28,"line":35}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2346","location":{"end":{"column":48,"line":35},"start":{"column":28,"line":35}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2347","location":{"end":{"column":48,"line":35},"start":{"column":28,"line":35}},"mutatorName":"EqualityOperator","replacement":"Date.now() <= endtime","status":"Survived"},{"id":"2348","location":{"end":{"column":48,"line":35},"start":{"column":28,"line":35}},"mutatorName":"EqualityOperator","replacement":"Date.now() >= endtime","status":"Survived"},{"id":"2349","location":{"end":{"column":10,"line":43},"start":{"column":50,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2351","location":{"end":{"column":24,"line":39},"start":{"column":15,"line":39}},"mutatorName":"UpdateOperator","replacement":"retries++","status":"Survived"},{"id":"2350","location":{"end":{"column":14,"line":42},"start":{"column":25,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2352","location":{"end":{"column":41,"line":41},"start":{"column":26,"line":41}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2353","location":{"end":{"column":10,"line":45},"start":{"column":16,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2354","location":{"end":{"column":4,"line":59},"start":{"column":56,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2355","location":{"end":{"column":56,"line":53},"start":{"column":9,"line":53}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2356","location":{"end":{"column":56,"line":53},"start":{"column":9,"line":53}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2357","location":{"end":{"column":56,"line":53},"start":{"column":9,"line":53}},"mutatorName":"LogicalOperator","replacement":"typeof regex === 'undefined' && !Boolean(regex)","status":"Survived"},{"id":"2359","location":{"end":{"column":37,"line":53},"start":{"column":9,"line":53}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2358","location":{"end":{"column":37,"line":53},"start":{"column":9,"line":53}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2360","location":{"end":{"column":37,"line":53},"start":{"column":9,"line":53}},"mutatorName":"EqualityOperator","replacement":"typeof regex !== 'undefined'","status":"Survived"},{"id":"2361","location":{"end":{"column":37,"line":53},"start":{"column":26,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2362","location":{"end":{"column":56,"line":53},"start":{"column":41,"line":53}},"mutatorName":"BooleanLiteral","replacement":"Boolean(regex)","status":"Survived"},{"id":"2364","location":{"end":{"column":38,"line":55},"start":{"column":36,"line":55}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"2363","location":{"end":{"column":6,"line":56},"start":{"column":58,"line":53}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2365","location":{"end":{"column":6,"line":58},"start":{"column":12,"line":56}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2367","location":{"end":{"column":92,"line":61},"start":{"column":41,"line":61}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2366","location":{"end":{"column":38,"line":57},"start":{"column":36,"line":57}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"2368","location":{"end":{"column":92,"line":61},"start":{"column":62,"line":61}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2370","location":{"end":{"column":92,"line":61},"start":{"column":62,"line":61}},"mutatorName":"LogicalOperator","replacement":"array || array.slice(-1).pop()","status":"Survived"},{"id":"2369","location":{"end":{"column":92,"line":61},"start":{"column":62,"line":61}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2371","location":{"end":{"column":85,"line":61},"start":{"column":83,"line":61}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"2372","location":{"end":{"column":4,"line":76},"start":{"column":82,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2373","location":{"end":{"column":6,"line":75},"start":{"column":41,"line":65}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2374","location":{"end":{"column":46,"line":67},"start":{"column":11,"line":67}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2375","location":{"end":{"column":46,"line":67},"start":{"column":11,"line":67}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2376","location":{"end":{"column":34,"line":67},"start":{"column":25,"line":67}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2377","location":{"end":{"column":33,"line":67},"start":{"column":26,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2378","location":{"end":{"column":8,"line":70},"start":{"column":48,"line":67}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2379","location":{"end":{"column":33,"line":70},"start":{"column":18,"line":70}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2380","location":{"end":{"column":33,"line":70},"start":{"column":18,"line":70}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2381","location":{"end":{"column":33,"line":70},"start":{"column":18,"line":70}},"mutatorName":"EqualityOperator","replacement":"value !== false","status":"Survived"},{"id":"2382","location":{"end":{"column":33,"line":70},"start":{"column":28,"line":70}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"2383","location":{"end":{"column":8,"line":72},"start":{"column":35,"line":70}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2384","location":{"end":{"column":8,"line":74},"start":{"column":14,"line":72}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"export class Utils {\r\n  public static inArray<T>(array: ArrayLike<T>, item: T) {\r\n    return Array.from(array).indexOf(item) >= 0;\r\n  }\r\n\r\n  public static forEachBreak<inputType, returnType>(\r\n    iterable: ArrayLike<inputType>,\r\n    callback: (item: inputType) => returnType\r\n  ): returnType {\r\n    let result: returnType = null;\r\n    // tslint:disable-next-line:forin\r\n    for (const i in iterable) {\r\n      result = callback(iterable[i]);\r\n      if (result) {\r\n        break;\r\n      }\r\n    }\r\n    return result || null;\r\n  }\r\n\r\n  public static timeoutPromise(timeout: number, err = new Error()): Promise<never> {\r\n    return new Promise((_, reject) => setTimeout(() => reject(err), timeout));\r\n  }\r\n\r\n  public static promiseWithTimeout<T>(promissory: () => Promise<T>, timeout = 10, err = new Error()): Promise<T> {\r\n    return Promise.race([promissory(), Utils.timeoutPromise(timeout, err)]);\r\n  }\r\n\r\n  public static retryPromise<T>(promissory: () => Promise<T>, delay = 0, retries = 5, retryTimeout = 100): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n      const endtime = Date.now() + retryTimeout;\r\n      let error: Error;\r\n\r\n      function attempt() {\r\n        if (retries > 0 && Date.now() < endtime) {\r\n          promissory()\r\n            .then(resolve)\r\n            .catch(e => {\r\n              retries--;\r\n              error = e;\r\n              setTimeout(() => attempt(), delay);\r\n            });\r\n        } else {\r\n          reject(error);\r\n        }\r\n      }\r\n\r\n      attempt();\r\n    });\r\n  }\r\n\r\n  public static stripChars(string: string, regex: any) {\r\n    if (typeof regex === 'undefined' || !Boolean(regex)) {\r\n      regex = /[\\D+]/g;\r\n      return string.replace(regex, '');\r\n    } else {\r\n      return string.replace(regex, '');\r\n    }\r\n  }\r\n\r\n  public static getLastElementOfArray = (array: number[]) => array && array.slice(-1).pop();\r\n\r\n  public static setElementAttributes(attributes: any, element: HTMLInputElement) {\r\n    // tslint:disable-next-line: forin\r\n    for (const attribute in attributes) {\r\n      const value = attributes[attribute];\r\n      if (Utils.inArray(['value'], attribute)) {\r\n        // @ts-ignore\r\n        element[attribute] = value;\r\n      } else if (value === false) {\r\n        element.removeAttribute(attribute);\r\n      } else {\r\n        element.setAttribute(attribute, value);\r\n      }\r\n    }\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\uuid\\Uuid.ts":{"language":"typescript","mutants":[{"id":"2386","location":{"end":{"column":4,"line":11},"start":{"column":41,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2385","location":{"end":{"column":4,"line":4},"start":{"column":27,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2387","location":{"end":{"column":47,"line":8},"start":{"column":13,"line":8}},"mutatorName":"ArithmeticOperator","replacement":"[1e7] + -1e3 + -4e3 + -8e3 - -1e11","status":"Survived"},{"id":"2390","location":{"end":{"column":25,"line":8},"start":{"column":13,"line":8}},"mutatorName":"ArithmeticOperator","replacement":"[1e7] - -1e3","status":"Survived"},{"id":"2389","location":{"end":{"column":32,"line":8},"start":{"column":13,"line":8}},"mutatorName":"ArithmeticOperator","replacement":"[1e7] + -1e3 - -4e3","status":"Survived"},{"id":"2388","location":{"end":{"column":39,"line":8},"start":{"column":13,"line":8}},"mutatorName":"ArithmeticOperator","replacement":"[1e7] + -1e3 + -4e3 - -8e3","status":"Survived"},{"id":"2392","location":{"end":{"column":25,"line":8},"start":{"column":21,"line":8}},"mutatorName":"UnaryOperator","replacement":"+1e3","status":"Survived"},{"id":"2393","location":{"end":{"column":32,"line":8},"start":{"column":28,"line":8}},"mutatorName":"UnaryOperator","replacement":"+4e3","status":"Survived"},{"id":"2391","location":{"end":{"column":18,"line":8},"start":{"column":13,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2396","location":{"end":{"column":90,"line":9},"start":{"column":67,"line":8}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2394","location":{"end":{"column":39,"line":8},"start":{"column":35,"line":8}},"mutatorName":"UnaryOperator","replacement":"+8e3","status":"Survived"},{"id":"2395","location":{"end":{"column":47,"line":8},"start":{"column":42,"line":8}},"mutatorName":"UnaryOperator","replacement":"+1e11","status":"Survived"},{"id":"2397","location":{"end":{"column":73,"line":9},"start":{"column":68,"line":9}},"mutatorName":"ArithmeticOperator","replacement":"c * 4","status":"Survived"},{"id":"2398","location":{"end":{"column":4,"line":20},"start":{"column":41,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2399","location":{"end":{"column":50,"line":14},"start":{"column":12,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2400","location":{"end":{"column":6,"line":19},"start":{"column":83,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2401","location":{"end":{"column":36,"line":15},"start":{"column":18,"line":15}},"mutatorName":"ArithmeticOperator","replacement":"Math.random() / 16","status":"Survived"},{"id":"2402","location":{"end":{"column":26,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2403","location":{"end":{"column":26,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2404","location":{"end":{"column":26,"line":16},"start":{"column":17,"line":16}},"mutatorName":"EqualityOperator","replacement":"c !== 'x'","status":"Survived"},{"id":"2405","location":{"end":{"column":26,"line":16},"start":{"column":23,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export class Uuid {\r\n  static uuidv4(): string {\r\n    return window.crypto ? Uuid.uuidv4crypto() : Uuid.uuidv4random();\r\n  }\r\n\r\n  private static uuidv4crypto(): string {\r\n    // @ts-ignore\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c: any) =>\r\n      (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16)\r\n    );\r\n  }\r\n\r\n  private static uuidv4random(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c: string) => {\r\n      const r = (Math.random() * 16) | 0;\r\n      const v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n\r\n      return v.toString(16);\r\n    });\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\shared\\validation\\Validation.ts":{"language":"typescript","mutants":[{"id":"2406","location":{"end":{"column":58,"line":26},"start":{"column":45,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2407","location":{"end":{"column":4,"line":30},"start":{"column":60,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2408","location":{"end":{"column":4,"line":43},"start":{"column":68,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2409","location":{"end":{"column":15,"line":34},"start":{"column":9,"line":34}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2410","location":{"end":{"column":15,"line":34},"start":{"column":9,"line":34}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2411","location":{"end":{"column":15,"line":34},"start":{"column":9,"line":34}},"mutatorName":"BooleanLiteral","replacement":"valid","status":"Survived"},{"id":"2412","location":{"end":{"column":6,"line":42},"start":{"column":17,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2413","location":{"end":{"column":23,"line":35},"start":{"column":11,"line":35}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2414","location":{"end":{"column":23,"line":35},"start":{"column":11,"line":35}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2415","location":{"end":{"column":8,"line":37},"start":{"column":25,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2416","location":{"end":{"column":33,"line":37},"start":{"column":18,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2417","location":{"end":{"column":33,"line":37},"start":{"column":18,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2418","location":{"end":{"column":8,"line":39},"start":{"column":35,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2419","location":{"end":{"column":8,"line":41},"start":{"column":14,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2420","location":{"end":{"column":4,"line":49},"start":{"column":61,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2421","location":{"end":{"column":4,"line":58},"start":{"column":56,"line":51}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2422","location":{"end":{"column":14,"line":52},"start":{"column":9,"line":52}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2423","location":{"end":{"column":14,"line":52},"start":{"column":9,"line":52}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2424","location":{"end":{"column":6,"line":55},"start":{"column":16,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2425","location":{"end":{"column":51,"line":54},"start":{"column":14,"line":54}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2426","location":{"end":{"column":51,"line":54},"start":{"column":14,"line":54}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2427","location":{"end":{"column":51,"line":54},"start":{"column":14,"line":54}},"mutatorName":"EqualityOperator","replacement":"keyCode !== Validation.ENTER_KEY_CODE","status":"Survived"},{"id":"2429","location":{"end":{"column":19,"line":56},"start":{"column":14,"line":56}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"2428","location":{"end":{"column":6,"line":57},"start":{"column":12,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2430","location":{"end":{"column":4,"line":62},"start":{"column":96,"line":60}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2431","location":{"end":{"column":4,"line":66},"start":{"column":118,"line":64}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2432","location":{"end":{"column":4,"line":72},"start":{"column":74,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2433","location":{"end":{"column":4,"line":79},"start":{"column":74,"line":74}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2434","location":{"end":{"column":6,"line":78},"start":{"column":12,"line":75}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2435","location":{"end":{"column":56,"line":83},"start":{"column":51,"line":83}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2436","location":{"end":{"column":42,"line":84},"start":{"column":40,"line":84}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"2437","location":{"end":{"column":47,"line":87},"start":{"column":40,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2438","location":{"end":{"column":63,"line":89},"start":{"column":51,"line":89}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2439","location":{"end":{"column":46,"line":90},"start":{"column":42,"line":90}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2440","location":{"end":{"column":58,"line":93},"start":{"column":49,"line":93}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2442","location":{"end":{"column":4,"line":99},"start":{"column":47,"line":95}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2443","location":{"end":{"column":22,"line":96},"start":{"column":17,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2441","location":{"end":{"column":67,"line":94},"start":{"column":53,"line":94}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2444","location":{"end":{"column":33,"line":97},"start":{"column":21,"line":97}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2445","location":{"end":{"column":33,"line":98},"start":{"column":19,"line":98}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2446","location":{"end":{"column":4,"line":114},"start":{"column":98,"line":101}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2447","location":{"end":{"column":15,"line":105},"start":{"column":7,"line":103}},"mutatorName":"ConditionalExpression","replacement":"case Validation.BACKEND_ERROR_FIELDS_NAMES.cardNumber:","status":"Survived"},{"id":"2448","location":{"end":{"column":15,"line":108},"start":{"column":7,"line":106}},"mutatorName":"ConditionalExpression","replacement":"case Validation.BACKEND_ERROR_FIELDS_NAMES.expirationDate:","status":"Survived"},{"id":"2449","location":{"end":{"column":15,"line":111},"start":{"column":7,"line":109}},"mutatorName":"ConditionalExpression","replacement":"case Validation.BACKEND_ERROR_FIELDS_NAMES.securityCode:","status":"Survived"},{"id":"2451","location":{"end":{"column":13,"line":127},"start":{"column":9,"line":127}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2450","location":{"end":{"column":4,"line":136},"start":{"column":14,"line":124}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2452","location":{"end":{"column":13,"line":130},"start":{"column":9,"line":130}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2453","location":{"end":{"column":81,"line":132},"start":{"column":7,"line":132}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2454","location":{"end":{"column":81,"line":132},"start":{"column":7,"line":132}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2455","location":{"end":{"column":81,"line":132},"start":{"column":7,"line":132}},"mutatorName":"LogicalOperator","replacement":"fieldsToSubmit.includes(Validation.SECURITY_CODE_FIELD_NAME) || !isPanPiba","status":"Survived"},{"id":"2456","location":{"end":{"column":81,"line":132},"start":{"column":71,"line":132}},"mutatorName":"BooleanLiteral","replacement":"isPanPiba","status":"Survived"},{"id":"2457","location":{"end":{"column":15,"line":134},"start":{"column":11,"line":134}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2458","location":{"end":{"column":66,"line":135},"start":{"column":12,"line":135}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2459","location":{"end":{"column":66,"line":135},"start":{"column":12,"line":135}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2460","location":{"end":{"column":66,"line":135},"start":{"column":12,"line":135}},"mutatorName":"LogicalOperator","replacement":"isPanValid && isExpiryDateValid || isSecurityCodeValid","status":"Survived"},{"id":"2462","location":{"end":{"column":43,"line":135},"start":{"column":12,"line":135}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2461","location":{"end":{"column":43,"line":135},"start":{"column":12,"line":135}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2463","location":{"end":{"column":43,"line":135},"start":{"column":12,"line":135}},"mutatorName":"LogicalOperator","replacement":"isPanValid || isExpiryDateValid","status":"Survived"},{"id":"2464","location":{"end":{"column":4,"line":158},"start":{"column":17,"line":154}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2465","location":{"end":{"column":4,"line":164},"start":{"column":104,"line":160}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2466","location":{"end":{"column":6,"line":163},"start":{"column":75,"line":161}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2467","location":{"end":{"column":4,"line":172},"start":{"column":38,"line":166}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2468","location":{"end":{"column":6,"line":170},"start":{"column":47,"line":167}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2469","location":{"end":{"column":51,"line":171},"start":{"column":47,"line":171}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2470","location":{"end":{"column":4,"line":179},"start":{"column":28,"line":174}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2471","location":{"end":{"column":6,"line":177},"start":{"column":47,"line":175}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2473","location":{"end":{"column":4,"line":201},"start":{"column":41,"line":191}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2474","location":{"end":{"column":28,"line":194},"start":{"column":9,"line":194}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2472","location":{"end":{"column":51,"line":178},"start":{"column":47,"line":178}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2475","location":{"end":{"column":28,"line":194},"start":{"column":9,"line":194}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2476","location":{"end":{"column":6,"line":196},"start":{"column":30,"line":194}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2477","location":{"end":{"column":6,"line":200},"start":{"column":12,"line":197}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2478","location":{"end":{"column":4,"line":218},"start":{"column":46,"line":203}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2479","location":{"end":{"column":6,"line":208},"start":{"column":47,"line":205}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2480","location":{"end":{"column":59,"line":206},"start":{"column":13,"line":206}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2481","location":{"end":{"column":103,"line":212},"start":{"column":9,"line":212}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2483","location":{"end":{"column":102,"line":212},"start":{"column":24,"line":212}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2482","location":{"end":{"column":103,"line":212},"start":{"column":9,"line":212}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2484","location":{"end":{"column":6,"line":215},"start":{"column":105,"line":212}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2485","location":{"end":{"column":49,"line":217},"start":{"column":12,"line":217}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2486","location":{"end":{"column":4,"line":243},"start":{"column":57,"line":220}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2487","location":{"end":{"column":34,"line":223},"start":{"column":31,"line":223}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2489","location":{"end":{"column":35,"line":228},"start":{"column":32,"line":228}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2488","location":{"end":{"column":48,"line":227},"start":{"column":37,"line":227}},"mutatorName":"ArithmeticOperator","replacement":"start + end","status":"Survived"},{"id":"2490","location":{"end":{"column":108,"line":230},"start":{"column":38,"line":230}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2492","location":{"end":{"column":108,"line":230},"start":{"column":38,"line":230}},"mutatorName":"EqualityOperator","replacement":"element.value.charAt(lengthFormatted - cursorDoubleSkip) !== dateSlash","status":"Survived"},{"id":"2493","location":{"end":{"column":93,"line":230},"start":{"column":59,"line":230}},"mutatorName":"ArithmeticOperator","replacement":"lengthFormatted + cursorDoubleSkip","status":"Survived"},{"id":"2491","location":{"end":{"column":108,"line":230},"start":{"column":38,"line":230}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2495","location":{"end":{"column":35,"line":232},"start":{"column":9,"line":232}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2494","location":{"end":{"column":35,"line":232},"start":{"column":9,"line":232}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2496","location":{"end":{"column":6,"line":234},"start":{"column":37,"line":232}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2497","location":{"end":{"column":45,"line":234},"start":{"column":16,"line":234}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2498","location":{"end":{"column":45,"line":234},"start":{"column":16,"line":234}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2500","location":{"end":{"column":57,"line":235},"start":{"column":33,"line":235}},"mutatorName":"ArithmeticOperator","replacement":"start + cursorSingleSkip","status":"Survived"},{"id":"2499","location":{"end":{"column":6,"line":236},"start":{"column":47,"line":234}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2501","location":{"end":{"column":81,"line":235},"start":{"column":59,"line":235}},"mutatorName":"ArithmeticOperator","replacement":"end + cursorSingleSkip","status":"Survived"},{"id":"2502","location":{"end":{"column":112,"line":236},"start":{"column":16,"line":236}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2503","location":{"end":{"column":112,"line":236},"start":{"column":16,"line":236}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2505","location":{"end":{"column":111,"line":236},"start":{"column":36,"line":236}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2504","location":{"end":{"column":112,"line":236},"start":{"column":16,"line":236}},"mutatorName":"LogicalOperator","replacement":"isLastCharSlash && element.value.charAt(end) === spaceInPan && selectionLength === noSelection","status":"Survived"},{"id":"2506","location":{"end":{"column":111,"line":236},"start":{"column":36,"line":236}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2508","location":{"end":{"column":76,"line":236},"start":{"column":36,"line":236}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2507","location":{"end":{"column":111,"line":236},"start":{"column":36,"line":236}},"mutatorName":"LogicalOperator","replacement":"element.value.charAt(end) === spaceInPan || selectionLength === noSelection","status":"Survived"},{"id":"2509","location":{"end":{"column":76,"line":236},"start":{"column":36,"line":236}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2511","location":{"end":{"column":111,"line":236},"start":{"column":80,"line":236}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2510","location":{"end":{"column":76,"line":236},"start":{"column":36,"line":236}},"mutatorName":"EqualityOperator","replacement":"element.value.charAt(end) !== spaceInPan","status":"Survived"},{"id":"2512","location":{"end":{"column":111,"line":236},"start":{"column":80,"line":236}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2513","location":{"end":{"column":111,"line":236},"start":{"column":80,"line":236}},"mutatorName":"EqualityOperator","replacement":"selectionLength !== noSelection","status":"Survived"},{"id":"2514","location":{"end":{"column":6,"line":238},"start":{"column":114,"line":236}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2515","location":{"end":{"column":57,"line":237},"start":{"column":33,"line":237}},"mutatorName":"ArithmeticOperator","replacement":"start - cursorDoubleSkip","status":"Survived"},{"id":"2516","location":{"end":{"column":81,"line":237},"start":{"column":59,"line":237}},"mutatorName":"ArithmeticOperator","replacement":"end - cursorDoubleSkip","status":"Survived"},{"id":"2517","location":{"end":{"column":47,"line":238},"start":{"column":16,"line":238}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2519","location":{"end":{"column":47,"line":238},"start":{"column":16,"line":238}},"mutatorName":"EqualityOperator","replacement":"selectionLength !== noSelection","status":"Survived"},{"id":"2518","location":{"end":{"column":47,"line":238},"start":{"column":16,"line":238}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2520","location":{"end":{"column":6,"line":240},"start":{"column":49,"line":238}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2521","location":{"end":{"column":57,"line":239},"start":{"column":33,"line":239}},"mutatorName":"ArithmeticOperator","replacement":"start - cursorSingleSkip","status":"Survived"},{"id":"2522","location":{"end":{"column":81,"line":239},"start":{"column":59,"line":239}},"mutatorName":"ArithmeticOperator","replacement":"end - cursorSingleSkip","status":"Survived"},{"id":"2523","location":{"end":{"column":6,"line":242},"start":{"column":12,"line":240}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2524","location":{"end":{"column":57,"line":241},"start":{"column":33,"line":241}},"mutatorName":"ArithmeticOperator","replacement":"start - cursorSingleSkip","status":"Survived"},{"id":"2525","location":{"end":{"column":83,"line":241},"start":{"column":59,"line":241}},"mutatorName":"ArithmeticOperator","replacement":"start - cursorSingleSkip","status":"Survived"},{"id":"2526","location":{"end":{"column":4,"line":253},"start":{"column":95,"line":245}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2527","location":{"end":{"column":26,"line":247},"start":{"column":9,"line":247}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2528","location":{"end":{"column":26,"line":247},"start":{"column":9,"line":247}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2529","location":{"end":{"column":26,"line":247},"start":{"column":9,"line":247}},"mutatorName":"BooleanLiteral","replacement":"luhnCheck(value)","status":"Survived"},{"id":"2530","location":{"end":{"column":6,"line":250},"start":{"column":28,"line":247}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2531","location":{"end":{"column":6,"line":252},"start":{"column":12,"line":250}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2533","location":{"end":{"column":4,"line":262},"start":{"column":78,"line":259}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2532","location":{"end":{"column":4,"line":257},"start":{"column":61,"line":255}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2535","location":{"end":{"column":100,"line":266},"start":{"column":9,"line":266}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2534","location":{"end":{"column":4,"line":276},"start":{"column":112,"line":264}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2536","location":{"end":{"column":100,"line":266},"start":{"column":9,"line":266}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2537","location":{"end":{"column":100,"line":266},"start":{"column":9,"line":266}},"mutatorName":"LogicalOperator","replacement":"message && messageElement || messageElement.innerText !== VALIDATION_ERROR_PATTERN_MISMATCH","status":"Survived"},{"id":"2538","location":{"end":{"column":34,"line":266},"start":{"column":9,"line":266}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2539","location":{"end":{"column":34,"line":266},"start":{"column":9,"line":266}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2540","location":{"end":{"column":34,"line":266},"start":{"column":9,"line":266}},"mutatorName":"LogicalOperator","replacement":"message || messageElement","status":"Survived"},{"id":"2541","location":{"end":{"column":100,"line":266},"start":{"column":38,"line":266}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2542","location":{"end":{"column":100,"line":266},"start":{"column":38,"line":266}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2543","location":{"end":{"column":100,"line":266},"start":{"column":38,"line":266}},"mutatorName":"EqualityOperator","replacement":"messageElement.innerText === VALIDATION_ERROR_PATTERN_MISMATCH","status":"Survived"},{"id":"2544","location":{"end":{"column":6,"line":271},"start":{"column":102,"line":266}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2545","location":{"end":{"column":50,"line":269},"start":{"column":41,"line":269}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2546","location":{"end":{"column":6,"line":275},"start":{"column":12,"line":271}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2547","location":{"end":{"column":49,"line":273},"start":{"column":41,"line":273}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2548","location":{"end":{"column":4,"line":282},"start":{"column":82,"line":278}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2549","location":{"end":{"column":4,"line":290},"start":{"column":38,"line":284}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2550","location":{"end":{"column":6,"line":288},"start":{"column":47,"line":285}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2552","location":{"end":{"column":4,"line":296},"start":{"column":115,"line":292}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2551","location":{"end":{"column":25,"line":286},"start":{"column":13,"line":286}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2553","location":{"end":{"column":4,"line":301},"start":{"column":17,"line":298}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2554","location":{"end":{"column":4,"line":307},"start":{"column":49,"line":303}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2555","location":{"end":{"column":14,"line":304},"start":{"column":9,"line":304}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2557","location":{"end":{"column":6,"line":306},"start":{"column":16,"line":304}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2556","location":{"end":{"column":14,"line":304},"start":{"column":9,"line":304}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2558","location":{"end":{"column":4,"line":311},"start":{"column":88,"line":309}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2559","location":{"end":{"column":4,"line":320},"start":{"column":36,"line":313}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2560","location":{"end":{"column":4,"line":324},"start":{"column":40,"line":322}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2562","location":{"end":{"column":4,"line":332},"start":{"column":80,"line":330}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2561","location":{"end":{"column":4,"line":328},"start":{"column":54,"line":326}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2563","location":{"end":{"column":4,"line":348},"start":{"column":13,"line":340}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2564","location":{"end":{"column":67,"line":341},"start":{"column":9,"line":341}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2565","location":{"end":{"column":67,"line":341},"start":{"column":9,"line":341}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2567","location":{"end":{"column":45,"line":341},"start":{"column":9,"line":341}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2566","location":{"end":{"column":67,"line":341},"start":{"column":9,"line":341}},"mutatorName":"LogicalOperator","replacement":"messageElement && customErrorMessage || !isCardNumberInput","status":"Survived"},{"id":"2568","location":{"end":{"column":45,"line":341},"start":{"column":9,"line":341}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2569","location":{"end":{"column":45,"line":341},"start":{"column":9,"line":341}},"mutatorName":"LogicalOperator","replacement":"messageElement || customErrorMessage","status":"Survived"},{"id":"2570","location":{"end":{"column":67,"line":341},"start":{"column":49,"line":341}},"mutatorName":"BooleanLiteral","replacement":"isCardNumberInput","status":"Survived"},{"id":"2571","location":{"end":{"column":6,"line":343},"start":{"column":69,"line":341}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2572","location":{"end":{"column":105,"line":343},"start":{"column":16,"line":343}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2573","location":{"end":{"column":105,"line":343},"start":{"column":16,"line":343}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2575","location":{"end":{"column":73,"line":343},"start":{"column":16,"line":343}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2574","location":{"end":{"column":105,"line":343},"start":{"column":16,"line":343}},"mutatorName":"LogicalOperator","replacement":"messageElement && inputElement.value && isCardNumberInput || !inputElement.validity.valid","status":"Survived"},{"id":"2576","location":{"end":{"column":73,"line":343},"start":{"column":16,"line":343}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2577","location":{"end":{"column":73,"line":343},"start":{"column":16,"line":343}},"mutatorName":"LogicalOperator","replacement":"messageElement && inputElement.value || isCardNumberInput","status":"Survived"},{"id":"2578","location":{"end":{"column":52,"line":343},"start":{"column":16,"line":343}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2579","location":{"end":{"column":52,"line":343},"start":{"column":16,"line":343}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2580","location":{"end":{"column":52,"line":343},"start":{"column":16,"line":343}},"mutatorName":"LogicalOperator","replacement":"messageElement || inputElement.value","status":"Survived"},{"id":"2581","location":{"end":{"column":105,"line":343},"start":{"column":77,"line":343}},"mutatorName":"BooleanLiteral","replacement":"inputElement.validity.valid","status":"Survived"},{"id":"2582","location":{"end":{"column":6,"line":345},"start":{"column":107,"line":343}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2583","location":{"end":{"column":6,"line":347},"start":{"column":12,"line":345}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2584","location":{"end":{"column":4,"line":352},"start":{"column":43,"line":350}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2585","location":{"end":{"column":54,"line":351},"start":{"column":12,"line":351}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2586","location":{"end":{"column":54,"line":351},"start":{"column":12,"line":351}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2587","location":{"end":{"column":54,"line":351},"start":{"column":12,"line":351}},"mutatorName":"LogicalOperator","replacement":"this._isPaymentReady || this._formValidity","status":"Survived"},{"id":"2588","location":{"end":{"column":4,"line":356},"start":{"column":45,"line":354}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2589","location":{"end":{"column":66,"line":355},"start":{"column":12,"line":355}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2590","location":{"end":{"column":66,"line":355},"start":{"column":12,"line":355}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2591","location":{"end":{"column":66,"line":355},"start":{"column":12,"line":355}},"mutatorName":"EqualityOperator","replacement":"this._currentKeyCode !== Validation.BACKSPACE_KEY_CODE","status":"Survived"},{"id":"2592","location":{"end":{"column":4,"line":360},"start":{"column":42,"line":358}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2593","location":{"end":{"column":63,"line":359},"start":{"column":12,"line":359}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2595","location":{"end":{"column":63,"line":359},"start":{"column":12,"line":359}},"mutatorName":"EqualityOperator","replacement":"this._currentKeyCode !== Validation.DELETE_KEY_CODE","status":"Survived"},{"id":"2594","location":{"end":{"column":63,"line":359},"start":{"column":12,"line":359}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2596","location":{"end":{"column":4,"line":372},"start":{"column":113,"line":362}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2597","location":{"end":{"column":113,"line":363},"start":{"column":40,"line":363}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2598","location":{"end":{"column":113,"line":363},"start":{"column":40,"line":363}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2599","location":{"end":{"column":113,"line":363},"start":{"column":40,"line":363}},"mutatorName":"EqualityOperator","replacement":"inputElement.getAttribute(Validation.ID_PARAM_NAME) !== CARD_NUMBER_INPUT","status":"Survived"},{"id":"2600","location":{"end":{"column":4,"line":378},"start":{"column":100,"line":374}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2601","location":{"end":{"column":52,"line":376},"start":{"column":44,"line":376}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2602","location":{"end":{"column":53,"line":377},"start":{"column":44,"line":377}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2603","location":{"end":{"column":4,"line":384},"start":{"column":67,"line":380}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2604","location":{"end":{"column":4,"line":409},"start":{"column":5,"line":396}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2605","location":{"end":{"column":18,"line":397},"start":{"column":9,"line":397}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2606","location":{"end":{"column":18,"line":397},"start":{"column":9,"line":397}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2607","location":{"end":{"column":6,"line":400},"start":{"column":20,"line":397}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2608","location":{"end":{"column":32,"line":398},"start":{"column":28,"line":398}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2609","location":{"end":{"column":34,"line":399},"start":{"column":30,"line":399}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2610","location":{"end":{"column":6,"line":408},"start":{"column":12,"line":400}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2611","location":{"end":{"column":8,"line":407},"start":{"column":20,"line":403}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { iinLookup } from '@trustpayments/ts-iin-lookup';\r\nimport { BrandDetailsType } from '@trustpayments/ts-iin-lookup/dist/types';\r\nimport { luhnCheck } from '@trustpayments/ts-luhn-check';\r\nimport { StCodec } from '../../services/st-codec/StCodec.class';\r\nimport { FormState } from '../../models/constants/FormState';\r\nimport { ICard } from '../../models/ICard';\r\nimport { IErrorData } from '../../models/IErrorData';\r\nimport { IFormFieldState } from '../../models/IFormFieldState';\r\nimport { IMessageBusEvent } from '../../models/IMessageBusEvent';\r\nimport { IMessageBusValidateField } from '../../models/IMessageBusValidateField';\r\nimport { IValidation } from '../../models/IValidation';\r\nimport { Frame } from '../frame/Frame';\r\nimport {\r\n  VALIDATION_ERROR,\r\n  VALIDATION_ERROR_FIELD_IS_REQUIRED,\r\n  VALIDATION_ERROR_PATTERN_MISMATCH\r\n} from '../../models/constants/Translations';\r\nimport { MessageBus } from '../message-bus/MessageBus';\r\nimport { CARD_NUMBER_INPUT } from '../../models/constants/Selectors';\r\nimport { Translator } from '../translator/Translator';\r\nimport { Utils } from '../utils/Utils';\r\nimport { Container, Service } from 'typedi';\r\n\r\n@Service()\r\nexport class Validation {\r\n  public static ERROR_FIELD_CLASS: string = 'error-field';\r\n\r\n  public static clearNonDigitsChars(value: string): string {\r\n    return value.replace(Validation.ESCAPE_DIGITS_REGEXP, Validation.CLEAR_VALUE);\r\n  }\r\n\r\n  public static getValidationMessage(state: ValidityState): string {\r\n    const { patternMismatch, valid, valueMissing } = state;\r\n    if (!valid) {\r\n      if (valueMissing) {\r\n        return VALIDATION_ERROR_FIELD_IS_REQUIRED;\r\n      } else if (patternMismatch) {\r\n        return VALIDATION_ERROR_PATTERN_MISMATCH;\r\n      } else {\r\n        return VALIDATION_ERROR;\r\n      }\r\n    }\r\n  }\r\n\r\n  public static isCharNumber(event: KeyboardEvent): boolean {\r\n    const key: string = event.key;\r\n    const regex = new RegExp(Validation.ESCAPE_DIGITS_REGEXP);\r\n    return regex.test(key);\r\n  }\r\n\r\n  public static isEnter(event: KeyboardEvent): boolean {\r\n    if (event) {\r\n      const keyCode: number = event.keyCode;\r\n      return keyCode === Validation.ENTER_KEY_CODE;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static setCustomValidationError(errorContent: string, inputElement: HTMLInputElement) {\r\n    inputElement.setCustomValidity(errorContent);\r\n  }\r\n\r\n  public static addErrorContainer(inputElement: HTMLInputElement, inputTarget: InsertPosition, errorContent: string) {\r\n    inputElement.insertAdjacentHTML(inputTarget, errorContent);\r\n  }\r\n\r\n  public static resetValidationProperties(input: HTMLInputElement): void {\r\n    input.setCustomValidity(Validation.CLEAR_VALUE);\r\n    input.classList.remove(Validation.ERROR_FIELD_CLASS);\r\n    input.nextSibling.textContent = Validation.CLEAR_VALUE;\r\n  }\r\n\r\n  public static returnInputAndErrorContainerPair(item: HTMLInputElement) {\r\n    return {\r\n      inputElement: document.getElementById(item.id) as HTMLInputElement,\r\n      messageElement: document.getElementById(item.id).nextSibling as HTMLElement\r\n    };\r\n  }\r\n\r\n  private static BACKSPACE_KEY_CODE: number = 8;\r\n  private static CARD_NUMBER_DEFAULT_LENGTH: number = 16;\r\n  private static CARD_NUMBER_FIELD_NAME: string = 'pan';\r\n  private static CLEAR_VALUE: string = '';\r\n  private static DELETE_KEY_CODE: number = 46;\r\n  private static ENTER_KEY_CODE = 13;\r\n  private static ERROR_CLASS: string = 'error';\r\n  private static ESCAPE_DIGITS_REGEXP = /[^\\d]/g;\r\n  private static EXPIRY_DATE_FIELD_NAME: string = 'expirydate';\r\n  private static ID_PARAM_NAME: string = 'id';\r\n  private static MATCH_CHARS = /[^\\d]/g;\r\n  private static MATCH_DIGITS = /^[0-9]*$/;\r\n  private static MERCHANT_EXTRA_FIELDS_PREFIX = 'billing';\r\n  private static SECURITY_CODE_FIELD_NAME: string = 'securitycode';\r\n  private static BACKEND_ERROR_FIELDS_NAMES = {\r\n    cardNumber: 'pan',\r\n    expirationDate: 'expirydate',\r\n    securityCode: 'securitycode'\r\n  };\r\n\r\n  private static _setValidateEvent(errordata: string, event: IMessageBusEvent): IMessageBusEvent {\r\n    switch (errordata) {\r\n      case Validation.BACKEND_ERROR_FIELDS_NAMES.cardNumber:\r\n        event.type = MessageBus.EVENTS.VALIDATE_CARD_NUMBER_FIELD;\r\n        break;\r\n      case Validation.BACKEND_ERROR_FIELDS_NAMES.expirationDate:\r\n        event.type = MessageBus.EVENTS.VALIDATE_EXPIRATION_DATE_FIELD;\r\n        break;\r\n      case Validation.BACKEND_ERROR_FIELDS_NAMES.securityCode:\r\n        event.type = MessageBus.EVENTS.VALIDATE_SECURITY_CODE_FIELD;\r\n        break;\r\n    }\r\n    return event;\r\n  }\r\n\r\n  private static _isFormValid(\r\n    formFields: {\r\n      cardNumber: IFormFieldState;\r\n      expirationDate: IFormFieldState;\r\n      securityCode: IFormFieldState;\r\n    },\r\n    fieldsToSubmit: string[],\r\n    isPanPiba: boolean\r\n  ): boolean {\r\n    const isPanValid: boolean = fieldsToSubmit.includes(Validation.CARD_NUMBER_FIELD_NAME)\r\n      ? formFields.cardNumber.validity\r\n      : true;\r\n    const isExpiryDateValid: boolean = fieldsToSubmit.includes(Validation.EXPIRY_DATE_FIELD_NAME)\r\n      ? formFields.expirationDate.validity\r\n      : true;\r\n    const isSecurityCodeValid: boolean =\r\n      fieldsToSubmit.includes(Validation.SECURITY_CODE_FIELD_NAME) && !isPanPiba\r\n        ? formFields.securityCode.validity\r\n        : true;\r\n    return isPanValid && isExpiryDateValid && isSecurityCodeValid;\r\n  }\r\n\r\n  public cardDetails: any;\r\n  public cardNumberValue: string;\r\n  public expirationDateValue: string;\r\n  public securityCodeValue: string;\r\n  public validation: IValidation;\r\n  private _card: ICard;\r\n  private _currentKeyCode: number;\r\n  private _formValidity: boolean;\r\n  private _isPaymentReady: boolean;\r\n  private _matchDigitsRegexp: RegExp;\r\n  private _selectionRangeEnd: number;\r\n  private _selectionRangeStart: number;\r\n  private _translator: Translator;\r\n  private _messageBus: MessageBus;\r\n  private _frame: Frame;\r\n\r\n  constructor() {\r\n    this._messageBus = Container.get(MessageBus);\r\n    this._frame = Container.get(Frame);\r\n    this.init();\r\n  }\r\n\r\n  public backendValidation(inputElement: HTMLInputElement, messageElement: HTMLElement, event: string) {\r\n    this._messageBus.subscribe(event, (data: IMessageBusValidateField) => {\r\n      this.setError(inputElement, messageElement, data);\r\n    });\r\n  }\r\n\r\n  public blockForm(state: FormState) {\r\n    const messageBusEvent: IMessageBusEvent = {\r\n      data: state,\r\n      type: MessageBus.EVENTS_PUBLIC.BLOCK_FORM\r\n    };\r\n    this._messageBus.publish(messageBusEvent, true);\r\n  }\r\n\r\n  public callSubmitEvent() {\r\n    const messageBusEvent: IMessageBusEvent = {\r\n      type: MessageBus.EVENTS_PUBLIC.CALL_SUBMIT_EVENT\r\n    };\r\n    this._messageBus.publish(messageBusEvent, true);\r\n  }\r\n\r\n  public formValidation(\r\n    dataInJwt: boolean,\r\n    fieldsToSubmit: string[],\r\n    formFields: {\r\n      cardNumber: IFormFieldState;\r\n      expirationDate: IFormFieldState;\r\n      securityCode: IFormFieldState;\r\n    },\r\n    isPanPiba: boolean,\r\n    paymentReady: boolean\r\n  ): { card: ICard; validity: boolean } {\r\n    this._setValidationResult(dataInJwt, fieldsToSubmit, formFields, isPanPiba, paymentReady);\r\n    const isFormReadyToSubmit: boolean = this._isFormReadyToSubmit();\r\n    if (isFormReadyToSubmit) {\r\n      this.blockForm(FormState.BLOCKED);\r\n    }\r\n    return {\r\n      card: this._card,\r\n      validity: isFormReadyToSubmit\r\n    };\r\n  }\r\n\r\n  public getErrorData(errorData: IErrorData) {\r\n    const { errordata, errormessage } = StCodec.getErrorData(errorData);\r\n    const validationEvent: IMessageBusEvent = {\r\n      data: { field: errordata[0], message: errormessage },\r\n      type: Validation.CLEAR_VALUE\r\n    };\r\n\r\n    this._broadcastFormFieldError(errordata[0], validationEvent);\r\n\r\n    if (errordata.find((element: string) => element.includes(Validation.MERCHANT_EXTRA_FIELDS_PREFIX))) {\r\n      validationEvent.type = MessageBus.EVENTS.VALIDATE_MERCHANT_FIELD;\r\n      this._messageBus.publish(validationEvent);\r\n    }\r\n\r\n    return { field: errordata[0], errormessage };\r\n  }\r\n\r\n  public keepCursorsPosition(element: HTMLInputElement) {\r\n    const cursorSingleSkip: number = 1;\r\n    const cursorDoubleSkip: number = 2;\r\n    const dateSlash: string = '/';\r\n    const end: number = this._selectionRangeEnd;\r\n    const start: number = this._selectionRangeStart;\r\n    const noSelection: number = 0;\r\n    const selectionLength: number = start - end;\r\n    const spaceInPan: string = ' ';\r\n    const lengthFormatted: number = element.value.length;\r\n    const isLastCharSlash: boolean = element.value.charAt(lengthFormatted - cursorDoubleSkip) === dateSlash;\r\n\r\n    if (this._isPressedKeyDelete()) {\r\n      element.setSelectionRange(start, end);\r\n    } else if (this._isPressedKeyBackspace()) {\r\n      element.setSelectionRange(start - cursorSingleSkip, end - cursorSingleSkip);\r\n    } else if (isLastCharSlash || (element.value.charAt(end) === spaceInPan && selectionLength === noSelection)) {\r\n      element.setSelectionRange(start + cursorDoubleSkip, end + cursorDoubleSkip);\r\n    } else if (selectionLength === noSelection) {\r\n      element.setSelectionRange(start + cursorSingleSkip, end + cursorSingleSkip);\r\n    } else {\r\n      element.setSelectionRange(start + cursorSingleSkip, start + cursorSingleSkip);\r\n    }\r\n  }\r\n\r\n  public luhnCheck(field: HTMLInputElement, input: HTMLInputElement, message: HTMLDivElement) {\r\n    const { value } = input;\r\n    if (!luhnCheck(value)) {\r\n      Validation.setCustomValidationError(VALIDATION_ERROR_PATTERN_MISMATCH, field);\r\n      this.validate(input, message, VALIDATION_ERROR_PATTERN_MISMATCH);\r\n    } else {\r\n      Validation.setCustomValidationError(Validation.CLEAR_VALUE, field);\r\n    }\r\n  }\r\n\r\n  public limitLength(value: string, length: number): string {\r\n    return value ? value.substring(0, length) : Validation.CLEAR_VALUE;\r\n  }\r\n\r\n  public removeError(element: HTMLInputElement, errorContainer: HTMLElement) {\r\n    element.classList.remove(Validation.ERROR_CLASS);\r\n    errorContainer.textContent = Validation.CLEAR_VALUE;\r\n  }\r\n\r\n  public setError(inputElement: HTMLInputElement, messageElement: HTMLElement, data: IMessageBusValidateField) {\r\n    const { message } = data;\r\n    if (message && messageElement && messageElement.innerText !== VALIDATION_ERROR_PATTERN_MISMATCH) {\r\n      messageElement.innerText = this._translator.translate(message);\r\n      inputElement.classList.add(Validation.ERROR_FIELD_CLASS);\r\n      messageElement.style.visibility = 'visible';\r\n      inputElement.setCustomValidity(message);\r\n    } else {\r\n      inputElement.classList.remove(Validation.ERROR_FIELD_CLASS);\r\n      messageElement.style.visibility = 'hidden';\r\n      inputElement.setCustomValidity(message);\r\n    }\r\n  }\r\n\r\n  public setOnKeyDownProperties(element: HTMLInputElement, event: KeyboardEvent) {\r\n    this._currentKeyCode = event.keyCode;\r\n    this._selectionRangeStart = element.selectionStart;\r\n    this._selectionRangeEnd = element.selectionEnd;\r\n  }\r\n\r\n  public setFormValidity(state: any) {\r\n    const validationEvent: IMessageBusEvent = {\r\n      data: { ...state },\r\n      type: MessageBus.EVENTS.VALIDATE_FORM\r\n    };\r\n    this._messageBus.publish(validationEvent);\r\n  }\r\n\r\n  public validate(inputElement: HTMLInputElement, messageElement: HTMLElement, customErrorMessage?: string): void {\r\n    this._toggleErrorClass(inputElement);\r\n    this._toggleErrorContainer(inputElement, messageElement);\r\n    this._setMessage(inputElement, messageElement, customErrorMessage);\r\n  }\r\n\r\n  public init() {\r\n    this._matchDigitsRegexp = new RegExp(Validation.MATCH_DIGITS);\r\n    this._translator = new Translator(this._frame.parseUrl().locale);\r\n  }\r\n\r\n  public removeNonDigits(value: string): string {\r\n    if (value) {\r\n      return value.replace(Validation.MATCH_CHARS, Validation.CLEAR_VALUE);\r\n    }\r\n  }\r\n\r\n  public getCardDetails(cardNumber: string = Validation.CLEAR_VALUE): BrandDetailsType {\r\n    return iinLookup.lookup(cardNumber);\r\n  }\r\n\r\n  public cardNumber(value: string) {\r\n    this.cardNumberValue = this.removeNonDigits(value);\r\n    this.cardDetails = this.getCardDetails(this.cardNumberValue);\r\n    const length = this.cardDetails.type\r\n      ? Utils.getLastElementOfArray(this.cardDetails.length)\r\n      : Validation.CARD_NUMBER_DEFAULT_LENGTH;\r\n    this.cardNumberValue = this.limitLength(this.cardNumberValue, length);\r\n  }\r\n\r\n  public expirationDate(value: string) {\r\n    this.expirationDateValue = value ? this.removeNonDigits(value) : Validation.CLEAR_VALUE;\r\n  }\r\n\r\n  public securityCode(value: string, length: number) {\r\n    this.securityCodeValue = value ? this.limitLength(this.removeNonDigits(value), length) : Validation.CLEAR_VALUE;\r\n  }\r\n\r\n  private _broadcastFormFieldError(errordata: string, event: IMessageBusEvent) {\r\n    this._messageBus.publish(Validation._setValidateEvent(errordata, event));\r\n  }\r\n\r\n  private _getTranslation(\r\n    inputElement: HTMLInputElement,\r\n    isCardNumberInput: boolean,\r\n    validityState: string,\r\n    messageElement?: HTMLElement,\r\n    customErrorMessage?: string\r\n  ): string {\r\n    if (messageElement && customErrorMessage && !isCardNumberInput) {\r\n      return this._translator.translate(customErrorMessage);\r\n    } else if (messageElement && inputElement.value && isCardNumberInput && !inputElement.validity.valid) {\r\n      return this._translator.translate(VALIDATION_ERROR_PATTERN_MISMATCH);\r\n    } else {\r\n      return this._translator.translate(validityState);\r\n    }\r\n  }\r\n\r\n  private _isFormReadyToSubmit(): boolean {\r\n    return this._isPaymentReady && this._formValidity;\r\n  }\r\n\r\n  private _isPressedKeyBackspace(): boolean {\r\n    return this._currentKeyCode === Validation.BACKSPACE_KEY_CODE;\r\n  }\r\n\r\n  private _isPressedKeyDelete(): boolean {\r\n    return this._currentKeyCode === Validation.DELETE_KEY_CODE;\r\n  }\r\n\r\n  private _setMessage(inputElement: HTMLInputElement, messageElement: HTMLElement, customErrorMessage?: string) {\r\n    const isCardNumberInput: boolean = inputElement.getAttribute(Validation.ID_PARAM_NAME) === CARD_NUMBER_INPUT;\r\n    const validityState = Validation.getValidationMessage(inputElement.validity);\r\n    messageElement.innerText = this._getTranslation(\r\n      inputElement,\r\n      isCardNumberInput,\r\n      validityState,\r\n      messageElement,\r\n      customErrorMessage\r\n    );\r\n  }\r\n\r\n  private _toggleErrorContainer(inputElement: HTMLInputElement, messageElement: HTMLElement): void {\r\n    inputElement.validity.valid\r\n      ? (messageElement.style.visibility = 'hidden')\r\n      : (messageElement.style.visibility = 'visible');\r\n  }\r\n\r\n  private _toggleErrorClass(inputElement: HTMLInputElement): void {\r\n    inputElement.validity.valid\r\n      ? inputElement.classList.remove(Validation.ERROR_FIELD_CLASS)\r\n      : inputElement.classList.add(Validation.ERROR_FIELD_CLASS);\r\n  }\r\n\r\n  private _setValidationResult(\r\n    dataInJwt: boolean,\r\n    fieldsToSubmit: string[],\r\n    formFields: {\r\n      cardNumber: IFormFieldState;\r\n      expirationDate: IFormFieldState;\r\n      securityCode: IFormFieldState;\r\n    },\r\n    isPanPiba: boolean,\r\n    paymentReady: boolean\r\n  ) {\r\n    if (dataInJwt) {\r\n      this._formValidity = true;\r\n      this._isPaymentReady = true;\r\n    } else {\r\n      this._formValidity = Validation._isFormValid(formFields, fieldsToSubmit, isPanPiba);\r\n      this._isPaymentReady = paymentReady;\r\n      this._card = {\r\n        expirydate: formFields.expirationDate.value,\r\n        pan: formFields.cardNumber.value,\r\n        securitycode: formFields.securityCode.value\r\n      };\r\n    }\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\store\\Store.ts":{"language":"typescript","mutants":[{"id":"2612","location":{"end":{"column":4,"line":23},"start":{"column":53,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2613","location":{"end":{"column":6,"line":22},"start":{"column":54,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2615","location":{"end":{"column":4,"line":27},"start":{"column":22,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2614","location":{"end":{"column":8,"line":21},"start":{"column":41,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2616","location":{"end":{"column":4,"line":31},"start":{"column":60,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2617","location":{"end":{"column":4,"line":35},"start":{"column":61,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2618","location":{"end":{"column":4,"line":47},"start":{"column":45,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2619","location":{"end":{"column":4,"line":51},"start":{"column":35,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { StoreAccessor } from './StoreAccessor';\r\nimport { Observable } from 'rxjs';\r\nimport { IState } from './IState';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { PartialObserver, Unsubscribable } from 'rxjs/src/internal/types';\r\nimport { IMessageBusEvent } from '../models/IMessageBusEvent';\r\nimport { ActionName, IAction } from './IAction';\r\nimport { Store as ReduxStore } from 'redux';\r\n\r\n@Service()\r\nexport class Store {\r\n  private readonly state$: Observable<IState>;\r\n\r\n  constructor(private storeAccessor: StoreAccessor) {\r\n    this.state$ = new Observable<IState>(observer => {\r\n      observer.next(this.store.getState() as IState);\r\n\r\n      return this.store.subscribe(() => {\r\n        observer.next(this.store.getState() as IState);\r\n      });\r\n    }).pipe(shareReplay(1));\r\n  }\r\n\r\n  getState(): IState {\r\n    return this.store.getState();\r\n  }\r\n\r\n  dispatch<T extends ActionName>(action: IAction<T>): void {\r\n    this.store.dispatch(action);\r\n  }\r\n\r\n  select$<T>(selector: (state: IState) => T): Observable<T> {\r\n    return this.state$.pipe(map(selector));\r\n  }\r\n\r\n  subscribe<T>(observer?: PartialObserver<IMessageBusEvent<T>>): Unsubscribable;\r\n\r\n  subscribe<T>(\r\n    next?: (value: IMessageBusEvent<T>) => void,\r\n    error?: (error: any) => void,\r\n    complete?: () => void\r\n  ): Unsubscribable;\r\n\r\n  subscribe(...args: any[]): Unsubscribable {\r\n    return this.state$.subscribe.apply(this.state$, args);\r\n  }\r\n\r\n  private get store(): ReduxStore {\r\n    return this.storeAccessor.getStore();\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\store\\StoreAccessor.ts":{"language":"typescript","mutants":[{"id":"2620","location":{"end":{"column":4,"line":23},"start":{"column":21,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2622","location":{"end":{"column":22,"line":14},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2621","location":{"end":{"column":22,"line":14},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2623","location":{"end":{"column":22,"line":14},"start":{"column":9,"line":14}},"mutatorName":"BooleanLiteral","replacement":"controlFrame","status":"Survived"},{"id":"2624","location":{"end":{"column":6,"line":16},"start":{"column":24,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2625","location":{"end":{"column":52,"line":15},"start":{"column":23,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2627","location":{"end":{"column":30,"line":18},"start":{"column":9,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2626","location":{"end":{"column":30,"line":18},"start":{"column":9,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2628","location":{"end":{"column":30,"line":18},"start":{"column":9,"line":18}},"mutatorName":"BooleanLiteral","replacement":"controlFrame.stStore","status":"Survived"},{"id":"2629","location":{"end":{"column":6,"line":20},"start":{"column":32,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { FrameAccessor } from '../../../shared/services/message-bus/FrameAccessor';\r\nimport { StoreFactory } from './StoreFactory';\r\nimport { Store } from 'redux';\r\nimport { IControlFrameWindow } from '../../../shared/interfaces/IControlFrameWindow';\r\n\r\n@Service()\r\nexport class StoreAccessor {\r\n  constructor(private frameAccessor: FrameAccessor, private storeFactory: StoreFactory) {}\r\n\r\n  getStore(): Store {\r\n    const controlFrame: IControlFrameWindow = this.frameAccessor.getControlFrame();\r\n\r\n    if (!controlFrame) {\r\n      throw new Error('Cannot access control-frame');\r\n    }\r\n\r\n    if (!controlFrame.stStore) {\r\n      controlFrame.stStore = this.storeFactory.createStore();\r\n    }\r\n\r\n    return controlFrame.stStore;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\store\\StoreFactory.ts":{"language":"typescript","mutants":[{"id":"2630","location":{"end":{"column":4,"line":27},"start":{"column":24,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2632","location":{"end":{"column":32,"line":18},"start":{"column":9,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2631","location":{"end":{"column":48,"line":16},"start":{"column":32,"line":16}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2633","location":{"end":{"column":32,"line":18},"start":{"column":9,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2634","location":{"end":{"column":32,"line":18},"start":{"column":9,"line":18}},"mutatorName":"BooleanLiteral","replacement":"environment.production","status":"Survived"},{"id":"2635","location":{"end":{"column":6,"line":20},"start":{"column":34,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2636","location":{"end":{"column":4,"line":34},"start":{"column":37,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2637","location":{"end":{"column":6,"line":33},"start":{"column":28,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2638","location":{"end":{"column":4,"line":48},"start":{"column":40,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2640","location":{"end":{"column":6,"line":47},"start":{"column":47,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2639","location":{"end":{"column":30,"line":37},"start":{"column":19,"line":37}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2641","location":{"end":{"column":10,"line":45},"start":{"column":39,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { applyMiddleware, combineReducers, createStore, Reducer, Store } from 'redux';\r\nimport { configReducer } from './reducers/config/ConfigReducer';\r\nimport { Service } from 'typedi';\r\nimport logger from 'redux-logger';\r\nimport { combineEpics, createEpicMiddleware, Epic } from 'redux-observable';\r\nimport { dummyEpic } from './epics/dummyEpic';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { IAction } from './IAction';\r\nimport { environment } from '../../../environments/environment';\r\nimport { storageReducer } from './reducers/storage/StorageReducer';\r\n\r\n@Service()\r\nexport class StoreFactory {\r\n  createStore(): Store {\r\n    const epicMiddleware = createEpicMiddleware();\r\n    const middlewares: any[] = [epicMiddleware];\r\n\r\n    if (!environment.production) {\r\n      middlewares.push(logger);\r\n    }\r\n\r\n    const store = createStore(this.getRootReducer(), applyMiddleware(...middlewares));\r\n\r\n    epicMiddleware.run(this.getRootEpic());\r\n\r\n    return store;\r\n  }\r\n\r\n  private getRootReducer(): Reducer {\r\n    return combineReducers({\r\n      config: configReducer,\r\n      storage: storageReducer\r\n    });\r\n  }\r\n\r\n  private getRootEpic(): Epic<IAction> {\r\n    const epics = [dummyEpic];\r\n\r\n    return (action$, store$, dependencies) => {\r\n      return combineEpics(...epics)(action$, store$, dependencies).pipe(\r\n        catchError((error, source) => {\r\n          console.error(error);\r\n\r\n          return source;\r\n        })\r\n      );\r\n    };\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\store\\createReducer.ts":{"language":"typescript","mutants":[{"id":"2642","location":{"end":{"column":2,"line":9},"start":{"column":100,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2643","location":{"end":{"column":27,"line":8},"start":{"column":10,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2644","location":{"end":{"column":2,"line":25},"start":{"column":110,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2645","location":{"end":{"column":4,"line":16},"start":{"column":47,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2648","location":{"end":{"column":37,"line":19},"start":{"column":9,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2647","location":{"end":{"column":37,"line":19},"start":{"column":9,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2646","location":{"end":{"column":4,"line":24},"start":{"column":56,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2649","location":{"end":{"column":6,"line":21},"start":{"column":39,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { ActionName, IAction } from './IAction';\r\nimport { Reducer } from 'redux';\r\n\r\ntype Handler<S, K extends ActionName> = (state: S, action: IAction<K>) => S;\r\ntype ActionHandlerTuple<S> = [ActionName, Handler<S, ActionName>];\r\n\r\nexport function on<S, K extends ActionName>(action: K, handler: Handler<S, K>): [K, Handler<S, K>] {\r\n  return [action, handler];\r\n}\r\n\r\nexport function createReducer<S>(initialState: S, ...handlers: ActionHandlerTuple<S>[]): Reducer<S, IAction> {\r\n  const handlersMap = new Map<ActionName, Handler<S, ActionName>>();\r\n\r\n  handlers.forEach(([actionName, handler]) => {\r\n    handlersMap.set(actionName, handler);\r\n  });\r\n\r\n  return (state: S = initialState, action: IAction) => {\r\n    if (handlersMap.has(action.type)) {\r\n      return handlersMap.get(action.type)(state, action);\r\n    }\r\n\r\n    return state;\r\n  };\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\store\\epics\\dummyEpic.ts":{"language":"typescript","mutants":[{"id":"2650","location":{"end":{"column":4,"line":13},"start":{"column":41,"line":8}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2651","location":{"end":{"column":40,"line":11},"start":{"column":11,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { Epic } from 'redux-observable';\r\nimport { mapTo, switchMap } from 'rxjs/operators';\r\nimport { ActionName, IAction } from '../IAction';\r\nimport { UPDATE_CONFIG } from '../reducers/config/ConfigActions';\r\nimport { ofType } from '../operators/ofType';\r\nimport { EMPTY } from 'rxjs';\r\n\r\nexport const dummyEpic: Epic<IAction> = action$ =>\r\n  action$.pipe(\r\n    ofType(UPDATE_CONFIG),\r\n    mapTo({ type: 'FOO' as ActionName })\r\n    // switchMap(() => EMPTY),\r\n  );\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\store\\operators\\ofType.ts":{"language":"typescript","mutants":[{"id":"2652","location":{"end":{"column":2,"line":7},"start":{"column":55,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2653","location":{"end":{"column":119,"line":6},"start":{"column":10,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2654","location":{"end":{"column":117,"line":6},"start":{"column":89,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2655","location":{"end":{"column":117,"line":6},"start":{"column":98,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2657","location":{"end":{"column":117,"line":6},"start":{"column":98,"line":6}},"mutatorName":"EqualityOperator","replacement":"event.type !== type","status":"Survived"},{"id":"2656","location":{"end":{"column":117,"line":6},"start":{"column":98,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"}],"source":"import { Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ActionName, IAction } from '../IAction';\r\n\r\nexport function ofType<T extends ActionName>(type: T) {\r\n  return (source: Observable<IAction<T>>): Observable<IAction<T>> => source.pipe(filter(event => event.type === type));\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\store\\reducers\\config\\ConfigActions.ts":{"language":"typescript","mutants":[{"id":"2658","location":{"end":{"column":52,"line":1},"start":{"column":30,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2659","location":{"end":{"column":50,"line":2},"start":{"column":29,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const UPDATE_CONFIG = 'CONFIG/UPDATE_CONFIG';\r\nexport const CLEAR_CONFIG = 'CONFIG/CLEAR_CONFIG';\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\store\\reducers\\config\\ConfigReducer.ts":{"language":"typescript","mutants":[{"id":"2661","location":{"end":{"column":77,"line":7},"start":{"column":41,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2660","location":{"end":{"column":78,"line":7},"start":{"column":21,"line":7}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2662","location":{"end":{"column":57,"line":8},"start":{"column":20,"line":8}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2663","location":{"end":{"column":56,"line":8},"start":{"column":30,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { IConfigState, INITIAL_STATE } from './IConfigState';\r\nimport { CLEAR_CONFIG, UPDATE_CONFIG } from './ConfigActions';\r\nimport { createReducer, on } from '../../createReducer';\r\n\r\nexport const configReducer = createReducer<IConfigState>(\r\n  INITIAL_STATE,\r\n  on(UPDATE_CONFIG, (state, action) => ({ ...state, config: action.payload })),\r\n  on(CLEAR_CONFIG, state => ({ ...state, config: null }))\r\n);\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\store\\reducers\\config\\IConfigState.ts":{"language":"typescript","mutants":[{"id":"2664","location":{"end":{"column":2,"line":9},"start":{"column":44,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { IConfig } from '../../../../../shared/model/config/IConfig';\r\n\r\nexport interface IConfigState {\r\n  config: IConfig;\r\n}\r\n\r\nexport const INITIAL_STATE: IConfigState = {\r\n  config: null\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\store\\reducers\\storage\\StorageActions.ts":{"language":"typescript","mutants":[{"id":"2665","location":{"end":{"column":43,"line":1},"start":{"column":25,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const SET_ITEM = 'STORAGE/SET_ITEM';\r\n\r\nexport interface ISetItemPayload {\r\n  key: string;\r\n  value: any;\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\core\\store\\reducers\\storage\\StorageReducer.ts":{"language":"typescript","mutants":[{"id":"2666","location":{"end":{"column":93,"line":7},"start":{"column":16,"line":7}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2667","location":{"end":{"column":92,"line":7},"start":{"column":36,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { INITIAL_STATE, IStorageState } from './IStorageState';\r\nimport { SET_ITEM } from './StorageActions';\r\nimport { createReducer, on } from '../../createReducer';\r\n\r\nexport const storageReducer = createReducer<IStorageState>(\r\n  INITIAL_STATE,\r\n  on(SET_ITEM, (state, action) => ({ ...state, [action.payload.key]: action.payload.value }))\r\n);\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\application\\dependency-injection\\ServiceDefinitions.ts":{"language":"typescript","mutants":[{"id":"2668","location":{"end":{"column":64,"line":5},"start":{"column":15,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { Container } from 'typedi';\nimport { ConfigProvider } from '../../shared/services/config-provider/ConfigProvider';\nimport { StoreConfigProvider } from '../core/services/store-config-provider/StoreConfigProvider';\n\nContainer.set({ id: ConfigProvider, type: StoreConfigProvider });\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\bootstrap.ts":{"language":"typescript","mutants":[{"id":"2669","location":{"end":{"column":27,"line":5},"start":{"column":5,"line":5}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2671","location":{"end":{"column":27,"line":5},"start":{"column":5,"line":5}},"mutatorName":"BooleanLiteral","replacement":"Container.has(WINDOW)","status":"Survived"},{"id":"2670","location":{"end":{"column":27,"line":5},"start":{"column":5,"line":5}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2672","location":{"end":{"column":2,"line":7},"start":{"column":29,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2673","location":{"end":{"column":38,"line":9},"start":{"column":5,"line":9}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2674","location":{"end":{"column":38,"line":9},"start":{"column":5,"line":9}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2675","location":{"end":{"column":38,"line":9},"start":{"column":5,"line":9}},"mutatorName":"BooleanLiteral","replacement":"Container.has(ContainerInstance)","status":"Survived"},{"id":"2676","location":{"end":{"column":2,"line":11},"start":{"column":40,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Container, ContainerInstance } from 'typedi';\nimport { WINDOW } from './shared/dependency-injection/InjectionTokens';\nimport './testing/ServicesOverrides';\n\nif (!Container.has(WINDOW)) {\n  Container.set(WINDOW, window);\n}\n\nif (!Container.has(ContainerInstance)) {\n  Container.set(ContainerInstance, Container.of(undefined));\n}\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\client\\card-frames\\CardFrames.class.ts":{"language":"typescript","mutants":[{"id":"2678","location":{"end":{"column":47,"line":35},"start":{"column":40,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2679","location":{"end":{"column":63,"line":37},"start":{"column":51,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2677","location":{"end":{"column":56,"line":34},"start":{"column":51,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2681","location":{"end":{"column":51,"line":39},"start":{"column":43,"line":39}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2680","location":{"end":{"column":47,"line":38},"start":{"column":40,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2682","location":{"end":{"column":50,"line":39},"start":{"column":44,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2683","location":{"end":{"column":49,"line":41},"start":{"column":41,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2684","location":{"end":{"column":67,"line":42},"start":{"column":53,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2685","location":{"end":{"column":82,"line":43},"start":{"column":59,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2686","location":{"end":{"column":80,"line":44},"start":{"column":58,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2688","location":{"end":{"column":83,"line":53},"start":{"column":48,"line":53}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2687","location":{"end":{"column":85,"line":45},"start":{"column":57,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2689","location":{"end":{"column":71,"line":53},"start":{"column":56,"line":53}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2690","location":{"end":{"column":69,"line":53},"start":{"column":67,"line":53}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"2691","location":{"end":{"column":81,"line":53},"start":{"column":79,"line":53}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"2692","location":{"end":{"column":4,"line":112},"start":{"column":5,"line":95}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2693","location":{"end":{"column":82,"line":96},"start":{"column":27,"line":96}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2694","location":{"end":{"column":82,"line":96},"start":{"column":27,"line":96}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2695","location":{"end":{"column":82,"line":96},"start":{"column":27,"line":96}},"mutatorName":"LogicalOperator","replacement":"fieldsToSubmit && ['pan', 'expirydate', 'securitycode']","status":"Survived"},{"id":"2696","location":{"end":{"column":82,"line":96},"start":{"column":45,"line":96}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2697","location":{"end":{"column":51,"line":96},"start":{"column":46,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2699","location":{"end":{"column":81,"line":96},"start":{"column":67,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2698","location":{"end":{"column":65,"line":96},"start":{"column":53,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2700","location":{"end":{"column":33,"line":97},"start":{"column":31,"line":97}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"2702","location":{"end":{"column":6,"line":110},"start":{"column":78,"line":108}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2701","location":{"end":{"column":70,"line":104},"start":{"column":19,"line":104}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2703","location":{"end":{"column":4,"line":121},"start":{"column":17,"line":114}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2704","location":{"end":{"column":4,"line":131},"start":{"column":35,"line":123}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2705","location":{"end":{"column":6,"line":128},"start":{"column":31,"line":124}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2706","location":{"end":{"column":40,"line":125},"start":{"column":11,"line":125}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2707","location":{"end":{"column":40,"line":125},"start":{"column":11,"line":125}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2708","location":{"end":{"column":8,"line":127},"start":{"column":42,"line":125}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2709","location":{"end":{"column":39,"line":129},"start":{"column":14,"line":129}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2710","location":{"end":{"column":4,"line":151},"start":{"column":58,"line":133}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2711","location":{"end":{"column":92,"line":135},"start":{"column":29,"line":135}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2713","location":{"end":{"column":92,"line":135},"start":{"column":29,"line":135}},"mutatorName":"LogicalOperator","replacement":"jwt || CardFrames.NO_CVV_CARDS.includes(this._getCardType(jwt))","status":"Survived"},{"id":"2712","location":{"end":{"column":92,"line":135},"start":{"column":29,"line":135}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2715","location":{"end":{"column":72,"line":139},"start":{"column":7,"line":137}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2714","location":{"end":{"column":72,"line":139},"start":{"column":7,"line":137}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2716","location":{"end":{"column":72,"line":139},"start":{"column":7,"line":137}},"mutatorName":"LogicalOperator","replacement":"this._fieldsToSubmitLength === CardFrames.ONLY_CVV_NUMBER_OF_FIELDS && this._isCardWithNoCvv || this.fieldsToSubmit.includes(CardFrames.SECURITY_CODE_FIELD_NAME)","status":"Survived"},{"id":"2717","location":{"end":{"column":28,"line":138},"start":{"column":7,"line":137}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2719","location":{"end":{"column":28,"line":138},"start":{"column":7,"line":137}},"mutatorName":"LogicalOperator","replacement":"this._fieldsToSubmitLength === CardFrames.ONLY_CVV_NUMBER_OF_FIELDS || this._isCardWithNoCvv","status":"Survived"},{"id":"2718","location":{"end":{"column":28,"line":138},"start":{"column":7,"line":137}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2720","location":{"end":{"column":74,"line":137},"start":{"column":7,"line":137}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2721","location":{"end":{"column":74,"line":137},"start":{"column":7,"line":137}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2722","location":{"end":{"column":74,"line":137},"start":{"column":7,"line":137}},"mutatorName":"EqualityOperator","replacement":"this._fieldsToSubmitLength !== CardFrames.ONLY_CVV_NUMBER_OF_FIELDS","status":"Survived"},{"id":"2723","location":{"end":{"column":72,"line":143},"start":{"column":7,"line":141}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2725","location":{"end":{"column":72,"line":143},"start":{"column":7,"line":141}},"mutatorName":"LogicalOperator","replacement":"this._fieldsToSubmitLength === CardFrames.ONLY_CVV_NUMBER_OF_FIELDS && !this._isCardWithNoCvv || this.fieldsToSubmit.includes(CardFrames.SECURITY_CODE_FIELD_NAME)","status":"Survived"},{"id":"2724","location":{"end":{"column":72,"line":143},"start":{"column":7,"line":141}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2726","location":{"end":{"column":29,"line":142},"start":{"column":7,"line":141}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2727","location":{"end":{"column":29,"line":142},"start":{"column":7,"line":141}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2728","location":{"end":{"column":29,"line":142},"start":{"column":7,"line":141}},"mutatorName":"LogicalOperator","replacement":"this._fieldsToSubmitLength === CardFrames.ONLY_CVV_NUMBER_OF_FIELDS || !this._isCardWithNoCvv","status":"Survived"},{"id":"2729","location":{"end":{"column":74,"line":141},"start":{"column":7,"line":141}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2731","location":{"end":{"column":74,"line":141},"start":{"column":7,"line":141}},"mutatorName":"EqualityOperator","replacement":"this._fieldsToSubmitLength !== CardFrames.ONLY_CVV_NUMBER_OF_FIELDS","status":"Survived"},{"id":"2730","location":{"end":{"column":74,"line":141},"start":{"column":7,"line":141}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2732","location":{"end":{"column":29,"line":142},"start":{"column":7,"line":142}},"mutatorName":"BooleanLiteral","replacement":"this._isCardWithNoCvv","status":"Survived"},{"id":"2733","location":{"end":{"column":72,"line":150},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2734","location":{"end":{"column":72,"line":150},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2735","location":{"end":{"column":72,"line":150},"start":{"column":7,"line":145}},"mutatorName":"LogicalOperator","replacement":"this._fieldsToSubmitLength === CardFrames.COMPLETE_FORM_NUMBER_OF_FIELDS && this._loadAnimatedCard && !this._isCardWithNoCvv && this.fieldsToSubmit.includes(CardFrames.CARD_NUMBER_FIELD_NAME) && this.fieldsToSubmit.includes(CardFrames.EXPIRY_DATE_FIELD_NAME) || this.fieldsToSubmit.includes(CardFrames.SECURITY_CODE_FIELD_NAME)","status":"Survived"},{"id":"2736","location":{"end":{"column":70,"line":149},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2738","location":{"end":{"column":70,"line":149},"start":{"column":7,"line":145}},"mutatorName":"LogicalOperator","replacement":"this._fieldsToSubmitLength === CardFrames.COMPLETE_FORM_NUMBER_OF_FIELDS && this._loadAnimatedCard && !this._isCardWithNoCvv && this.fieldsToSubmit.includes(CardFrames.CARD_NUMBER_FIELD_NAME) || this.fieldsToSubmit.includes(CardFrames.EXPIRY_DATE_FIELD_NAME)","status":"Survived"},{"id":"2737","location":{"end":{"column":70,"line":149},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2739","location":{"end":{"column":70,"line":148},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2740","location":{"end":{"column":70,"line":148},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2741","location":{"end":{"column":70,"line":148},"start":{"column":7,"line":145}},"mutatorName":"LogicalOperator","replacement":"this._fieldsToSubmitLength === CardFrames.COMPLETE_FORM_NUMBER_OF_FIELDS && this._loadAnimatedCard && !this._isCardWithNoCvv || this.fieldsToSubmit.includes(CardFrames.CARD_NUMBER_FIELD_NAME)","status":"Survived"},{"id":"2743","location":{"end":{"column":29,"line":147},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2742","location":{"end":{"column":29,"line":147},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2744","location":{"end":{"column":29,"line":147},"start":{"column":7,"line":145}},"mutatorName":"LogicalOperator","replacement":"this._fieldsToSubmitLength === CardFrames.COMPLETE_FORM_NUMBER_OF_FIELDS && this._loadAnimatedCard || !this._isCardWithNoCvv","status":"Survived"},{"id":"2745","location":{"end":{"column":29,"line":146},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2746","location":{"end":{"column":29,"line":146},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2748","location":{"end":{"column":79,"line":145},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2747","location":{"end":{"column":29,"line":146},"start":{"column":7,"line":145}},"mutatorName":"LogicalOperator","replacement":"this._fieldsToSubmitLength === CardFrames.COMPLETE_FORM_NUMBER_OF_FIELDS || this._loadAnimatedCard","status":"Survived"},{"id":"2749","location":{"end":{"column":79,"line":145},"start":{"column":7,"line":145}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2750","location":{"end":{"column":79,"line":145},"start":{"column":7,"line":145}},"mutatorName":"EqualityOperator","replacement":"this._fieldsToSubmitLength !== CardFrames.COMPLETE_FORM_NUMBER_OF_FIELDS","status":"Survived"},{"id":"2751","location":{"end":{"column":29,"line":147},"start":{"column":7,"line":147}},"mutatorName":"BooleanLiteral","replacement":"this._isCardWithNoCvv","status":"Survived"},{"id":"2753","location":{"end":{"column":41,"line":154},"start":{"column":9,"line":154}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2752","location":{"end":{"column":4,"line":162},"start":{"column":78,"line":153}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2754","location":{"end":{"column":41,"line":154},"start":{"column":9,"line":154}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2755","location":{"end":{"column":41,"line":154},"start":{"column":9,"line":154}},"mutatorName":"EqualityOperator","replacement":"fields.length !== targets.length","status":"Survived"},{"id":"2756","location":{"end":{"column":6,"line":161},"start":{"column":43,"line":154}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2757","location":{"end":{"column":8,"line":160},"start":{"column":40,"line":155}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2759","location":{"end":{"column":29,"line":157},"start":{"column":13,"line":157}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2758","location":{"end":{"column":29,"line":157},"start":{"column":13,"line":157}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2760","location":{"end":{"column":29,"line":157},"start":{"column":13,"line":157}},"mutatorName":"EqualityOperator","replacement":"element === null","status":"Survived"},{"id":"2762","location":{"end":{"column":4,"line":183},"start":{"column":43,"line":164}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2761","location":{"end":{"column":10,"line":159},"start":{"column":31,"line":157}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2764","location":{"end":{"column":43,"line":165},"start":{"column":9,"line":165}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2763","location":{"end":{"column":43,"line":165},"start":{"column":9,"line":165}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2765","location":{"end":{"column":6,"line":172},"start":{"column":45,"line":165}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2766","location":{"end":{"column":8,"line":171},"start":{"column":14,"line":166}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2767","location":{"end":{"column":42,"line":172},"start":{"column":16,"line":172}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2768","location":{"end":{"column":42,"line":172},"start":{"column":16,"line":172}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2769","location":{"end":{"column":6,"line":174},"start":{"column":44,"line":172}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2770","location":{"end":{"column":46,"line":173},"start":{"column":14,"line":173}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2771","location":{"end":{"column":42,"line":174},"start":{"column":16,"line":174}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2772","location":{"end":{"column":42,"line":174},"start":{"column":16,"line":174}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2773","location":{"end":{"column":6,"line":176},"start":{"column":44,"line":174}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2774","location":{"end":{"column":16,"line":175},"start":{"column":14,"line":175}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"2775","location":{"end":{"column":6,"line":182},"start":{"column":12,"line":176}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2776","location":{"end":{"column":8,"line":181},"start":{"column":14,"line":177}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2777","location":{"end":{"column":4,"line":207},"start":{"column":77,"line":185}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2778","location":{"end":{"column":67,"line":191},"start":{"column":7,"line":189}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2780","location":{"end":{"column":67,"line":191},"start":{"column":7,"line":189}},"mutatorName":"LogicalOperator","replacement":"((document.getElementById(this._buttonId) as HTMLInputElement | HTMLButtonElement) || form.querySelector(CardFrames.SUBMIT_BUTTON_AS_BUTTON_MARKUP)) && form.querySelector(CardFrames.SUBMIT_BUTTON_AS_INPUT_MARKUP)","status":"Survived"},{"id":"2779","location":{"end":{"column":67,"line":191},"start":{"column":7,"line":189}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2781","location":{"end":{"column":68,"line":190},"start":{"column":7,"line":189}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2782","location":{"end":{"column":68,"line":190},"start":{"column":7,"line":189}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2783","location":{"end":{"column":68,"line":190},"start":{"column":7,"line":189}},"mutatorName":"LogicalOperator","replacement":"(document.getElementById(this._buttonId) as HTMLInputElement | HTMLButtonElement) && form.querySelector(CardFrames.SUBMIT_BUTTON_AS_BUTTON_MARKUP)","status":"Survived"},{"id":"2784","location":{"end":{"column":6,"line":204},"start":{"column":41,"line":194}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2785","location":{"end":{"column":29,"line":197},"start":{"column":11,"line":197}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2786","location":{"end":{"column":29,"line":197},"start":{"column":11,"line":197}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2787","location":{"end":{"column":8,"line":199},"start":{"column":31,"line":197}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2790","location":{"end":{"column":46,"line":201},"start":{"column":11,"line":201}},"mutatorName":"LogicalOperator","replacement":"deferInit && components.startOnLoad","status":"Survived"},{"id":"2789","location":{"end":{"column":46,"line":201},"start":{"column":11,"line":201}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2788","location":{"end":{"column":46,"line":201},"start":{"column":11,"line":201}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2791","location":{"end":{"column":8,"line":203},"start":{"column":48,"line":201}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2792","location":{"end":{"column":4,"line":215},"start":{"column":88,"line":209}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2793","location":{"end":{"column":6,"line":213},"start":{"column":47,"line":210}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2794","location":{"end":{"column":4,"line":221},"start":{"column":56,"line":217}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2795","location":{"end":{"column":27,"line":218},"start":{"column":9,"line":218}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2797","location":{"end":{"column":6,"line":220},"start":{"column":29,"line":218}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2796","location":{"end":{"column":27,"line":218},"start":{"column":9,"line":218}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2798","location":{"end":{"column":4,"line":228},"start":{"column":45,"line":223}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2799","location":{"end":{"column":32,"line":225},"start":{"column":9,"line":225}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2800","location":{"end":{"column":32,"line":225},"start":{"column":9,"line":225}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2802","location":{"end":{"column":4,"line":233},"start":{"column":50,"line":230}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2801","location":{"end":{"column":6,"line":227},"start":{"column":34,"line":225}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2803","location":{"end":{"column":4,"line":243},"start":{"column":50,"line":235}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2804","location":{"end":{"column":4,"line":253},"start":{"column":52,"line":245}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2805","location":{"end":{"column":4,"line":271},"start":{"column":42,"line":255}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2806","location":{"end":{"column":50,"line":256},"start":{"column":32,"line":256}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2807","location":{"end":{"column":41,"line":257},"start":{"column":9,"line":257}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2808","location":{"end":{"column":41,"line":257},"start":{"column":9,"line":257}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2810","location":{"end":{"column":6,"line":259},"start":{"column":43,"line":257}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2809","location":{"end":{"column":41,"line":257},"start":{"column":9,"line":257}},"mutatorName":"EqualityOperator","replacement":"this._paymentTypes === undefined","status":"Survived"},{"id":"2811","location":{"end":{"column":47,"line":260},"start":{"column":9,"line":260}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2812","location":{"end":{"column":47,"line":260},"start":{"column":9,"line":260}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2813","location":{"end":{"column":47,"line":260},"start":{"column":9,"line":260}},"mutatorName":"EqualityOperator","replacement":"this._defaultPaymentType === undefined","status":"Survived"},{"id":"2814","location":{"end":{"column":6,"line":262},"start":{"column":49,"line":260}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2815","location":{"end":{"column":9,"line":268},"start":{"column":7,"line":268}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"2816","location":{"end":{"column":4,"line":291},"start":{"column":35,"line":273}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2817","location":{"end":{"column":35,"line":279},"start":{"column":9,"line":279}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2818","location":{"end":{"column":35,"line":279},"start":{"column":9,"line":279}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2819","location":{"end":{"column":6,"line":281},"start":{"column":37,"line":279}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2821","location":{"end":{"column":50,"line":281},"start":{"column":16,"line":281}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2820","location":{"end":{"column":50,"line":281},"start":{"column":16,"line":281}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2822","location":{"end":{"column":6,"line":286},"start":{"column":52,"line":281}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2823","location":{"end":{"column":6,"line":290},"start":{"column":12,"line":286}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2824","location":{"end":{"column":4,"line":298},"start":{"column":35,"line":293}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2825","location":{"end":{"column":4,"line":306},"start":{"column":28,"line":300}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2826","location":{"end":{"column":6,"line":304},"start":{"column":47,"line":301}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2827","location":{"end":{"column":4,"line":316},"start":{"column":39,"line":308}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2829","location":{"end":{"column":8,"line":312},"start":{"column":13,"line":310}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2828","location":{"end":{"column":6,"line":314},"start":{"column":47,"line":309}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2831","location":{"end":{"column":4,"line":322},"start":{"column":108,"line":318}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2830","location":{"end":{"column":51,"line":315},"start":{"column":47,"line":315}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2832","location":{"end":{"column":4,"line":329},"start":{"column":46,"line":324}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2833","location":{"end":{"column":6,"line":328},"start":{"column":27,"line":326}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2834","location":{"end":{"column":4,"line":350},"start":{"column":11,"line":338}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2835","location":{"end":{"column":101,"line":340},"start":{"column":28,"line":340}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2836","location":{"end":{"column":101,"line":340},"start":{"column":28,"line":340}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2837","location":{"end":{"column":101,"line":340},"start":{"column":28,"line":340}},"mutatorName":"LogicalOperator","replacement":"this._frame.parseUrl().locale && JwtDecode<IStJwtObj>(jwt).payload.locale","status":"Survived"},{"id":"2838","location":{"end":{"column":78,"line":348},"start":{"column":31,"line":348}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"2839","location":{"end":{"column":60,"line":349},"start":{"column":30,"line":349}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2840","location":{"end":{"column":60,"line":349},"start":{"column":30,"line":349}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2841","location":{"end":{"column":60,"line":349},"start":{"column":30,"line":349}},"mutatorName":"EqualityOperator","replacement":"loadAnimatedCard === undefined","status":"Survived"},{"id":"2842","location":{"end":{"column":86,"line":349},"start":{"column":82,"line":349}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2843","location":{"end":{"column":4,"line":372},"start":{"column":83,"line":352}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2844","location":{"end":{"column":36,"line":354},"start":{"column":9,"line":354}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2845","location":{"end":{"column":36,"line":354},"start":{"column":9,"line":354}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2847","location":{"end":{"column":6,"line":358},"start":{"column":38,"line":354}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2848","location":{"end":{"column":27,"line":357},"start":{"column":23,"line":357}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2846","location":{"end":{"column":36,"line":354},"start":{"column":9,"line":354}},"mutatorName":"EqualityOperator","replacement":"state !== FormState.BLOCKED","status":"Survived"},{"id":"2850","location":{"end":{"column":44,"line":358},"start":{"column":16,"line":358}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2849","location":{"end":{"column":44,"line":358},"start":{"column":16,"line":358}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2851","location":{"end":{"column":44,"line":358},"start":{"column":16,"line":358}},"mutatorName":"EqualityOperator","replacement":"state !== FormState.COMPLETE","status":"Survived"},{"id":"2852","location":{"end":{"column":6,"line":362},"start":{"column":46,"line":358}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2853","location":{"end":{"column":27,"line":361},"start":{"column":23,"line":361}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2854","location":{"end":{"column":43,"line":362},"start":{"column":16,"line":362}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2855","location":{"end":{"column":43,"line":362},"start":{"column":16,"line":362}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2856","location":{"end":{"column":43,"line":362},"start":{"column":16,"line":362}},"mutatorName":"EqualityOperator","replacement":"state !== FormState.LOADING","status":"Survived"},{"id":"2857","location":{"end":{"column":6,"line":365},"start":{"column":45,"line":362}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2858","location":{"end":{"column":27,"line":364},"start":{"column":23,"line":364}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2859","location":{"end":{"column":6,"line":369},"start":{"column":12,"line":365}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2860","location":{"end":{"column":28,"line":368},"start":{"column":23,"line":368}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"2861","location":{"end":{"column":4,"line":383},"start":{"column":39,"line":374}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2862","location":{"end":{"column":27,"line":375},"start":{"column":9,"line":375}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2863","location":{"end":{"column":27,"line":375},"start":{"column":9,"line":375}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2864","location":{"end":{"column":6,"line":379},"start":{"column":29,"line":375}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2865","location":{"end":{"column":8,"line":378},"start":{"column":73,"line":376}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2867","location":{"end":{"column":4,"line":396},"start":{"column":41,"line":385}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2866","location":{"end":{"column":6,"line":382},"start":{"column":82,"line":380}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2868","location":{"end":{"column":68,"line":388},"start":{"column":18,"line":388}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2869","location":{"end":{"column":6,"line":395},"start":{"column":91,"line":390}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2870","location":{"end":{"column":4,"line":411},"start":{"column":46,"line":398}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2871","location":{"end":{"column":6,"line":410},"start":{"column":98,"line":399}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2872","location":{"end":{"column":28,"line":401},"start":{"column":11,"line":401}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2873","location":{"end":{"column":28,"line":401},"start":{"column":11,"line":401}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2874","location":{"end":{"column":28,"line":401},"start":{"column":11,"line":401}},"mutatorName":"BooleanLiteral","replacement":"cardNumber.state","status":"Survived"},{"id":"2875","location":{"end":{"column":8,"line":403},"start":{"column":30,"line":401}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2876","location":{"end":{"column":32,"line":404},"start":{"column":11,"line":404}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2878","location":{"end":{"column":32,"line":404},"start":{"column":11,"line":404}},"mutatorName":"BooleanLiteral","replacement":"expirationDate.state","status":"Survived"},{"id":"2877","location":{"end":{"column":32,"line":404},"start":{"column":11,"line":404}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2879","location":{"end":{"column":8,"line":406},"start":{"column":34,"line":404}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2880","location":{"end":{"column":30,"line":407},"start":{"column":11,"line":407}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2881","location":{"end":{"column":30,"line":407},"start":{"column":11,"line":407}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2882","location":{"end":{"column":30,"line":407},"start":{"column":11,"line":407}},"mutatorName":"BooleanLiteral","replacement":"securityCode.state","status":"Survived"},{"id":"2883","location":{"end":{"column":8,"line":409},"start":{"column":32,"line":407}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2884","location":{"end":{"column":4,"line":422},"start":{"column":38,"line":413}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2885","location":{"end":{"column":69,"line":414},"start":{"column":29,"line":414}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"2886","location":{"end":{"column":6,"line":421},"start":{"column":83,"line":419}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import JwtDecode from 'jwt-decode';\r\nimport { FormState } from '../../application/core/models/constants/FormState';\r\nimport { IMessageBusEvent } from '../../application/core/models/IMessageBusEvent';\r\nimport { IStyles } from '../../shared/model/config/IStyles';\r\nimport { IValidationMessageBus } from '../../application/core/models/IValidationMessageBus';\r\nimport { IframeFactory } from '../iframe-factory/IframeFactory';\r\nimport { DomMethods } from '../../application/core/shared/dom-methods/DomMethods';\r\nimport { MessageBus } from '../../application/core/shared/message-bus/MessageBus';\r\nimport {\r\n  ANIMATED_CARD_COMPONENT_IFRAME,\r\n  ANIMATED_CARD_COMPONENT_NAME,\r\n  CARD_NUMBER_COMPONENT_NAME,\r\n  CARD_NUMBER_IFRAME,\r\n  EXPIRATION_DATE_COMPONENT_NAME,\r\n  EXPIRATION_DATE_IFRAME,\r\n  SECURITY_CODE_COMPONENT_NAME,\r\n  SECURITY_CODE_IFRAME\r\n} from '../../application/core/models/constants/Selectors';\r\nimport { Translator } from '../../application/core/shared/translator/Translator';\r\nimport { Validation } from '../../application/core/shared/validation/Validation';\r\nimport { iinLookup } from '@trustpayments/ts-iin-lookup';\r\nimport { ofType } from '../../shared/services/message-bus/operators/ofType';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfigProvider } from '../../shared/services/config-provider/ConfigProvider';\r\nimport { IConfig } from '../../shared/model/config/IConfig';\r\nimport { PUBLIC_EVENTS } from '../../application/core/models/constants/EventTypes';\r\nimport { first } from 'rxjs/operators';\r\nimport { Frame } from '../../application/core/shared/frame/Frame';\r\nimport { StJwt } from '../../application/core/shared/stjwt/StJwt';\r\nimport { IStJwtObj } from '../../application/core/models/IStJwtObj';\r\nimport { PAY, PROCESSING } from '../../application/core/models/constants/Translations';\r\n\r\nexport class CardFrames {\r\n  private static CARD_NUMBER_FIELD_NAME: string = 'pan';\r\n  private static CLICK_EVENT: string = 'click';\r\n  private static COMPLETE_FORM_NUMBER_OF_FIELDS: number = 3;\r\n  private static EXPIRY_DATE_FIELD_NAME: string = 'expirydate';\r\n  private static INPUT_EVENT: string = 'input';\r\n  private static NO_CVV_CARDS: string[] = ['PIBA'];\r\n  private static ONLY_CVV_NUMBER_OF_FIELDS: number = 1;\r\n  private static SUBMIT_EVENT: string = 'submit';\r\n  private static SECURITY_CODE_FIELD_NAME: string = 'securitycode';\r\n  private static SUBMIT_BUTTON_AS_BUTTON_MARKUP: string = 'button[type=\"submit\"]';\r\n  private static SUBMIT_BUTTON_AS_INPUT_MARKUP: string = 'input[type=\"submit\"]';\r\n  private static SUBMIT_BUTTON_DISABLED_CLASS: string = 'st-button-submit__disabled';\r\n\r\n  private _animatedCard: HTMLIFrameElement;\r\n  private _cardNumber: HTMLIFrameElement;\r\n  private _expirationDate: HTMLIFrameElement;\r\n  private _securityCode: HTMLIFrameElement;\r\n  private _validation: Validation;\r\n  private _translator: Translator;\r\n  private _messageBusEvent: IMessageBusEvent = { data: { message: '' }, type: '' };\r\n  private _submitButton: HTMLInputElement | HTMLButtonElement;\r\n  private _buttonId: string;\r\n  private _defaultPaymentType: string;\r\n  private _paymentTypes: string[];\r\n  private _payMessage: string;\r\n  private _processingMessage: string;\r\n  private _fieldsToSubmitLength: number;\r\n  private _isCardWithNoCvv: boolean;\r\n  private _noFieldConfiguration: boolean;\r\n  private _onlyCvvConfiguration: boolean;\r\n  private _configurationForStandardCard: boolean;\r\n  private _loadAnimatedCard: boolean;\r\n  private _config$: Observable<IConfig>;\r\n  protected styles: IStyles;\r\n  protected params: any;\r\n  protected elementsToRegister: HTMLElement[];\r\n  protected elementsTargets: string[];\r\n  protected jwt: string;\r\n  protected origin: string;\r\n  protected componentIds: any;\r\n  protected submitCallback: any;\r\n  protected fieldsToSubmit: string[];\r\n  protected messageBus: MessageBus;\r\n  protected formId: string;\r\n  private _stJwt: StJwt;\r\n\r\n  constructor(\r\n    jwt: string,\r\n    origin: string,\r\n    componentIds: {},\r\n    styles: IStyles,\r\n    paymentTypes: string[],\r\n    defaultPaymentType: string,\r\n    animatedCard: boolean,\r\n    buttonId: string,\r\n    fieldsToSubmit: string[],\r\n    formId: string,\r\n    private _configProvider: ConfigProvider,\r\n    private _iframeFactory: IframeFactory,\r\n    private _frame: Frame,\r\n    private _messageBus: MessageBus\r\n  ) {\r\n    this.fieldsToSubmit = fieldsToSubmit || ['pan', 'expirydate', 'securitycode'];\r\n    this.elementsToRegister = [];\r\n    this.componentIds = componentIds;\r\n    this.formId = formId;\r\n    this.jwt = jwt;\r\n    this.origin = origin;\r\n    this.styles = this._getStyles(styles);\r\n    this._stJwt = new StJwt(jwt);\r\n    this.params = { locale: this._stJwt.locale, origin: this.origin };\r\n    this._config$ = this._configProvider.getConfig$();\r\n    this._setInitValues(buttonId, defaultPaymentType, paymentTypes, animatedCard, jwt, formId);\r\n    this.configureFormFieldsAmount(jwt);\r\n    this._messageBus.subscribe(MessageBus.EVENTS_PUBLIC.UNLOCK_BUTTON, () => {\r\n      this._disableSubmitButton(FormState.AVAILABLE);\r\n    });\r\n    this.styles = this._getStyles(styles);\r\n  }\r\n\r\n  public init() {\r\n    this._preventFormSubmit();\r\n    this._createSubmitButton();\r\n    this._initSubscribes();\r\n    this._initCardFrames();\r\n    this.elementsTargets = this.setElementsFields();\r\n    this.registerElements(this.elementsToRegister, this.elementsTargets);\r\n  }\r\n\r\n  private _getStyles(styles: any) {\r\n    for (const key in styles) {\r\n      if (styles[key] instanceof Object) {\r\n        return styles;\r\n      }\r\n    }\r\n    styles = { defaultStyles: styles };\r\n    return styles;\r\n  }\r\n\r\n  protected configureFormFieldsAmount(jwt: string): void {\r\n    this._fieldsToSubmitLength = this.fieldsToSubmit.length;\r\n    this._isCardWithNoCvv = jwt && CardFrames.NO_CVV_CARDS.includes(this._getCardType(jwt));\r\n    this._noFieldConfiguration =\r\n      this._fieldsToSubmitLength === CardFrames.ONLY_CVV_NUMBER_OF_FIELDS &&\r\n      this._isCardWithNoCvv &&\r\n      this.fieldsToSubmit.includes(CardFrames.SECURITY_CODE_FIELD_NAME);\r\n    this._onlyCvvConfiguration =\r\n      this._fieldsToSubmitLength === CardFrames.ONLY_CVV_NUMBER_OF_FIELDS &&\r\n      !this._isCardWithNoCvv &&\r\n      this.fieldsToSubmit.includes(CardFrames.SECURITY_CODE_FIELD_NAME);\r\n    this._configurationForStandardCard =\r\n      this._fieldsToSubmitLength === CardFrames.COMPLETE_FORM_NUMBER_OF_FIELDS &&\r\n      this._loadAnimatedCard &&\r\n      !this._isCardWithNoCvv &&\r\n      this.fieldsToSubmit.includes(CardFrames.CARD_NUMBER_FIELD_NAME) &&\r\n      this.fieldsToSubmit.includes(CardFrames.EXPIRY_DATE_FIELD_NAME) &&\r\n      this.fieldsToSubmit.includes(CardFrames.SECURITY_CODE_FIELD_NAME);\r\n  }\r\n\r\n  protected registerElements(fields: HTMLElement[], targets: string[]): void {\r\n    if (fields.length === targets.length) {\r\n      targets.forEach((item, index) => {\r\n        const element: HTMLElement = document.getElementById(item);\r\n        if (element !== null) {\r\n          element.appendChild(fields[index]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  protected setElementsFields(): string[] {\r\n    if (this._configurationForStandardCard) {\r\n      return [\r\n        this.componentIds.cardNumber,\r\n        this.componentIds.expirationDate,\r\n        this.componentIds.securityCode,\r\n        this.componentIds.animatedCard\r\n      ];\r\n    } else if (this._onlyCvvConfiguration) {\r\n      return [this.componentIds.securityCode];\r\n    } else if (this._noFieldConfiguration) {\r\n      return [];\r\n    } else {\r\n      return [\r\n        this.componentIds.cardNumber, //\r\n        this.componentIds.expirationDate,\r\n        this.componentIds.securityCode\r\n      ];\r\n    }\r\n  }\r\n\r\n  private _createSubmitButton = (): HTMLInputElement | HTMLButtonElement => {\r\n    const form = document.getElementById(this.formId);\r\n\r\n    this._submitButton =\r\n      (document.getElementById(this._buttonId) as HTMLInputElement | HTMLButtonElement) ||\r\n      form.querySelector(CardFrames.SUBMIT_BUTTON_AS_BUTTON_MARKUP) ||\r\n      form.querySelector(CardFrames.SUBMIT_BUTTON_AS_INPUT_MARKUP);\r\n    this._disableSubmitButton(FormState.LOADING);\r\n\r\n    this._config$.subscribe(response => {\r\n      const { deferInit, components } = response;\r\n\r\n      if (this._submitButton) {\r\n        this._submitButton.textContent = this._payMessage;\r\n      }\r\n\r\n      if (deferInit || components.startOnLoad) {\r\n        this._disableSubmitButton(FormState.AVAILABLE);\r\n      }\r\n    });\r\n\r\n    return this._submitButton;\r\n  };\r\n\r\n  private _disableFormField(state: FormState, eventName: string, target: string): void {\r\n    const messageBusEvent: IMessageBusEvent = {\r\n      data: state,\r\n      type: eventName\r\n    };\r\n    this._messageBus.publish(messageBusEvent);\r\n  }\r\n\r\n  private _disableSubmitButton(state: FormState): void {\r\n    if (this._submitButton) {\r\n      this._setSubmitButtonProperties(this._submitButton, state);\r\n    }\r\n  }\r\n\r\n  private _getCardType(jwt: string): string {\r\n    const cardDetails = JwtDecode(jwt) as any;\r\n    if (cardDetails.payload.pan) {\r\n      return iinLookup.lookup(cardDetails.payload.pan).type;\r\n    }\r\n  }\r\n\r\n  private _initCardNumberFrame(styles: {}): void {\r\n    this._cardNumber = this._iframeFactory.create(CARD_NUMBER_COMPONENT_NAME, CARD_NUMBER_IFRAME, styles, this.params);\r\n    this.elementsToRegister.push(this._cardNumber);\r\n  }\r\n\r\n  private _initExpiryDateFrame(styles: {}): void {\r\n    this._expirationDate = this._iframeFactory.create(\r\n      EXPIRATION_DATE_COMPONENT_NAME,\r\n      EXPIRATION_DATE_IFRAME,\r\n      styles,\r\n      this.params\r\n    );\r\n    this.elementsToRegister.push(this._expirationDate);\r\n  }\r\n\r\n  private _initSecurityCodeFrame(styles: {}): void {\r\n    this._securityCode = this._iframeFactory.create(\r\n      SECURITY_CODE_COMPONENT_NAME,\r\n      SECURITY_CODE_IFRAME,\r\n      styles,\r\n      this.params\r\n    );\r\n    this.elementsToRegister.push(this._securityCode);\r\n  }\r\n\r\n  private _initAnimatedCardFrame(): void {\r\n    const animatedCardConfig = { ...this.params };\r\n    if (this._paymentTypes !== undefined) {\r\n      animatedCardConfig.paymentTypes = this._paymentTypes;\r\n    }\r\n    if (this._defaultPaymentType !== undefined) {\r\n      animatedCardConfig.defaultPaymentType = this._defaultPaymentType;\r\n    }\r\n    this._animatedCard = this._iframeFactory.create(\r\n      ANIMATED_CARD_COMPONENT_NAME,\r\n      ANIMATED_CARD_COMPONENT_IFRAME,\r\n      {},\r\n      animatedCardConfig,\r\n      -1\r\n    );\r\n    this.elementsToRegister.push(this._animatedCard);\r\n  }\r\n\r\n  private _initCardFrames(): void {\r\n    const { defaultStyles } = this.styles;\r\n    let { cardNumber, securityCode, expirationDate } = this.styles;\r\n    cardNumber = Object.assign({}, defaultStyles, cardNumber);\r\n    securityCode = Object.assign({}, defaultStyles, securityCode);\r\n    expirationDate = Object.assign({}, defaultStyles, expirationDate);\r\n    if (this._onlyCvvConfiguration) {\r\n      this._initSecurityCodeFrame(securityCode);\r\n    } else if (this._configurationForStandardCard) {\r\n      this._initCardNumberFrame(cardNumber);\r\n      this._initExpiryDateFrame(expirationDate);\r\n      this._initSecurityCodeFrame(securityCode);\r\n      this._initAnimatedCardFrame();\r\n    } else {\r\n      this._initCardNumberFrame(cardNumber);\r\n      this._initExpiryDateFrame(expirationDate);\r\n      this._initSecurityCodeFrame(securityCode);\r\n    }\r\n  }\r\n\r\n  private _initSubscribes(): void {\r\n    this._submitFormListener();\r\n    this._subscribeBlockSubmit();\r\n    this._validateFieldsAfterSubmit();\r\n    this._setMerchantInputListeners();\r\n  }\r\n\r\n  private _onInput(): void {\r\n    const messageBusEvent: IMessageBusEvent = {\r\n      data: DomMethods.parseForm(this.formId),\r\n      type: MessageBus.EVENTS_PUBLIC.UPDATE_MERCHANT_FIELDS\r\n    };\r\n    this._messageBus.publish(messageBusEvent);\r\n  }\r\n\r\n  private _publishSubmitEvent(): void {\r\n    const messageBusEvent: IMessageBusEvent = {\r\n      data: {\r\n        fieldsToSubmit: this.fieldsToSubmit\r\n      },\r\n      type: MessageBus.EVENTS_PUBLIC.SUBMIT_FORM\r\n    };\r\n    this._messageBus.publish(messageBusEvent, true);\r\n  }\r\n\r\n  private _publishValidatedFieldState(field: { message: string; state: boolean }, eventType: string): void {\r\n    this._messageBusEvent.type = eventType;\r\n    this._messageBusEvent.data.message = field.message;\r\n    this._messageBus.publish(this._messageBusEvent);\r\n  }\r\n\r\n  private _setMerchantInputListeners(): void {\r\n    const els = DomMethods.getAllFormElements(document.getElementById(this.formId));\r\n    for (const el of els) {\r\n      el.addEventListener(CardFrames.INPUT_EVENT, this._onInput.bind(this));\r\n    }\r\n  }\r\n\r\n  private _setInitValues(\r\n    buttonId: string,\r\n    defaultPaymentType: string,\r\n    paymentTypes: any,\r\n    loadAnimatedCard: boolean,\r\n    jwt: string,\r\n    formId: string\r\n  ): void {\r\n    this._validation = new Validation();\r\n    const locale: string = this._frame.parseUrl().locale || JwtDecode<IStJwtObj>(jwt).payload.locale;\r\n    this._translator = new Translator(locale);\r\n    this._buttonId = buttonId;\r\n    this.formId = formId;\r\n    this._defaultPaymentType = defaultPaymentType;\r\n    this._paymentTypes = paymentTypes;\r\n    this.jwt = jwt;\r\n    this._payMessage = this._translator.translate(PAY);\r\n    this._processingMessage = `${this._translator.translate(PROCESSING)} ...`;\r\n    this._loadAnimatedCard = loadAnimatedCard !== undefined ? loadAnimatedCard : true;\r\n  }\r\n\r\n  private _setSubmitButtonProperties(element: any, state: FormState): HTMLElement {\r\n    let disabledState;\r\n    if (state === FormState.BLOCKED) {\r\n      element.textContent = this._processingMessage;\r\n      element.classList.add(CardFrames.SUBMIT_BUTTON_DISABLED_CLASS);\r\n      disabledState = true;\r\n    } else if (state === FormState.COMPLETE) {\r\n      element.textContent = this._payMessage;\r\n      element.classList.add(CardFrames.SUBMIT_BUTTON_DISABLED_CLASS); // Keep it locked but return it to original text\r\n      disabledState = true;\r\n    } else if (state === FormState.LOADING) {\r\n      element.textContent = this._payMessage;\r\n      disabledState = true;\r\n    } else {\r\n      element.textContent = this._payMessage;\r\n      element.classList.remove(CardFrames.SUBMIT_BUTTON_DISABLED_CLASS);\r\n      disabledState = false;\r\n    }\r\n    element.disabled = disabledState;\r\n    return element;\r\n  }\r\n\r\n  private _submitFormListener(): void {\r\n    if (this._submitButton) {\r\n      this._submitButton.addEventListener(CardFrames.CLICK_EVENT, () => {\r\n        this._publishSubmitEvent();\r\n      });\r\n    }\r\n    this._messageBus.subscribe(MessageBus.EVENTS_PUBLIC.CALL_SUBMIT_EVENT, () => {\r\n      this._publishSubmitEvent();\r\n    });\r\n  }\r\n\r\n  private _subscribeBlockSubmit(): void {\r\n    this._messageBus\r\n      .pipe(ofType(MessageBus.EVENTS_PUBLIC.SUBMIT_FORM))\r\n      .subscribe(() => this._disableSubmitButton(FormState.BLOCKED));\r\n\r\n    this._messageBus.subscribe(MessageBus.EVENTS_PUBLIC.BLOCK_FORM, (state: FormState) => {\r\n      this._disableSubmitButton(state);\r\n      this._disableFormField(state, MessageBus.EVENTS_PUBLIC.BLOCK_CARD_NUMBER, CARD_NUMBER_IFRAME);\r\n      this._disableFormField(state, MessageBus.EVENTS_PUBLIC.BLOCK_EXPIRATION_DATE, EXPIRATION_DATE_IFRAME);\r\n      this._disableFormField(state, MessageBus.EVENTS_PUBLIC.BLOCK_SECURITY_CODE, SECURITY_CODE_IFRAME);\r\n    });\r\n  }\r\n\r\n  private _validateFieldsAfterSubmit(): void {\r\n    this._messageBus.subscribe(MessageBus.EVENTS.VALIDATE_FORM, (data: IValidationMessageBus) => {\r\n      const { cardNumber, expirationDate, securityCode } = data;\r\n      if (!cardNumber.state) {\r\n        this._publishValidatedFieldState(cardNumber, MessageBus.EVENTS.VALIDATE_CARD_NUMBER_FIELD);\r\n      }\r\n      if (!expirationDate.state) {\r\n        this._publishValidatedFieldState(expirationDate, MessageBus.EVENTS.VALIDATE_EXPIRATION_DATE_FIELD);\r\n      }\r\n      if (!securityCode.state) {\r\n        this._publishValidatedFieldState(securityCode, MessageBus.EVENTS.VALIDATE_SECURITY_CODE_FIELD);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _preventFormSubmit(): void {\r\n    const preventFunction = (event: Event) => event.preventDefault();\r\n    const paymentForm = document.getElementById(this.formId);\r\n\r\n    paymentForm.addEventListener(CardFrames.SUBMIT_EVENT, preventFunction);\r\n\r\n    this._messageBus.pipe(ofType(PUBLIC_EVENTS.DESTROY), first()).subscribe(() => {\r\n      paymentForm.removeEventListener(CardFrames.SUBMIT_EVENT, preventFunction);\r\n    });\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\client\\client-bootstrap\\ClientBootstrap.ts":{"language":"typescript","mutants":[{"id":"2887","location":{"end":{"column":4,"line":33},"start":{"column":28,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { SentryService } from '../../shared/services/sentry/SentryService';\nimport { ContainerInstance, Service } from 'typedi';\nimport { BrowserLocalStorage } from '../../shared/services/storage/BrowserLocalStorage';\nimport { environment } from '../../environments/environment';\nimport { MessageSubscriberRegistry } from '../../shared/services/message-bus/MessageSubscriberRegistry';\nimport { FrameIdentifier } from '../../shared/services/message-bus/FrameIdentifier';\nimport { ST } from '../st/ST';\nimport { Store } from '../../application/core/store/Store';\nimport { IConfig } from '../../shared/model/config/IConfig';\nimport { MERCHANT_PARENT_FRAME } from '../../application/core/models/constants/Selectors';\nimport { MessageBus } from '../../application/core/shared/message-bus/MessageBus';\nimport { MessageSubscriberToken } from '../../shared/dependency-injection/InjectionTokens';\n\n@Service()\nexport class ClientBootstrap {\n  constructor(private frameIdentifier: FrameIdentifier, private container: ContainerInstance) {}\n\n  run(config: IConfig): ST {\n    this.frameIdentifier.setFrameName(MERCHANT_PARENT_FRAME);\n\n    this.container.get(MessageBus);\n    this.container.get(Store);\n    this.container.get(BrowserLocalStorage).init();\n    this.container.get(MessageSubscriberRegistry).register(...this.container.getMany(MessageSubscriberToken));\n\n    const st = this.container.get(ST);\n\n    this.container.get(SentryService).init(environment.SENTRY_DSN, environment.SENTRY_WHITELIST_URLS);\n\n    st.init(config);\n\n    return st;\n  }\n}\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\client\\common-frames\\CommonFrames.class.ts":{"language":"typescript","mutants":[{"id":"2889","location":{"end":{"column":4,"line":26},"start":{"column":44,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2888","location":{"end":{"column":4,"line":22},"start":{"column":32,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2890","location":{"end":{"column":94,"line":28},"start":{"column":53,"line":28}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2891","location":{"end":{"column":60,"line":28},"start":{"column":54,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2892","location":{"end":{"column":77,"line":28},"start":{"column":62,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2893","location":{"end":{"column":93,"line":28},"start":{"column":79,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2894","location":{"end":{"column":4,"line":94},"start":{"column":5,"line":70}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2895","location":{"end":{"column":32,"line":76},"start":{"column":27,"line":76}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"2897","location":{"end":{"column":33,"line":86},"start":{"column":31,"line":86}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"2896","location":{"end":{"column":33,"line":82},"start":{"column":31,"line":82}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"2898","location":{"end":{"column":70,"line":91},"start":{"column":19,"line":91}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2899","location":{"end":{"column":4,"line":102},"start":{"column":17,"line":96}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2900","location":{"end":{"column":4,"line":112},"start":{"column":35,"line":104}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2902","location":{"end":{"column":40,"line":106},"start":{"column":11,"line":106}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2901","location":{"end":{"column":6,"line":109},"start":{"column":31,"line":105}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2903","location":{"end":{"column":40,"line":106},"start":{"column":11,"line":106}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2904","location":{"end":{"column":8,"line":108},"start":{"column":42,"line":106}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2905","location":{"end":{"column":39,"line":110},"start":{"column":14,"line":110}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2907","location":{"end":{"column":6,"line":120},"start":{"column":34,"line":115}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2906","location":{"end":{"column":4,"line":121},"start":{"column":72,"line":114}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2908","location":{"end":{"column":24,"line":117},"start":{"column":11,"line":117}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2909","location":{"end":{"column":24,"line":117},"start":{"column":11,"line":117}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2910","location":{"end":{"column":8,"line":119},"start":{"column":26,"line":117}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2911","location":{"end":{"column":4,"line":127},"start":{"column":33,"line":123}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2912","location":{"end":{"column":24,"line":124},"start":{"column":22,"line":124}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"2913","location":{"end":{"column":4,"line":138},"start":{"column":39,"line":129}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2914","location":{"end":{"column":67,"line":131},"start":{"column":9,"line":131}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2915","location":{"end":{"column":67,"line":131},"start":{"column":9,"line":131}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2916","location":{"end":{"column":67,"line":131},"start":{"column":9,"line":131}},"mutatorName":"LogicalOperator","replacement":"data.hasOwnProperty('jwt') || fields.indexOf('jwt') === -1","status":"Survived"},{"id":"2918","location":{"end":{"column":67,"line":131},"start":{"column":39,"line":131}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2917","location":{"end":{"column":34,"line":131},"start":{"column":29,"line":131}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2919","location":{"end":{"column":67,"line":131},"start":{"column":39,"line":131}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2920","location":{"end":{"column":67,"line":131},"start":{"column":39,"line":131}},"mutatorName":"EqualityOperator","replacement":"fields.indexOf('jwt') !== -1","status":"Survived"},{"id":"2921","location":{"end":{"column":59,"line":131},"start":{"column":54,"line":131}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2923","location":{"end":{"column":6,"line":133},"start":{"column":69,"line":131}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2922","location":{"end":{"column":67,"line":131},"start":{"column":65,"line":131}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"2924","location":{"end":{"column":24,"line":132},"start":{"column":19,"line":132}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2925","location":{"end":{"column":89,"line":134},"start":{"column":9,"line":134}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2926","location":{"end":{"column":89,"line":134},"start":{"column":9,"line":134}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2927","location":{"end":{"column":89,"line":134},"start":{"column":9,"line":134}},"mutatorName":"LogicalOperator","replacement":"data.hasOwnProperty('threedresponse') || fields.indexOf('threedresponse') === -1","status":"Survived"},{"id":"2928","location":{"end":{"column":45,"line":134},"start":{"column":29,"line":134}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2930","location":{"end":{"column":89,"line":134},"start":{"column":50,"line":134}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2929","location":{"end":{"column":89,"line":134},"start":{"column":50,"line":134}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2931","location":{"end":{"column":89,"line":134},"start":{"column":50,"line":134}},"mutatorName":"EqualityOperator","replacement":"fields.indexOf('threedresponse') !== -1","status":"Survived"},{"id":"2934","location":{"end":{"column":6,"line":136},"start":{"column":91,"line":134}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2933","location":{"end":{"column":89,"line":134},"start":{"column":87,"line":134}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"2932","location":{"end":{"column":81,"line":134},"start":{"column":65,"line":134}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2935","location":{"end":{"column":35,"line":135},"start":{"column":19,"line":135}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2937","location":{"end":{"column":8,"line":154},"start":{"column":7,"line":150}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2936","location":{"end":{"column":4,"line":159},"start":{"column":29,"line":140}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2938","location":{"end":{"column":9,"line":155},"start":{"column":7,"line":155}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"2940","location":{"end":{"column":74,"line":162},"start":{"column":9,"line":162}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2939","location":{"end":{"column":4,"line":183},"start":{"column":49,"line":161}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2941","location":{"end":{"column":74,"line":162},"start":{"column":9,"line":162}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2943","location":{"end":{"column":55,"line":162},"start":{"column":27,"line":162}},"mutatorName":"ArithmeticOperator","replacement":"this.requestTypes.length + 1","status":"Survived"},{"id":"2942","location":{"end":{"column":74,"line":162},"start":{"column":9,"line":162}},"mutatorName":"EqualityOperator","replacement":"this.requestTypes[this.requestTypes.length - 1] === 'THREEDQUERY'","status":"Survived"},{"id":"2944","location":{"end":{"column":74,"line":162},"start":{"column":61,"line":162}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2945","location":{"end":{"column":6,"line":164},"start":{"column":76,"line":162}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2946","location":{"end":{"column":19,"line":163},"start":{"column":14,"line":163}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"2947","location":{"end":{"column":54,"line":166},"start":{"column":9,"line":166}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2948","location":{"end":{"column":54,"line":166},"start":{"column":9,"line":166}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2949","location":{"end":{"column":54,"line":166},"start":{"column":9,"line":166}},"mutatorName":"EqualityOperator","replacement":"data.requesttypedescription === 'THREEDQUERY'","status":"Survived"},{"id":"2950","location":{"end":{"column":54,"line":166},"start":{"column":41,"line":166}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2951","location":{"end":{"column":6,"line":168},"start":{"column":56,"line":166}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2952","location":{"end":{"column":19,"line":167},"start":{"column":14,"line":167}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"2953","location":{"end":{"column":23,"line":170},"start":{"column":9,"line":170}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2954","location":{"end":{"column":23,"line":170},"start":{"column":9,"line":170}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2955","location":{"end":{"column":6,"line":172},"start":{"column":25,"line":170}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2956","location":{"end":{"column":18,"line":171},"start":{"column":14,"line":171}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2957","location":{"end":{"column":34,"line":174},"start":{"column":9,"line":174}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2959","location":{"end":{"column":34,"line":174},"start":{"column":9,"line":174}},"mutatorName":"EqualityOperator","replacement":"data.acsurl === undefined","status":"Survived"},{"id":"2958","location":{"end":{"column":34,"line":174},"start":{"column":9,"line":174}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2961","location":{"end":{"column":19,"line":175},"start":{"column":14,"line":175}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"2960","location":{"end":{"column":6,"line":176},"start":{"column":36,"line":174}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2962","location":{"end":{"column":42,"line":178},"start":{"column":9,"line":178}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2963","location":{"end":{"column":42,"line":178},"start":{"column":9,"line":178}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2964","location":{"end":{"column":42,"line":178},"start":{"column":9,"line":178}},"mutatorName":"EqualityOperator","replacement":"data.threedresponse === undefined","status":"Survived"},{"id":"2965","location":{"end":{"column":6,"line":180},"start":{"column":44,"line":178}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2966","location":{"end":{"column":18,"line":179},"start":{"column":14,"line":179}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2967","location":{"end":{"column":33,"line":182},"start":{"column":12,"line":182}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2968","location":{"end":{"column":33,"line":182},"start":{"column":12,"line":182}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2969","location":{"end":{"column":33,"line":182},"start":{"column":12,"line":182}},"mutatorName":"EqualityOperator","replacement":"data.enrolled === 'Y'","status":"Survived"},{"id":"2970","location":{"end":{"column":33,"line":182},"start":{"column":30,"line":182}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2972","location":{"end":{"column":83,"line":186},"start":{"column":9,"line":186}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2971","location":{"end":{"column":4,"line":201},"start":{"column":54,"line":185}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2974","location":{"end":{"column":6,"line":188},"start":{"column":85,"line":186}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2973","location":{"end":{"column":83,"line":186},"start":{"column":9,"line":186}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2975","location":{"end":{"column":18,"line":187},"start":{"column":14,"line":187}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2976","location":{"end":{"column":37,"line":190},"start":{"column":9,"line":190}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2977","location":{"end":{"column":37,"line":190},"start":{"column":9,"line":190}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2978","location":{"end":{"column":6,"line":192},"start":{"column":39,"line":190}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2979","location":{"end":{"column":18,"line":191},"start":{"column":14,"line":191}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2980","location":{"end":{"column":51,"line":194},"start":{"column":29,"line":194}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"2982","location":{"end":{"column":93,"line":196},"start":{"column":9,"line":196}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2981","location":{"end":{"column":93,"line":196},"start":{"column":9,"line":196}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2983","location":{"end":{"column":93,"line":196},"start":{"column":9,"line":196}},"mutatorName":"LogicalOperator","replacement":"data.requesttypedescription === lastRequestType || lastRequestType !== 'THREEDQUERY'","status":"Survived"},{"id":"2984","location":{"end":{"column":56,"line":196},"start":{"column":9,"line":196}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2985","location":{"end":{"column":56,"line":196},"start":{"column":9,"line":196}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2986","location":{"end":{"column":56,"line":196},"start":{"column":9,"line":196}},"mutatorName":"EqualityOperator","replacement":"data.requesttypedescription !== lastRequestType","status":"Survived"},{"id":"2987","location":{"end":{"column":93,"line":196},"start":{"column":60,"line":196}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2988","location":{"end":{"column":93,"line":196},"start":{"column":60,"line":196}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"2989","location":{"end":{"column":93,"line":196},"start":{"column":60,"line":196}},"mutatorName":"EqualityOperator","replacement":"lastRequestType === 'THREEDQUERY'","status":"Survived"},{"id":"2990","location":{"end":{"column":93,"line":196},"start":{"column":80,"line":196}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2992","location":{"end":{"column":18,"line":197},"start":{"column":14,"line":197}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"2991","location":{"end":{"column":6,"line":198},"start":{"column":95,"line":196}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2993","location":{"end":{"column":17,"line":200},"start":{"column":12,"line":200}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"2994","location":{"end":{"column":4,"line":209},"start":{"column":34,"line":203}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2996","location":{"end":{"column":4,"line":241},"start":{"column":51,"line":211}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2995","location":{"end":{"column":6,"line":207},"start":{"column":29,"line":204}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"2997","location":{"end":{"column":68,"line":212},"start":{"column":9,"line":212}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"2999","location":{"end":{"column":68,"line":212},"start":{"column":9,"line":212}},"mutatorName":"LogicalOperator","replacement":"this._isTransactionFinished(data) && data.errorcode !== '0'","status":"Survived"},{"id":"2998","location":{"end":{"column":68,"line":212},"start":{"column":9,"line":212}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3000","location":{"end":{"column":68,"line":212},"start":{"column":46,"line":212}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3002","location":{"end":{"column":68,"line":212},"start":{"column":46,"line":212}},"mutatorName":"EqualityOperator","replacement":"data.errorcode === '0'","status":"Survived"},{"id":"3001","location":{"end":{"column":68,"line":212},"start":{"column":46,"line":212}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3003","location":{"end":{"column":68,"line":212},"start":{"column":65,"line":212}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3004","location":{"end":{"column":6,"line":214},"start":{"column":70,"line":212}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3005","location":{"end":{"column":102,"line":213},"start":{"column":32,"line":213}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3006","location":{"end":{"column":108,"line":213},"start":{"column":104,"line":213}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3007","location":{"end":{"column":17,"line":218},"start":{"column":13,"line":218}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3009","location":{"end":{"column":71,"line":219},"start":{"column":12,"line":219}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3008","location":{"end":{"column":15,"line":222},"start":{"column":7,"line":219}},"mutatorName":"ConditionalExpression","replacement":"case this._isTransactionFinished(data) && data.errorcode === '0':","status":"Survived"},{"id":"3010","location":{"end":{"column":71,"line":219},"start":{"column":12,"line":219}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3012","location":{"end":{"column":71,"line":219},"start":{"column":49,"line":219}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3011","location":{"end":{"column":71,"line":219},"start":{"column":12,"line":219}},"mutatorName":"LogicalOperator","replacement":"this._isTransactionFinished(data) || data.errorcode === '0'","status":"Survived"},{"id":"3013","location":{"end":{"column":71,"line":219},"start":{"column":49,"line":219}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3014","location":{"end":{"column":71,"line":219},"start":{"column":49,"line":219}},"mutatorName":"EqualityOperator","replacement":"data.errorcode !== '0'","status":"Survived"},{"id":"3015","location":{"end":{"column":71,"line":219},"start":{"column":68,"line":219}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3016","location":{"end":{"column":27,"line":220},"start":{"column":18,"line":220}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3017","location":{"end":{"column":58,"line":221},"start":{"column":16,"line":221}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3018","location":{"end":{"column":15,"line":226},"start":{"column":7,"line":223}},"mutatorName":"ConditionalExpression","replacement":"case data.errorcode === 'cancelled':","status":"Survived"},{"id":"3019","location":{"end":{"column":42,"line":223},"start":{"column":12,"line":223}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3021","location":{"end":{"column":42,"line":223},"start":{"column":12,"line":223}},"mutatorName":"EqualityOperator","replacement":"data.errorcode !== 'cancelled'","status":"Survived"},{"id":"3020","location":{"end":{"column":42,"line":223},"start":{"column":12,"line":223}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3022","location":{"end":{"column":42,"line":223},"start":{"column":31,"line":223}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3023","location":{"end":{"column":26,"line":224},"start":{"column":18,"line":224}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3025","location":{"end":{"column":15,"line":229},"start":{"column":7,"line":227}},"mutatorName":"ConditionalExpression","replacement":"case data.errorcode !== '0':","status":"Survived"},{"id":"3024","location":{"end":{"column":60,"line":225},"start":{"column":16,"line":225}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3026","location":{"end":{"column":34,"line":227},"start":{"column":12,"line":227}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3027","location":{"end":{"column":34,"line":227},"start":{"column":12,"line":227}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3028","location":{"end":{"column":34,"line":227},"start":{"column":12,"line":227}},"mutatorName":"EqualityOperator","replacement":"data.errorcode === '0'","status":"Survived"},{"id":"3029","location":{"end":{"column":34,"line":227},"start":{"column":31,"line":227}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3030","location":{"end":{"column":25,"line":228},"start":{"column":18,"line":228}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3031","location":{"end":{"column":50,"line":237},"start":{"column":7,"line":235}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3032","location":{"end":{"column":50,"line":237},"start":{"column":7,"line":235}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3033","location":{"end":{"column":50,"line":237},"start":{"column":7,"line":235}},"mutatorName":"LogicalOperator","replacement":"(result === 'success' && this._submitOnSuccess || result === 'cancel' && this._submitOnCancel) && result === 'error' && this._submitOnError","status":"Survived"},{"id":"3034","location":{"end":{"column":52,"line":236},"start":{"column":7,"line":235}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3036","location":{"end":{"column":52,"line":236},"start":{"column":7,"line":235}},"mutatorName":"LogicalOperator","replacement":"result === 'success' && this._submitOnSuccess && result === 'cancel' && this._submitOnCancel","status":"Survived"},{"id":"3035","location":{"end":{"column":52,"line":236},"start":{"column":7,"line":235}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3037","location":{"end":{"column":53,"line":235},"start":{"column":8,"line":235}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3038","location":{"end":{"column":53,"line":235},"start":{"column":8,"line":235}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3039","location":{"end":{"column":53,"line":235},"start":{"column":8,"line":235}},"mutatorName":"LogicalOperator","replacement":"result === 'success' || this._submitOnSuccess","status":"Survived"},{"id":"3040","location":{"end":{"column":28,"line":235},"start":{"column":8,"line":235}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3041","location":{"end":{"column":28,"line":235},"start":{"column":8,"line":235}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3042","location":{"end":{"column":28,"line":235},"start":{"column":8,"line":235}},"mutatorName":"EqualityOperator","replacement":"result !== 'success'","status":"Survived"},{"id":"3043","location":{"end":{"column":28,"line":235},"start":{"column":19,"line":235}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3044","location":{"end":{"column":51,"line":236},"start":{"column":8,"line":236}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3047","location":{"end":{"column":27,"line":236},"start":{"column":8,"line":236}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3045","location":{"end":{"column":51,"line":236},"start":{"column":8,"line":236}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3046","location":{"end":{"column":51,"line":236},"start":{"column":8,"line":236}},"mutatorName":"LogicalOperator","replacement":"result === 'cancel' || this._submitOnCancel","status":"Survived"},{"id":"3048","location":{"end":{"column":27,"line":236},"start":{"column":8,"line":236}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3049","location":{"end":{"column":27,"line":236},"start":{"column":8,"line":236}},"mutatorName":"EqualityOperator","replacement":"result !== 'cancel'","status":"Survived"},{"id":"3051","location":{"end":{"column":49,"line":237},"start":{"column":8,"line":237}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3050","location":{"end":{"column":27,"line":236},"start":{"column":19,"line":236}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3052","location":{"end":{"column":49,"line":237},"start":{"column":8,"line":237}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3053","location":{"end":{"column":49,"line":237},"start":{"column":8,"line":237}},"mutatorName":"LogicalOperator","replacement":"result === 'error' || this._submitOnError","status":"Survived"},{"id":"3054","location":{"end":{"column":26,"line":237},"start":{"column":8,"line":237}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3055","location":{"end":{"column":26,"line":237},"start":{"column":8,"line":237}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3056","location":{"end":{"column":26,"line":237},"start":{"column":8,"line":237}},"mutatorName":"EqualityOperator","replacement":"result !== 'error'","status":"Survived"},{"id":"3057","location":{"end":{"column":26,"line":237},"start":{"column":19,"line":237}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3059","location":{"end":{"column":4,"line":248},"start":{"column":25,"line":243}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3058","location":{"end":{"column":6,"line":240},"start":{"column":7,"line":238}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3060","location":{"end":{"column":29,"line":244},"start":{"column":9,"line":244}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3062","location":{"end":{"column":29,"line":244},"start":{"column":9,"line":244}},"mutatorName":"BooleanLiteral","replacement":"this._formSubmitted","status":"Survived"},{"id":"3061","location":{"end":{"column":29,"line":244},"start":{"column":9,"line":244}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3063","location":{"end":{"column":6,"line":247},"start":{"column":31,"line":244}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3065","location":{"end":{"column":4,"line":252},"start":{"column":36,"line":250}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3064","location":{"end":{"column":33,"line":245},"start":{"column":29,"line":245}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3066","location":{"end":{"column":4,"line":259},"start":{"column":40,"line":254}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3068","location":{"end":{"column":34,"line":257},"start":{"column":27,"line":257}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3067","location":{"end":{"column":6,"line":258},"start":{"column":27,"line":256}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3070","location":{"end":{"column":32,"line":265},"start":{"column":13,"line":265}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3071","location":{"end":{"column":8,"line":282},"start":{"column":33,"line":268}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3069","location":{"end":{"column":4,"line":283},"start":{"column":45,"line":261}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3073","location":{"end":{"column":45,"line":269},"start":{"column":13,"line":269}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3072","location":{"end":{"column":45,"line":269},"start":{"column":13,"line":269}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3074","location":{"end":{"column":45,"line":269},"start":{"column":13,"line":269}},"mutatorName":"EqualityOperator","replacement":"data.walletsource === 'APPLEPAY'","status":"Survived"},{"id":"3075","location":{"end":{"column":45,"line":269},"start":{"column":35,"line":269}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3077","location":{"end":{"column":49,"line":275},"start":{"column":19,"line":275}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3076","location":{"end":{"column":10,"line":272},"start":{"column":47,"line":269}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3078","location":{"end":{"column":55,"line":277},"start":{"column":20,"line":277}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3079","location":{"end":{"column":55,"line":277},"start":{"column":39,"line":277}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3080","location":{"end":{"column":55,"line":277},"start":{"column":39,"line":277}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3081","location":{"end":{"column":55,"line":277},"start":{"column":39,"line":277}},"mutatorName":"EqualityOperator","replacement":"value !== 'true'","status":"Survived"},{"id":"3083","location":{"end":{"column":61,"line":281},"start":{"column":22,"line":281}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3082","location":{"end":{"column":55,"line":277},"start":{"column":49,"line":277}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { IStyles } from '../../shared/model/config/IStyles';\r\nimport { IframeFactory } from '../iframe-factory/IframeFactory';\r\nimport { DomMethods } from '../../application/core/shared/dom-methods/DomMethods';\r\nimport { MessageBus } from '../../application/core/shared/message-bus/MessageBus';\r\nimport { Validation } from '../../application/core/shared/validation/Validation';\r\nimport { Container } from 'typedi';\r\nimport { BrowserLocalStorage } from '../../shared/services/storage/BrowserLocalStorage';\r\nimport { IComponentsIds } from '../../shared/model/config/IComponentsIds';\r\nimport { delay, filter, first, map, takeUntil } from 'rxjs/operators';\r\nimport { ofType } from '../../shared/services/message-bus/operators/ofType';\r\nimport { Observable } from 'rxjs';\r\nimport { PUBLIC_EVENTS } from '../../application/core/models/constants/EventTypes';\r\nimport { IMessageBusEvent } from '../../application/core/models/IMessageBusEvent';\r\nimport { Frame } from '../../application/core/shared/frame/Frame';\r\nimport { StJwt } from '../../application/core/shared/stjwt/StJwt';\r\nimport { PAYMENT_CANCELLED, PAYMENT_SUCCESS } from '../../application/core/models/constants/Translations';\r\nimport { CONTROL_FRAME_COMPONENT_NAME, CONTROL_FRAME_IFRAME } from '../../application/core/models/constants/Selectors';\r\n\r\nexport class CommonFrames {\r\n  get requestTypes(): string[] {\r\n    return this._requestTypes;\r\n  }\r\n\r\n  set requestTypes(requestTypes: string[]) {\r\n    this._requestTypes = requestTypes;\r\n  }\r\n\r\n  private static readonly COMPLETED_REQUEST_TYPES = ['AUTH', 'CACHETOKENISE', 'ACCOUNTCHECK'];\r\n  public elementsTargets: any;\r\n  public elementsToRegister: HTMLElement[];\r\n  private _controlFrame: HTMLIFrameElement;\r\n  private _messageBus: MessageBus;\r\n  private _requestTypes: string[];\r\n  private readonly _gatewayUrl: string;\r\n  private readonly _merchantForm: HTMLFormElement;\r\n  private _validation: Validation;\r\n  private _formSubmitted: boolean;\r\n  private readonly _submitFields: string[];\r\n  private readonly _submitOnError: boolean;\r\n  private readonly _submitOnSuccess: boolean;\r\n  private readonly _submitOnCancel: boolean;\r\n  private _localStorage: BrowserLocalStorage = Container.get(BrowserLocalStorage);\r\n  private _destroy$: Observable<IMessageBusEvent>;\r\n  protected styles: IStyles;\r\n  protected params: any;\r\n  protected jwt: string;\r\n  protected origin: string;\r\n  protected componentIds: any;\r\n  protected submitCallback: any;\r\n  protected fieldsToSubmit: string[];\r\n  protected messageBus: MessageBus;\r\n  protected formId: string;\r\n  private _stJwt: StJwt;\r\n\r\n  constructor(\r\n    jwt: string,\r\n    origin: string,\r\n    componentIds: IComponentsIds,\r\n    styles: IStyles,\r\n    submitOnSuccess: boolean,\r\n    submitOnError: boolean,\r\n    submitOnCancel: boolean,\r\n    submitFields: string[],\r\n    gatewayUrl: string,\r\n    animatedCard: boolean,\r\n    requestTypes: string[],\r\n    formId: string,\r\n    private _iframeFactory: IframeFactory,\r\n    private _frame: Frame\r\n  ) {\r\n    this._gatewayUrl = gatewayUrl;\r\n    this._messageBus = Container.get(MessageBus);\r\n    this.formId = formId;\r\n    this._merchantForm = document.getElementById(formId) as HTMLFormElement;\r\n    this._validation = new Validation();\r\n    this._formSubmitted = false;\r\n    this._submitFields = submitFields;\r\n    this._submitOnError = submitOnError;\r\n    this._submitOnCancel = submitOnCancel;\r\n    this._submitOnSuccess = submitOnSuccess;\r\n    this._requestTypes = requestTypes;\r\n    this.elementsToRegister = [];\r\n    this.componentIds = componentIds;\r\n    this.formId = formId;\r\n    this.componentIds = componentIds;\r\n    this.elementsToRegister = [];\r\n    this.jwt = jwt;\r\n    this.origin = origin;\r\n    this.styles = this._getStyles(styles);\r\n    this._stJwt = new StJwt(jwt);\r\n    this.params = { locale: this._stJwt.locale, origin: this.origin };\r\n    this._destroy$ = this._messageBus.pipe(ofType(PUBLIC_EVENTS.DESTROY));\r\n    this.styles = this._getStyles(styles);\r\n  }\r\n\r\n  public init() {\r\n    this._initFormFields();\r\n    this._setMerchantInputListeners();\r\n    this._setTransactionCompleteListener();\r\n    this.elementsTargets = this.setElementsFields();\r\n    this.registerElements(this.elementsToRegister, this.elementsTargets);\r\n  }\r\n\r\n  private _getStyles(styles: any) {\r\n    for (const key in styles) {\r\n      if (styles[key] instanceof Object) {\r\n        return styles;\r\n      }\r\n    }\r\n    styles = { defaultStyles: styles };\r\n    return styles;\r\n  }\r\n\r\n  protected registerElements(fields: HTMLElement[], targets: string[]) {\r\n    targets.map((item, index) => {\r\n      const itemToChange = document.getElementById(item);\r\n      if (fields[index]) {\r\n        itemToChange.appendChild(fields[index]);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected setElementsFields() {\r\n    const elements = [];\r\n    elements.push(this.formId);\r\n    return elements;\r\n  }\r\n\r\n  private _getSubmitFields(data: any) {\r\n    const fields = this._submitFields;\r\n    if (data.hasOwnProperty('jwt') && fields.indexOf('jwt') === -1) {\r\n      fields.push('jwt');\r\n    }\r\n    if (data.hasOwnProperty('threedresponse') && fields.indexOf('threedresponse') === -1) {\r\n      fields.push('threedresponse');\r\n    }\r\n    return fields;\r\n  }\r\n\r\n  private _initFormFields() {\r\n    const { defaultStyles } = this.styles;\r\n    let { controlFrame } = this.styles;\r\n\r\n    controlFrame = Object.assign({}, defaultStyles, controlFrame);\r\n\r\n    this._controlFrame = this._iframeFactory.create(\r\n      CONTROL_FRAME_COMPONENT_NAME,\r\n      CONTROL_FRAME_IFRAME,\r\n      controlFrame,\r\n      {\r\n        gatewayUrl: this._gatewayUrl,\r\n        jwt: this.jwt,\r\n        origin: this.origin\r\n      },\r\n      -1\r\n    );\r\n\r\n    this.elementsToRegister.push(this._controlFrame);\r\n  }\r\n\r\n  private _isThreedComplete(data: any): boolean {\r\n    if (this.requestTypes[this.requestTypes.length - 1] !== 'THREEDQUERY') {\r\n      return false;\r\n    }\r\n\r\n    if (data.requesttypedescription !== 'THREEDQUERY') {\r\n      return false;\r\n    }\r\n\r\n    if (data.validated) {\r\n      return true;\r\n    }\r\n\r\n    if (data.acsurl !== undefined) {\r\n      return false;\r\n    }\r\n\r\n    if (data.threedresponse !== undefined) {\r\n      return true;\r\n    }\r\n\r\n    return data.enrolled !== 'Y';\r\n  }\r\n\r\n  private _isTransactionFinished(data: any): boolean {\r\n    if (CommonFrames.COMPLETED_REQUEST_TYPES.includes(data.requesttypedescription)) {\r\n      return true;\r\n    }\r\n\r\n    if (this._isThreedComplete(data)) {\r\n      return true;\r\n    }\r\n\r\n    const lastRequestType = [...this.requestTypes].pop();\r\n\r\n    if (data.requesttypedescription === lastRequestType && lastRequestType !== 'THREEDQUERY') {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private _onInput(event: Event) {\r\n    const messageBusEvent = {\r\n      data: DomMethods.parseForm(this.formId),\r\n      type: MessageBus.EVENTS_PUBLIC.UPDATE_MERCHANT_FIELDS\r\n    };\r\n    this._messageBus.publish(messageBusEvent);\r\n  }\r\n\r\n  private _onTransactionComplete(data: any): void {\r\n    if (this._isTransactionFinished(data) || data.errorcode !== '0') {\r\n      this._messageBus.publish({ data, type: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_SUBMIT_CALLBACK }, true);\r\n    }\r\n\r\n    let result: 'success' | 'error' | 'cancel';\r\n\r\n    switch (true) {\r\n      case this._isTransactionFinished(data) && data.errorcode === '0':\r\n        result = 'success';\r\n        data = { ...data, errormessage: PAYMENT_SUCCESS };\r\n        break;\r\n      case data.errorcode === 'cancelled':\r\n        result = 'cancel';\r\n        data = { ...data, errormessage: PAYMENT_CANCELLED };\r\n        break;\r\n      case data.errorcode !== '0':\r\n        result = 'error';\r\n        break;\r\n    }\r\n\r\n    this.addSubmitData(data);\r\n\r\n    if (\r\n      (result === 'success' && this._submitOnSuccess) ||\r\n      (result === 'cancel' && this._submitOnCancel) ||\r\n      (result === 'error' && this._submitOnError)\r\n    ) {\r\n      this._submitForm();\r\n    }\r\n  }\r\n\r\n  private _submitForm() {\r\n    if (!this._formSubmitted) {\r\n      this._formSubmitted = true;\r\n      this._merchantForm.submit();\r\n    }\r\n  }\r\n\r\n  private addSubmitData(data: any) {\r\n    DomMethods.addDataToForm(this._merchantForm, data, this._getSubmitFields(data));\r\n  }\r\n\r\n  private _setMerchantInputListeners() {\r\n    const els = DomMethods.getAllFormElements(this._merchantForm);\r\n    for (const el of els) {\r\n      el.addEventListener('input', this._onInput.bind(this));\r\n    }\r\n  }\r\n\r\n  private _setTransactionCompleteListener() {\r\n    this._messageBus\r\n      .pipe(\r\n        ofType(MessageBus.EVENTS_PUBLIC.TRANSACTION_COMPLETE),\r\n        map(event => event.data),\r\n        takeUntil(this._destroy$)\r\n      )\r\n      .subscribe((data: any) => {\r\n        if (data.walletsource !== 'APPLEPAY') {\r\n          this._onTransactionComplete(data);\r\n          return;\r\n        }\r\n\r\n        this._localStorage\r\n          .select(store => store.completePayment)\r\n          .pipe(\r\n            filter((value: string) => value === 'true'),\r\n            first(),\r\n            delay(4000)\r\n          )\r\n          .subscribe(() => this._onTransactionComplete(data));\r\n      });\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\client\\dependency-injection\\ServiceDefinitions.ts":{"language":"typescript","mutants":[{"id":"3084","location":{"end":{"column":82,"line":6},"start":{"column":15,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3086","location":{"end":{"column":42,"line":8},"start":{"column":18,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"3085","location":{"end":{"column":80,"line":6},"start":{"column":46,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import { Container } from 'typedi';\nimport { ConfigProvider } from '../../shared/services/config-provider/ConfigProvider';\nimport { ConfigService } from '../../shared/services/config-service/ConfigService';\nimport { PreventNavigationPopup } from '../message-subscribers/PreventNavigationPopup';\n\nContainer.set({ id: ConfigProvider, factory: () => Container.get(ConfigService) });\n\nContainer.import([PreventNavigationPopup]);\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\client\\iframe-factory\\IframeFactory.ts":{"language":"typescript","mutants":[{"id":"3087","location":{"end":{"column":6,"line":21},"start":{"column":20,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3088","location":{"end":{"column":4,"line":45},"start":{"column":104,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3089","location":{"end":{"column":51,"line":28},"start":{"column":43,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3090","location":{"end":{"column":112,"line":29},"start":{"column":25,"line":29}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"3091","location":{"end":{"column":105,"line":29},"start":{"column":84,"line":29}},"mutatorName":"ArithmeticOperator","replacement":"'&' - componentParams","status":"Survived"},{"id":"3092","location":{"end":{"column":87,"line":29},"start":{"column":84,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3093","location":{"end":{"column":110,"line":29},"start":{"column":108,"line":29}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3094","location":{"end":{"column":6,"line":40},"start":{"column":49,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3095","location":{"end":{"column":30,"line":36},"start":{"column":26,"line":36}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3097","location":{"end":{"column":101,"line":43},"start":{"column":37,"line":43}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3096","location":{"end":{"column":22,"line":37},"start":{"column":18,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { IStyle } from '../../shared/model/config/IStyle';\r\nimport { IframeFactoryAttributes } from './IframeFactoryAttributes';\r\nimport {\r\n  ANIMATED_CARD_COMPONENT,\r\n  CARD_NUMBER_COMPONENT,\r\n  CONTROL_FRAME_COMPONENT,\r\n  EXPIRATION_DATE_COMPONENT,\r\n  SECURITY_CODE_COMPONENT\r\n} from '../../application/core/models/constants/Selectors';\r\n\r\n@Service()\r\nexport class IframeFactory {\r\n  private static URLS = new Map(\r\n    Object.entries({\r\n      cardNumber: CARD_NUMBER_COMPONENT,\r\n      expirationDate: EXPIRATION_DATE_COMPONENT,\r\n      securityCode: SECURITY_CODE_COMPONENT,\r\n      animatedCard: ANIMATED_CARD_COMPONENT,\r\n      controlFrame: CONTROL_FRAME_COMPONENT\r\n    })\r\n  );\r\n\r\n  create(name: string, id: string, styles?: IStyle, params?: {}, tabIndex?: number): HTMLIFrameElement {\r\n    const componentParams = new URLSearchParams(params).toString();\r\n    const componentStyles = new URLSearchParams(styles).toString();\r\n    const componentAddress = IframeFactory.URLS.get(name);\r\n    const iframe = document.createElement('iframe');\r\n    const src: string = `${componentAddress}?${componentStyles}${componentParams ? '&' + componentParams : ''}`;\r\n\r\n    const attributes: IframeFactoryAttributes = {\r\n      id,\r\n      class: id,\r\n      src,\r\n      name: id,\r\n      allowTransparency: true,\r\n      scrolling: 'no',\r\n      frameBorder: 0,\r\n      tabIndex\r\n    };\r\n\r\n    // @ts-ignore\r\n    Object.keys(attributes).forEach((value: string) => iframe.setAttribute(value, attributes[value]));\r\n    return iframe;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\client\\merchant-fields\\MerchantFields.ts":{"language":"typescript","mutants":[{"id":"3098","location":{"end":{"column":79,"line":7},"start":{"column":69,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3099","location":{"end":{"column":71,"line":8},"start":{"column":57,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3100","location":{"end":{"column":92,"line":9},"start":{"column":56,"line":9}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"3102","location":{"end":{"column":62,"line":11},"start":{"column":52,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3101","location":{"end":{"column":57,"line":10},"start":{"column":50,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3103","location":{"end":{"column":4,"line":23},"start":{"column":17,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3104","location":{"end":{"column":4,"line":27},"start":{"column":23,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3105","location":{"end":{"column":4,"line":41},"start":{"column":48,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3107","location":{"end":{"column":4,"line":49},"start":{"column":64,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3106","location":{"end":{"column":6,"line":40},"start":{"column":32,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3108","location":{"end":{"column":6,"line":48},"start":{"column":12,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3109","location":{"end":{"column":4,"line":55},"start":{"column":54,"line":51}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3110","location":{"end":{"column":6,"line":54},"start":{"column":65,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Container } from 'typedi';\r\nimport { MessageBus } from '../../application/core/shared/message-bus/MessageBus';\r\nimport { Validation } from '../../application/core/shared/validation/Validation';\r\nimport { Frame } from '../../application/core/shared/frame/Frame';\r\n\r\nexport class MerchantFields {\r\n  private static readonly ADJACENT_HTML_PLACEMENT: InsertPosition = 'afterend';\r\n  private static readonly DATA_ATTRIBUTE_NAME: string = 'data-st-name';\r\n  private static readonly ERROR_LABEL_MARKUP: string = `<div class=\"st-error-label\"></div>`;\r\n  private static readonly INPUT_MARKUP: string = 'input';\r\n  private static readonly KEYPRESS_EVENT: string = 'keypress';\r\n\r\n  private readonly _inputs: HTMLCollection;\r\n  private _messageBus: MessageBus;\r\n  private _validation: Validation;\r\n  private _frame: Frame;\r\n\r\n  constructor() {\r\n    this._inputs = document.getElementsByTagName(MerchantFields.INPUT_MARKUP);\r\n    this._messageBus = Container.get(MessageBus);\r\n    this._frame = Container.get(Frame);\r\n    this._validation = new Validation();\r\n  }\r\n\r\n  public init(): void {\r\n    this._setMerchantFieldsProperties();\r\n  }\r\n\r\n  private _setMerchantFieldsProperties(): void {\r\n    const { inputs } = this._getMerchantInputs();\r\n    for (const item of inputs) {\r\n      const { inputElement, messageElement } = Validation.returnInputAndErrorContainerPair(item);\r\n      Validation.addErrorContainer(\r\n        inputElement,\r\n        MerchantFields.ADJACENT_HTML_PLACEMENT,\r\n        MerchantFields.ERROR_LABEL_MARKUP\r\n      );\r\n      this._onKeyPress(inputElement);\r\n      this._validation.backendValidation(inputElement, messageElement, MessageBus.EVENTS.VALIDATE_MERCHANT_FIELD);\r\n    }\r\n  }\r\n\r\n  private _getMerchantInputs(): { inputs: HTMLInputElement[] } {\r\n    return {\r\n      inputs: Array.from(this._inputs).filter(item =>\r\n        item.hasAttribute(MerchantFields.DATA_ATTRIBUTE_NAME)\r\n      ) as HTMLInputElement[]\r\n    };\r\n  }\r\n\r\n  private _onKeyPress(input: HTMLInputElement): void {\r\n    input.addEventListener(MerchantFields.KEYPRESS_EVENT, () => {\r\n      Validation.resetValidationProperties(input);\r\n    });\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\client\\message-subscribers\\PreventNavigationPopup.ts":{"language":"typescript","mutants":[{"id":"3111","location":{"end":{"column":4,"line":27},"start":{"column":42,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3112","location":{"end":{"column":6,"line":18},"start":{"column":63,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3113","location":{"end":{"column":89,"line":22},"start":{"column":18,"line":22}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3115","location":{"end":{"column":92,"line":26},"start":{"column":18,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3114","location":{"end":{"column":67,"line":22},"start":{"column":53,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3116","location":{"end":{"column":70,"line":26},"start":{"column":56,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { IMessageSubscriber } from '../../shared/services/message-bus/interfaces/IMessageSubscriber';\nimport { Inject, Service } from 'typedi';\nimport { ofType } from '../../shared/services/message-bus/operators/ofType';\nimport { takeUntil } from 'rxjs/operators';\nimport { MessageSubscriberToken, WINDOW } from '../../shared/dependency-injection/InjectionTokens';\nimport { MessageBus } from '../../application/core/shared/message-bus/MessageBus';\nimport { PUBLIC_EVENTS } from '../../application/core/models/constants/EventTypes';\n\n@Service({ id: MessageSubscriberToken, multiple: true })\nexport class PreventNavigationPopup implements IMessageSubscriber {\n  constructor(@Inject(WINDOW) private window: Window) {}\n\n  register(messageBus: MessageBus): void {\n    const destroy = messageBus.pipe(ofType(PUBLIC_EVENTS.DESTROY));\n    const beforeUnloadHandler = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = undefined;\n    };\n\n    messageBus\n      .pipe(ofType(PUBLIC_EVENTS.SUBMIT_FORM), takeUntil(destroy))\n      .subscribe(() => this.window.addEventListener('beforeunload', beforeUnloadHandler));\n\n    messageBus\n      .pipe(ofType(PUBLIC_EVENTS.CALL_MERCHANT_SUBMIT_CALLBACK), takeUntil(destroy))\n      .subscribe(() => this.window.removeEventListener('beforeunload', beforeUnloadHandler));\n  }\n}\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\client\\notification\\NotificationService.ts":{"language":"typescript","mutants":[{"id":"3117","location":{"end":{"column":4,"line":13},"start":{"column":46,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3118","location":{"end":{"column":107,"line":12},"start":{"column":102,"line":12}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3119","location":{"end":{"column":4,"line":17},"start":{"column":40,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3120","location":{"end":{"column":101,"line":16},"start":{"column":96,"line":16}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3121","location":{"end":{"column":4,"line":21},"start":{"column":42,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3122","location":{"end":{"column":103,"line":20},"start":{"column":98,"line":20}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3123","location":{"end":{"column":4,"line":25},"start":{"column":41,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3125","location":{"end":{"column":4,"line":31},"start":{"column":39,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3124","location":{"end":{"column":102,"line":24},"start":{"column":97,"line":24}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3126","location":{"end":{"column":57,"line":28},"start":{"column":9,"line":28}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3127","location":{"end":{"column":57,"line":28},"start":{"column":9,"line":28}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3128","location":{"end":{"column":57,"line":28},"start":{"column":9,"line":28}},"mutatorName":"LogicalOperator","replacement":"!this.disableNotification || !this.submitOnError","status":"Survived"},{"id":"3130","location":{"end":{"column":57,"line":28},"start":{"column":38,"line":28}},"mutatorName":"BooleanLiteral","replacement":"this.submitOnError","status":"Survived"},{"id":"3129","location":{"end":{"column":34,"line":28},"start":{"column":9,"line":28}},"mutatorName":"BooleanLiteral","replacement":"this.disableNotification","status":"Survived"},{"id":"3131","location":{"end":{"column":6,"line":30},"start":{"column":59,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3132","location":{"end":{"column":4,"line":35},"start":{"column":38,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3133","location":{"end":{"column":4,"line":41},"start":{"column":41,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3135","location":{"end":{"column":59,"line":38},"start":{"column":9,"line":38}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3134","location":{"end":{"column":59,"line":38},"start":{"column":9,"line":38}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3138","location":{"end":{"column":59,"line":38},"start":{"column":38,"line":38}},"mutatorName":"BooleanLiteral","replacement":"this.submitOnSuccess","status":"Survived"},{"id":"3136","location":{"end":{"column":59,"line":38},"start":{"column":9,"line":38}},"mutatorName":"LogicalOperator","replacement":"!this.disableNotification || !this.submitOnSuccess","status":"Survived"},{"id":"3137","location":{"end":{"column":34,"line":38},"start":{"column":9,"line":38}},"mutatorName":"BooleanLiteral","replacement":"this.disableNotification","status":"Survived"},{"id":"3141","location":{"end":{"column":58,"line":44},"start":{"column":9,"line":44}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3140","location":{"end":{"column":4,"line":47},"start":{"column":40,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3139","location":{"end":{"column":6,"line":40},"start":{"column":61,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3142","location":{"end":{"column":58,"line":44},"start":{"column":9,"line":44}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3143","location":{"end":{"column":58,"line":44},"start":{"column":9,"line":44}},"mutatorName":"LogicalOperator","replacement":"!this.disableNotification || !this.submitOnCancel","status":"Survived"},{"id":"3144","location":{"end":{"column":34,"line":44},"start":{"column":9,"line":44}},"mutatorName":"BooleanLiteral","replacement":"this.disableNotification","status":"Survived"},{"id":"3145","location":{"end":{"column":58,"line":44},"start":{"column":38,"line":44}},"mutatorName":"BooleanLiteral","replacement":"this.submitOnCancel","status":"Survived"},{"id":"3146","location":{"end":{"column":6,"line":46},"start":{"column":60,"line":44}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3147","location":{"end":{"column":4,"line":55},"start":{"column":65,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3148","location":{"end":{"column":6,"line":53},"start":{"column":47,"line":50}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3149","location":{"end":{"column":30,"line":51},"start":{"column":13,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3150","location":{"end":{"column":51,"line":54},"start":{"column":47,"line":54}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"}],"source":"import { MessageBus } from '../../application/core/shared/message-bus/MessageBus';\r\nimport { Service } from 'typedi';\r\nimport { NotificationType } from '../../application/core/models/constants/NotificationType';\r\nimport { IMessageBusEvent } from '../../application/core/models/IMessageBusEvent';\r\nimport { ConfigProvider } from '../../shared/services/config-provider/ConfigProvider';\r\n\r\n@Service()\r\nexport class NotificationService {\r\n  constructor(private _messageBus: MessageBus, private _configProvider: ConfigProvider) {}\r\n\r\n  private get disableNotification(): boolean {\r\n    return this._configProvider.getConfig() ? this._configProvider.getConfig().disableNotification : false;\r\n  }\r\n\r\n  private get submitOnError(): boolean {\r\n    return this._configProvider.getConfig() ? this._configProvider.getConfig().submitOnError : false;\r\n  }\r\n\r\n  private get submitOnSuccess(): boolean {\r\n    return this._configProvider.getConfig() ? this._configProvider.getConfig().submitOnSuccess : false;\r\n  }\r\n\r\n  private get submitOnCancel(): boolean {\r\n    return this._configProvider.getConfig() ? this._configProvider.getConfig().submitOnCancel : false;\r\n  }\r\n\r\n  public error(message: string): void {\r\n    if (!this.disableNotification && !this.submitOnError) {\r\n      this._setNotification(NotificationType.Error, message);\r\n    }\r\n  }\r\n\r\n  public info(message: string): void {\r\n    this._setNotification(NotificationType.Info, message);\r\n  }\r\n\r\n  public success(message: string): void {\r\n    if (!this.disableNotification && !this.submitOnSuccess) {\r\n      this._setNotification(NotificationType.Success, message);\r\n    }\r\n  }\r\n\r\n  public cancel(message: string): void {\r\n    if (!this.disableNotification && !this.submitOnCancel) {\r\n      this._setNotification(NotificationType.Cancel, message);\r\n    }\r\n  }\r\n\r\n  private _setNotification(type: string, content: string): void {\r\n    const messageBusEvent: IMessageBusEvent = {\r\n      data: { content, type },\r\n      type: MessageBus.EVENTS_PUBLIC.NOTIFICATION\r\n    };\r\n    this._messageBus.publish(messageBusEvent, true);\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\client\\st\\ST.ts":{"language":"typescript","mutants":[{"id":"3151","location":{"end":{"column":82,"line":49},"start":{"column":54,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3152","location":{"end":{"column":51,"line":50},"start":{"column":43,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3153","location":{"end":{"column":80,"line":51},"start":{"column":58,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3154","location":{"end":{"column":62,"line":52},"start":{"column":55,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3155","location":{"end":{"column":83,"line":53},"start":{"column":60,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3157","location":{"end":{"column":87,"line":55},"start":{"column":59,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3156","location":{"end":{"column":81,"line":54},"start":{"column":59,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3158","location":{"end":{"column":4,"line":71},"start":{"column":63,"line":65}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3159","location":{"end":{"column":17,"line":66},"start":{"column":9,"line":66}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3160","location":{"end":{"column":17,"line":66},"start":{"column":9,"line":66}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3161","location":{"end":{"column":6,"line":68},"start":{"column":19,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3162","location":{"end":{"column":23,"line":67},"start":{"column":15,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3163","location":{"end":{"column":6,"line":70},"start":{"column":12,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3165","location":{"end":{"column":4,"line":79},"start":{"column":65,"line":73}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3164","location":{"end":{"column":24,"line":69},"start":{"column":16,"line":69}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3166","location":{"end":{"column":17,"line":74},"start":{"column":9,"line":74}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3167","location":{"end":{"column":17,"line":74},"start":{"column":9,"line":74}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3168","location":{"end":{"column":6,"line":76},"start":{"column":19,"line":74}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3169","location":{"end":{"column":24,"line":75},"start":{"column":15,"line":75}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3170","location":{"end":{"column":6,"line":78},"start":{"column":12,"line":76}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3171","location":{"end":{"column":25,"line":77},"start":{"column":16,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3172","location":{"end":{"column":4,"line":87},"start":{"column":61,"line":81}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3173","location":{"end":{"column":17,"line":82},"start":{"column":9,"line":82}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3174","location":{"end":{"column":17,"line":82},"start":{"column":9,"line":82}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3175","location":{"end":{"column":6,"line":84},"start":{"column":19,"line":82}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3176","location":{"end":{"column":22,"line":83},"start":{"column":15,"line":83}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3177","location":{"end":{"column":6,"line":86},"start":{"column":12,"line":84}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3178","location":{"end":{"column":23,"line":85},"start":{"column":16,"line":85}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3179","location":{"end":{"column":4,"line":95},"start":{"column":62,"line":89}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3180","location":{"end":{"column":17,"line":90},"start":{"column":9,"line":90}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3181","location":{"end":{"column":17,"line":90},"start":{"column":9,"line":90}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3182","location":{"end":{"column":6,"line":92},"start":{"column":19,"line":90}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3185","location":{"end":{"column":24,"line":93},"start":{"column":16,"line":93}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3183","location":{"end":{"column":23,"line":91},"start":{"column":15,"line":91}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3184","location":{"end":{"column":6,"line":94},"start":{"column":12,"line":92}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3186","location":{"end":{"column":4,"line":111},"start":{"column":5,"line":108}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3187","location":{"end":{"column":4,"line":131},"start":{"column":105,"line":113}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3188","location":{"end":{"column":6,"line":119},"start":{"column":20,"line":114}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3189","location":{"end":{"column":32,"line":126},"start":{"column":13,"line":126}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3191","location":{"end":{"column":45,"line":134},"start":{"column":9,"line":134}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3192","location":{"end":{"column":45,"line":134},"start":{"column":9,"line":134}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3190","location":{"end":{"column":4,"line":138},"start":{"column":39,"line":133}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3193","location":{"end":{"column":6,"line":137},"start":{"column":47,"line":134}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3194","location":{"end":{"column":4,"line":165},"start":{"column":66,"line":140}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3195","location":{"end":{"column":15,"line":141},"start":{"column":9,"line":141}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3196","location":{"end":{"column":15,"line":141},"start":{"column":9,"line":141}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3197","location":{"end":{"column":6,"line":143},"start":{"column":17,"line":141}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3198","location":{"end":{"column":69,"line":142},"start":{"column":57,"line":142}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3200","location":{"end":{"column":12,"line":155},"start":{"column":56,"line":152}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3199","location":{"end":{"column":10,"line":158},"start":{"column":35,"line":151}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3202","location":{"end":{"column":4,"line":175},"start":{"column":60,"line":167}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3201","location":{"end":{"column":8,"line":164},"start":{"column":24,"line":160}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3203","location":{"end":{"column":15,"line":170},"start":{"column":9,"line":170}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3205","location":{"end":{"column":6,"line":172},"start":{"column":17,"line":170}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3204","location":{"end":{"column":15,"line":170},"start":{"column":9,"line":170}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3206","location":{"end":{"column":67,"line":171},"start":{"column":57,"line":171}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3207","location":{"end":{"column":4,"line":185},"start":{"column":70,"line":177}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3208","location":{"end":{"column":15,"line":180},"start":{"column":9,"line":180}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3209","location":{"end":{"column":15,"line":180},"start":{"column":9,"line":180}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3211","location":{"end":{"column":71,"line":181},"start":{"column":57,"line":181}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3210","location":{"end":{"column":6,"line":182},"start":{"column":17,"line":180}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3213","location":{"end":{"column":11,"line":198},"start":{"column":24,"line":188}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3212","location":{"end":{"column":4,"line":200},"start":{"column":41,"line":187}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3214","location":{"end":{"column":113,"line":193},"start":{"column":21,"line":192}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3215","location":{"end":{"column":97,"line":193},"start":{"column":43,"line":193}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3217","location":{"end":{"column":4,"line":212},"start":{"column":39,"line":202}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3216","location":{"end":{"column":10,"line":198},"start":{"column":37,"line":196}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3218","location":{"end":{"column":12,"line":203},"start":{"column":9,"line":203}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3219","location":{"end":{"column":12,"line":203},"start":{"column":9,"line":203}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3221","location":{"end":{"column":8,"line":208},"start":{"column":14,"line":205}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3220","location":{"end":{"column":6,"line":209},"start":{"column":14,"line":203}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3223","location":{"end":{"column":6,"line":211},"start":{"column":12,"line":209}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3224","location":{"end":{"column":4,"line":225},"start":{"column":26,"line":214}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3222","location":{"end":{"column":25,"line":207},"start":{"column":18,"line":207}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3225","location":{"end":{"column":8,"line":218},"start":{"column":7,"line":216}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3226","location":{"end":{"column":11,"line":219},"start":{"column":7,"line":219}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3228","location":{"end":{"column":4,"line":245},"start":{"column":41,"line":243}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3227","location":{"end":{"column":4,"line":241},"start":{"column":38,"line":227}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3229","location":{"end":{"column":4,"line":264},"start":{"column":30,"line":247}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3230","location":{"end":{"column":4,"line":283},"start":{"column":32,"line":266}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3231","location":{"end":{"column":4,"line":290},"start":{"column":55,"line":285}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3232","location":{"end":{"column":6,"line":289},"start":{"column":12,"line":286}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3234","location":{"end":{"column":4,"line":309},"start":{"column":56,"line":297}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3233","location":{"end":{"column":4,"line":295},"start":{"column":27,"line":292}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3235","location":{"end":{"column":20,"line":298},"start":{"column":9,"line":298}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3237","location":{"end":{"column":20,"line":298},"start":{"column":9,"line":298}},"mutatorName":"BooleanLiteral","replacement":"liveStatus","status":"Survived"},{"id":"3236","location":{"end":{"column":20,"line":298},"start":{"column":9,"line":298}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3238","location":{"end":{"column":6,"line":308},"start":{"column":22,"line":298}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3239","location":{"end":{"column":116,"line":301},"start":{"column":9,"line":301}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3240","location":{"end":{"column":58,"line":302},"start":{"column":9,"line":302}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3242","location":{"end":{"column":60,"line":304},"start":{"column":9,"line":304}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3241","location":{"end":{"column":44,"line":303},"start":{"column":9,"line":303}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3243","location":{"end":{"column":44,"line":305},"start":{"column":9,"line":305}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3245","location":{"end":{"column":4,"line":332},"start":{"column":39,"line":311}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3244","location":{"end":{"column":63,"line":306},"start":{"column":9,"line":306}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3246","location":{"end":{"column":46,"line":312},"start":{"column":32,"line":312}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"3247","location":{"end":{"column":38,"line":312},"start":{"column":33,"line":312}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3248","location":{"end":{"column":45,"line":312},"start":{"column":40,"line":312}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3251","location":{"end":{"column":43,"line":322},"start":{"column":11,"line":322}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3250","location":{"end":{"column":43,"line":322},"start":{"column":11,"line":322}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3249","location":{"end":{"column":6,"line":326},"start":{"column":49,"line":314}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3252","location":{"end":{"column":43,"line":322},"start":{"column":11,"line":322}},"mutatorName":"LogicalOperator","replacement":"previousStatus || !currentStatus","status":"Survived"},{"id":"3254","location":{"end":{"column":8,"line":325},"start":{"column":45,"line":322}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3253","location":{"end":{"column":43,"line":322},"start":{"column":29,"line":322}},"mutatorName":"BooleanLiteral","replacement":"currentStatus","status":"Survived"},{"id":"3255","location":{"end":{"column":6,"line":331},"start":{"column":32,"line":328}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3256","location":{"end":{"column":20,"line":329},"start":{"column":16,"line":329}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3257","location":{"end":{"column":22,"line":330},"start":{"column":18,"line":330}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3258","location":{"end":{"column":4,"line":350},"start":{"column":48,"line":334}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3259","location":{"end":{"column":30,"line":335},"start":{"column":9,"line":335}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3260","location":{"end":{"column":30,"line":335},"start":{"column":9,"line":335}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3261","location":{"end":{"column":6,"line":337},"start":{"column":32,"line":335}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3264","location":{"end":{"column":6,"line":341},"start":{"column":33,"line":339}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3262","location":{"end":{"column":31,"line":339},"start":{"column":9,"line":339}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3263","location":{"end":{"column":31,"line":339},"start":{"column":9,"line":339}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3265","location":{"end":{"column":29,"line":343},"start":{"column":9,"line":343}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3266","location":{"end":{"column":29,"line":343},"start":{"column":9,"line":343}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3267","location":{"end":{"column":6,"line":345},"start":{"column":31,"line":343}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3270","location":{"end":{"column":6,"line":349},"start":{"column":32,"line":347}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3269","location":{"end":{"column":30,"line":347},"start":{"column":9,"line":347}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3268","location":{"end":{"column":30,"line":347},"start":{"column":9,"line":347}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3272","location":{"end":{"column":94,"line":357},"start":{"column":18,"line":357}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3273","location":{"end":{"column":97,"line":361},"start":{"column":18,"line":361}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3271","location":{"end":{"column":4,"line":362},"start":{"column":41,"line":352}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3275","location":{"end":{"column":14,"line":367},"start":{"column":9,"line":367}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3274","location":{"end":{"column":4,"line":380},"start":{"column":37,"line":364}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3277","location":{"end":{"column":14,"line":367},"start":{"column":9,"line":367}},"mutatorName":"BooleanLiteral","replacement":"form","status":"Survived"},{"id":"3276","location":{"end":{"column":14,"line":367},"start":{"column":9,"line":367}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3278","location":{"end":{"column":6,"line":369},"start":{"column":16,"line":367}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3279","location":{"end":{"column":51,"line":374},"start":{"column":7,"line":372}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3280","location":{"end":{"column":51,"line":374},"start":{"column":7,"line":372}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3281","location":{"end":{"column":51,"line":374},"start":{"column":7,"line":372}},"mutatorName":"LogicalOperator","replacement":"((document.getElementById(this._config.buttonId) as HTMLInputElement | HTMLButtonElement) || form.querySelector(ST.BUTTON_SUBMIT_SELECTOR)) && form.querySelector(ST.INPUT_SUBMIT_SELECTOR)","status":"Survived"},{"id":"3282","location":{"end":{"column":52,"line":373},"start":{"column":7,"line":372}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3283","location":{"end":{"column":52,"line":373},"start":{"column":7,"line":372}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3284","location":{"end":{"column":52,"line":373},"start":{"column":7,"line":372}},"mutatorName":"LogicalOperator","replacement":"(document.getElementById(this._config.buttonId) as HTMLInputElement | HTMLButtonElement) && form.querySelector(ST.BUTTON_SUBMIT_SELECTOR)","status":"Survived"},{"id":"3285","location":{"end":{"column":21,"line":376},"start":{"column":9,"line":376}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3287","location":{"end":{"column":6,"line":379},"start":{"column":23,"line":376}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3286","location":{"end":{"column":21,"line":376},"start":{"column":9,"line":376}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3288","location":{"end":{"column":35,"line":378},"start":{"column":31,"line":378}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3289","location":{"end":{"column":2,"line":385},"start":{"column":37,"line":383}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import './st.css';\r\nimport JwtDecode from 'jwt-decode';\r\nimport { debounce } from 'lodash';\r\nimport '../../application/core/shared/override-domain/OverrideDomain';\r\nimport { CardFrames } from '../card-frames/CardFrames.class';\r\nimport { CommonFrames } from '../common-frames/CommonFrames.class';\r\nimport { MerchantFields } from '../merchant-fields/MerchantFields';\r\nimport { StCodec } from '../../application/core/services/st-codec/StCodec.class';\r\nimport { ApplePay } from '../../application/core/integrations/apple-pay/ApplePay';\r\nimport { ApplePayMock } from '../../application/core/integrations/apple-pay/ApplePayMock';\r\nimport { GoogleAnalytics } from '../../application/core/integrations/google-analytics/GoogleAnalytics';\r\nimport { VisaCheckout } from '../../application/core/integrations/visa-checkout/VisaCheckout';\r\nimport { VisaCheckoutMock } from '../../application/core/integrations/visa-checkout/VisaCheckoutMock';\r\nimport { IApplePay } from '../../application/core/models/IApplePay';\r\nimport { IComponentsConfig } from '../../shared/model/config/IComponentsConfig';\r\nimport { IConfig } from '../../shared/model/config/IConfig';\r\nimport { IStJwtObj } from '../../application/core/models/IStJwtObj';\r\nimport { IVisaConfig } from '../../application/core/integrations/visa-checkout/IVisaConfig';\r\nimport { MessageBus } from '../../application/core/shared/message-bus/MessageBus';\r\nimport { Translator } from '../../application/core/shared/translator/Translator';\r\nimport { environment } from '../../environments/environment';\r\nimport { Service, Container } from 'typedi';\r\nimport { ConfigService } from '../../shared/services/config-service/ConfigService';\r\nimport { ISubmitEvent } from '../../application/core/models/ISubmitEvent';\r\nimport { ISuccessEvent } from '../../application/core/models/ISuccessEvent';\r\nimport { IErrorEvent } from '../../application/core/models/IErrorEvent';\r\nimport { InterFrameCommunicator } from '../../shared/services/message-bus/InterFrameCommunicator';\r\nimport { FramesHub } from '../../shared/services/message-bus/FramesHub';\r\nimport { BrowserLocalStorage } from '../../shared/services/storage/BrowserLocalStorage';\r\nimport { Notification } from '../../application/core/shared/notification/Notification';\r\nimport { ofType } from '../../shared/services/message-bus/operators/ofType';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { delay, map, takeUntil } from 'rxjs/operators';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { from } from 'rxjs';\r\nimport { ConfigProvider } from '../../shared/services/config-provider/ConfigProvider';\r\nimport { PUBLIC_EVENTS } from '../../application/core/models/constants/EventTypes';\r\nimport { IframeFactory } from '../iframe-factory/IframeFactory';\r\nimport { IMessageBusEvent } from '../../application/core/models/IMessageBusEvent';\r\nimport { Frame } from '../../application/core/shared/frame/Frame';\r\nimport { CONTROL_FRAME_IFRAME } from '../../application/core/models/constants/Selectors';\r\nimport { ClientBootstrap } from '../client-bootstrap/ClientBootstrap';\r\nimport { BrowserDetector } from '../../shared/services/browser-detector/BrowserDetector';\r\nimport { IBrowserInfo } from '../../shared/services/browser-detector/IBrowserInfo';\r\n\r\n@Service()\r\nexport class ST {\r\n  private static DEBOUNCE_JWT_VALUE: number = 900;\r\n  private static JWT_NOT_SPECIFIED_MESSAGE: string = 'Jwt has not been specified';\r\n  private static LOCALE_STORAGE: string = 'locale';\r\n  private static MERCHANT_TRANSLATIONS_STORAGE: string = 'merchantTranslations';\r\n  private static readonly MODAL_CONTROL_FRAME_CLASS = 'modal';\r\n  private static readonly BUTTON_SUBMIT_SELECTOR: string = 'button[type=\"submit\"]';\r\n  private static readonly INPUT_SUBMIT_SELECTOR: string = 'input[type=\"submit\"]';\r\n  private static readonly BUTTON_DISABLED_CLASS: string = 'st-button-submit__disabled';\r\n  private _config: IConfig;\r\n  private _cardFrames: CardFrames;\r\n  private _commonFrames: CommonFrames;\r\n  private _googleAnalytics: GoogleAnalytics;\r\n  private _merchantFields: MerchantFields;\r\n  private _translation: Translator;\r\n  private _destroy$: Subject<void> = new Subject();\r\n  private _registeredCallbacks: { [eventName: string]: Subscription } = {};\r\n\r\n  set submitCallback(callback: (event: ISubmitEvent) => void) {\r\n    if (callback) {\r\n      this.on('submit', callback);\r\n    } else {\r\n      this.off('submit');\r\n    }\r\n  }\r\n\r\n  set successCallback(callback: (event: ISuccessEvent) => void) {\r\n    if (callback) {\r\n      this.on('success', callback);\r\n    } else {\r\n      this.off('success');\r\n    }\r\n  }\r\n\r\n  set errorCallback(callback: (event: IErrorEvent) => void) {\r\n    if (callback) {\r\n      this.on('error', callback);\r\n    } else {\r\n      this.off('error');\r\n    }\r\n  }\r\n\r\n  set cancelCallback(callback: (event: IErrorEvent) => void) {\r\n    if (callback) {\r\n      this.on('cancel', callback);\r\n    } else {\r\n      this.off('cancel');\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private _configService: ConfigService,\r\n    private _configProvider: ConfigProvider,\r\n    private _communicator: InterFrameCommunicator,\r\n    private _framesHub: FramesHub,\r\n    private _storage: BrowserLocalStorage,\r\n    private _messageBus: MessageBus,\r\n    private _notification: Notification,\r\n    private _iframeFactory: IframeFactory,\r\n    private _frameService: Frame,\r\n    private _browserDetector: BrowserDetector\r\n  ) {\r\n    this._googleAnalytics = new GoogleAnalytics();\r\n    this._merchantFields = new MerchantFields();\r\n  }\r\n\r\n  public on(eventName: 'success' | 'error' | 'submit' | 'cancel', callback: (event: any) => void): void {\r\n    const events = {\r\n      cancel: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_CANCEL_CALLBACK,\r\n      success: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_SUCCESS_CALLBACK,\r\n      error: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_ERROR_CALLBACK,\r\n      submit: MessageBus.EVENTS_PUBLIC.CALL_MERCHANT_SUBMIT_CALLBACK\r\n    };\r\n\r\n    this.off(eventName);\r\n\r\n    this._registeredCallbacks[eventName] = this._messageBus\r\n      .pipe(\r\n        ofType(events[eventName]),\r\n        map(event => event.data),\r\n        delay(0),\r\n        takeUntil(this._destroy$)\r\n      )\r\n      .subscribe(callback);\r\n  }\r\n\r\n  public off(eventName: string): void {\r\n    if (this._registeredCallbacks[eventName]) {\r\n      this._registeredCallbacks[eventName].unsubscribe();\r\n      this._registeredCallbacks[eventName] = undefined;\r\n    }\r\n  }\r\n\r\n  public Components(config: IComponentsConfig | undefined): void {\r\n    if (config) {\r\n      this._config = this._configService.updateFragment('components', config);\r\n    }\r\n\r\n    this.blockSubmitButton();\r\n    // @ts-ignore\r\n    this._commonFrames._requestTypes = this._config.components.requestTypes;\r\n    this._framesHub\r\n      .waitForFrame(CONTROL_FRAME_IFRAME)\r\n      .pipe(\r\n        switchMap(controlFrame => {\r\n          const queryEvent: IMessageBusEvent<string> = {\r\n            type: PUBLIC_EVENTS.INIT_CONTROL_FRAME,\r\n            data: JSON.stringify(this._config)\r\n          };\r\n\r\n          return from(this._communicator.query(queryEvent, controlFrame));\r\n        })\r\n      )\r\n      .subscribe(() => {\r\n        this.CardFrames();\r\n        this._cardFrames.init();\r\n        this._merchantFields.init();\r\n      });\r\n  }\r\n\r\n  public ApplePay(config: IApplePay | undefined): ApplePay {\r\n    const { applepay } = this.Environment();\r\n\r\n    if (config) {\r\n      this._config = this._configService.updateFragment('applePay', config);\r\n    }\r\n\r\n    return new applepay(this._configProvider, this._communicator);\r\n  }\r\n\r\n  public VisaCheckout(config: IVisaConfig | undefined): VisaCheckout {\r\n    const { visa } = this.Environment();\r\n\r\n    if (config) {\r\n      this._config = this._configService.updateFragment('visaCheckout', config);\r\n    }\r\n\r\n    return new visa(this._configProvider, this._communicator);\r\n  }\r\n\r\n  public Cybertonica(): Promise<string> {\r\n    return new Promise(resolve =>\r\n      this._framesHub\r\n        .waitForFrame(CONTROL_FRAME_IFRAME)\r\n        .pipe(\r\n          switchMap((controlFrame: string) =>\r\n            from(this._communicator.query({ type: MessageBus.EVENTS_PUBLIC.GET_CYBERTONICA_TID }, controlFrame))\r\n          )\r\n        )\r\n        .subscribe((tid: string) => {\r\n          resolve(tid);\r\n        })\r\n    );\r\n  }\r\n\r\n  public updateJWT(jwt: string): void {\r\n    if (jwt) {\r\n      this._config = this._configService.updateJwt(jwt);\r\n      (() => {\r\n        const a = StCodec.updateJWTValue(jwt);\r\n        debounce(() => a, ST.DEBOUNCE_JWT_VALUE);\r\n      })();\r\n    } else {\r\n      throw Error(this._translation.translate(ST.JWT_NOT_SPECIFIED_MESSAGE));\r\n    }\r\n  }\r\n\r\n  public destroy(): void {\r\n    this._messageBus.publish(\r\n      {\r\n        type: MessageBus.EVENTS_PUBLIC.DESTROY\r\n      },\r\n      true\r\n    );\r\n\r\n    this._destroy$.next();\r\n    this._destroy$.complete();\r\n    this._communicator.close();\r\n  }\r\n\r\n  public init(config: IConfig): void {\r\n    this._framesHub.reset();\r\n    this._storage.init();\r\n    this._config = this._configService.setup(config);\r\n    StCodec.updateJWTValue(config.jwt);\r\n    this.initCallbacks(config);\r\n    this.Storage();\r\n    this._translation = new Translator(this._storage.getItem(ST.LOCALE_STORAGE));\r\n    this._googleAnalytics.init();\r\n    this.CommonFrames();\r\n    this._commonFrames.init();\r\n    this.displayLiveStatus(Boolean(this._config.livestatus));\r\n    this.watchForFrameUnload();\r\n    this.initControlFrameModal();\r\n  }\r\n\r\n  public getBrowserInfo(): IBrowserInfo {\r\n    return this._browserDetector.getBrowserInfo();\r\n  }\r\n\r\n  private CardFrames(): void {\r\n    this._cardFrames = new CardFrames(\r\n      this._config.jwt,\r\n      this._config.origin,\r\n      this._config.componentIds,\r\n      this._config.styles,\r\n      this._config.components.paymentTypes,\r\n      this._config.components.defaultPaymentType,\r\n      this._config.animatedCard,\r\n      this._config.buttonId,\r\n      this._config.fieldsToSubmit,\r\n      this._config.formId,\r\n      this._configProvider,\r\n      this._iframeFactory,\r\n      this._frameService,\r\n      this._messageBus\r\n    );\r\n  }\r\n\r\n  private CommonFrames(): void {\r\n    this._commonFrames = new CommonFrames(\r\n      this._config.jwt,\r\n      this._config.origin,\r\n      this._config.componentIds,\r\n      this._config.styles,\r\n      this._config.submitOnSuccess,\r\n      this._config.submitOnError,\r\n      this._config.submitOnCancel,\r\n      this._config.submitFields,\r\n      this._config.datacenterurl,\r\n      this._config.animatedCard,\r\n      this._config.components.requestTypes,\r\n      this._config.formId,\r\n      this._iframeFactory,\r\n      this._frameService\r\n    );\r\n  }\r\n\r\n  private Environment(): { applepay: any; visa: any } {\r\n    return {\r\n      applepay: environment.testEnvironment ? ApplePayMock : ApplePay,\r\n      visa: environment.testEnvironment ? VisaCheckoutMock : VisaCheckout\r\n    };\r\n  }\r\n\r\n  private Storage(): void {\r\n    this._storage.setItem(ST.MERCHANT_TRANSLATIONS_STORAGE, JSON.stringify(this._config.translations));\r\n    this._storage.setItem(ST.LOCALE_STORAGE, JwtDecode<IStJwtObj>(this._config.jwt).payload.locale);\r\n  }\r\n\r\n  private displayLiveStatus(liveStatus: boolean): void {\r\n    if (!liveStatus) {\r\n      /* tslint:disable:no-console */\r\n      console.log(\r\n        '%cThe %csecure%c//%ctrading %cLibrary is currently working in test mode. Please check your configuration.',\r\n        'margin: 100px 0; font-size: 2em; color: #e71b5a',\r\n        'font-size: 2em; font-weight: bold',\r\n        'font-size: 2em; font-weight: 1000; color: #e71b5a',\r\n        'font-size: 2em; font-weight: bold',\r\n        'font-size: 2em; font-weight: regular; color: #e71b5a'\r\n      );\r\n    }\r\n  }\r\n\r\n  private watchForFrameUnload(): void {\r\n    const controlFrameStatus = [false, false];\r\n\r\n    const observer = new MutationObserver(() => {\r\n      const controlFrame = document.getElementById(CONTROL_FRAME_IFRAME);\r\n\r\n      controlFrameStatus.push(Boolean(controlFrame));\r\n      controlFrameStatus.shift();\r\n\r\n      const [previousStatus, currentStatus] = controlFrameStatus;\r\n\r\n      if (previousStatus && !currentStatus) {\r\n        this.destroy();\r\n        observer.disconnect();\r\n      }\r\n    });\r\n\r\n    observer.observe(document, {\r\n      subtree: true,\r\n      childList: true\r\n    });\r\n  }\r\n\r\n  private initCallbacks(config: IConfig): void {\r\n    if (config.submitCallback) {\r\n      this.submitCallback = config.submitCallback;\r\n    }\r\n\r\n    if (config.successCallback) {\r\n      this.successCallback = config.successCallback;\r\n    }\r\n\r\n    if (config.errorCallback) {\r\n      this.errorCallback = config.errorCallback;\r\n    }\r\n\r\n    if (config.cancelCallback) {\r\n      this.cancelCallback = config.cancelCallback;\r\n    }\r\n  }\r\n\r\n  private initControlFrameModal(): void {\r\n    const className = ST.MODAL_CONTROL_FRAME_CLASS;\r\n\r\n    this._messageBus\r\n      .pipe(ofType(MessageBus.EVENTS_PUBLIC.CONTROL_FRAME_SHOW), takeUntil(this._destroy$))\r\n      .subscribe(() => document.getElementById(CONTROL_FRAME_IFRAME).classList.add(className));\r\n\r\n    this._messageBus\r\n      .pipe(ofType(MessageBus.EVENTS_PUBLIC.CONTROL_FRAME_HIDE), takeUntil(this._destroy$))\r\n      .subscribe(() => document.getElementById(CONTROL_FRAME_IFRAME).classList.remove(className));\r\n  }\r\n\r\n  private blockSubmitButton(): void {\r\n    const form: HTMLFormElement = document.getElementById(this._config.formId) as HTMLFormElement;\r\n\r\n    if (!form) {\r\n      return;\r\n    }\r\n\r\n    const submitButton: HTMLInputElement | HTMLButtonElement =\r\n      (document.getElementById(this._config.buttonId) as HTMLInputElement | HTMLButtonElement) ||\r\n      form.querySelector(ST.BUTTON_SUBMIT_SELECTOR) ||\r\n      form.querySelector(ST.INPUT_SUBMIT_SELECTOR);\r\n\r\n    if (submitButton) {\r\n      submitButton.classList.add(ST.BUTTON_DISABLED_CLASS);\r\n      submitButton.disabled = true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default (config: IConfig) => {\r\n  return Container.get(ClientBootstrap).run(config);\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\environments\\environment.prod.ts":{"language":"typescript","mutants":[{"id":"3290","location":{"end":{"column":73,"line":1},"start":{"column":29,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3291","location":{"end":{"column":69,"line":2},"start":{"column":34,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3292","location":{"end":{"column":2,"line":34},"start":{"column":28,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3294","location":{"end":{"column":6,"line":8},"start":{"column":13,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3293","location":{"end":{"column":4,"line":14},"start":{"column":22,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3295","location":{"end":{"column":32,"line":7},"start":{"column":16,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3296","location":{"end":{"column":30,"line":7},"start":{"column":25,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3297","location":{"end":{"column":6,"line":11},"start":{"column":11,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3299","location":{"end":{"column":83,"line":12},"start":{"column":24,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3298","location":{"end":{"column":76,"line":10},"start":{"column":30,"line":10}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"3300","location":{"end":{"column":87,"line":13},"start":{"column":24,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3301","location":{"end":{"column":59,"line":15},"start":{"column":14,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3302","location":{"end":{"column":34,"line":17},"start":{"column":22,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3303","location":{"end":{"column":65,"line":18},"start":{"column":18,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3304","location":{"end":{"column":4,"line":25},"start":{"column":23,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3305","location":{"end":{"column":90,"line":21},"start":{"column":22,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3306","location":{"end":{"column":100,"line":22},"start":{"column":15,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3307","location":{"end":{"column":98,"line":23},"start":{"column":22,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3308","location":{"end":{"column":115,"line":24},"start":{"column":15,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3310","location":{"end":{"column":83,"line":27},"start":{"column":27,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3309","location":{"end":{"column":4,"line":28},"start":{"column":16,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3311","location":{"end":{"column":19,"line":29},"start":{"column":15,"line":29}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3312","location":{"end":{"column":25,"line":30},"start":{"column":20,"line":30}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3313","location":{"end":{"column":21,"line":31},"start":{"column":19,"line":31}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3314","location":{"end":{"column":90,"line":32},"start":{"column":15,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3315","location":{"end":{"column":67,"line":33},"start":{"column":26,"line":33}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"3316","location":{"end":{"column":66,"line":33},"start":{"column":27,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"const GATEWAY_URL: string = 'https://webservices.securetrading.net/jwt/';\r\nconst MOCK_GATEWAY_URL: string = 'https://merchant.example.com:8443';\r\n\r\nexport const environment = {\r\n  CARDINAL_COMMERCE: {\r\n    CONFIG: {\r\n      logging: { level: 'off' }\r\n    },\r\n    MOCK: {\r\n      AUTHENTICATE_CARD_URL: `${MOCK_GATEWAY_URL}/cardinalAuthenticateCard`\r\n    },\r\n    SONGBIRD_LIVE_URL: 'https://songbird.cardinalcommerce.com/edge/v1/songbird.js',\r\n    SONGBIRD_TEST_URL: 'https://songbirdstag.cardinalcommerce.com/edge/v1/songbird.js'\r\n  },\r\n  FRAME_URL: 'https://webservices.securetrading.net/js/v2',\r\n  GATEWAY_URL,\r\n  GA_MEASUREMENT_ID: '42057093-6',\r\n  GA_SCRIPT_SRC: 'https://www.google-analytics.com/analytics.js',\r\n  NOTIFICATION_TTL: 7000,\r\n  VISA_CHECKOUT_URLS: {\r\n    LIVE_BUTTON_URL: 'https://secure.checkout.visa.com/wallet-services-web/xo/button.png',\r\n    LIVE_SDK: 'https://secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js',\r\n    TEST_BUTTON_URL: 'https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png',\r\n    TEST_SDK: 'https://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js'\r\n  },\r\n  CYBERTONICA: {\r\n    CYBERTONICA_LIVE_URL: 'https://cyber.securetrading.net/js/v2/afeasdwqwdasd.js'\r\n  },\r\n  production: true,\r\n  testEnvironment: false,\r\n  overrideDomain: '',\r\n  SENTRY_DSN: 'https://6319b9ff1fb14ba48cd2c9025d67bd2d@o402164.ingest.sentry.io/5262818',\r\n  SENTRY_WHITELIST_URLS: ['https://webservices.securetrading.net']\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\environments\\environment.rc.ts":{"language":"typescript","mutants":[{"id":"3317","location":{"end":{"column":73,"line":2},"start":{"column":29,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3318","location":{"end":{"column":69,"line":3},"start":{"column":34,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3319","location":{"end":{"column":2,"line":35},"start":{"column":28,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3321","location":{"end":{"column":6,"line":9},"start":{"column":13,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3320","location":{"end":{"column":4,"line":15},"start":{"column":22,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3323","location":{"end":{"column":30,"line":8},"start":{"column":25,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3322","location":{"end":{"column":32,"line":8},"start":{"column":16,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3324","location":{"end":{"column":6,"line":12},"start":{"column":11,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3325","location":{"end":{"column":76,"line":11},"start":{"column":30,"line":11}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"3326","location":{"end":{"column":83,"line":13},"start":{"column":24,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3327","location":{"end":{"column":87,"line":14},"start":{"column":24,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3328","location":{"end":{"column":34,"line":18},"start":{"column":22,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3329","location":{"end":{"column":65,"line":19},"start":{"column":18,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3330","location":{"end":{"column":4,"line":26},"start":{"column":23,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3331","location":{"end":{"column":90,"line":22},"start":{"column":22,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3332","location":{"end":{"column":100,"line":23},"start":{"column":15,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3334","location":{"end":{"column":115,"line":25},"start":{"column":15,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3333","location":{"end":{"column":98,"line":24},"start":{"column":22,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3335","location":{"end":{"column":4,"line":29},"start":{"column":16,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3336","location":{"end":{"column":83,"line":28},"start":{"column":27,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3337","location":{"end":{"column":19,"line":30},"start":{"column":15,"line":30}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3339","location":{"end":{"column":21,"line":32},"start":{"column":19,"line":32}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3338","location":{"end":{"column":25,"line":31},"start":{"column":20,"line":31}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3340","location":{"end":{"column":90,"line":33},"start":{"column":15,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3341","location":{"end":{"column":67,"line":34},"start":{"column":26,"line":34}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"3342","location":{"end":{"column":66,"line":34},"start":{"column":27,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"declare const WEBSERVICES_URL: string;\r\nconst GATEWAY_URL: string = 'https://webservices.securetrading.net/jwt/';\r\nconst MOCK_GATEWAY_URL: string = 'https://merchant.example.com:8443';\r\n\r\nexport const environment = {\r\n  CARDINAL_COMMERCE: {\r\n    CONFIG: {\r\n      logging: { level: 'off' }\r\n    },\r\n    MOCK: {\r\n      AUTHENTICATE_CARD_URL: `${MOCK_GATEWAY_URL}/cardinalAuthenticateCard`\r\n    },\r\n    SONGBIRD_LIVE_URL: 'https://songbird.cardinalcommerce.com/edge/v1/songbird.js',\r\n    SONGBIRD_TEST_URL: 'https://songbirdstag.cardinalcommerce.com/edge/v1/songbird.js'\r\n  },\r\n  FRAME_URL: WEBSERVICES_URL,\r\n  GATEWAY_URL,\r\n  GA_MEASUREMENT_ID: '42057093-6',\r\n  GA_SCRIPT_SRC: 'https://www.google-analytics.com/analytics.js',\r\n  NOTIFICATION_TTL: 7000,\r\n  VISA_CHECKOUT_URLS: {\r\n    LIVE_BUTTON_URL: 'https://secure.checkout.visa.com/wallet-services-web/xo/button.png',\r\n    LIVE_SDK: 'https://secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js',\r\n    TEST_BUTTON_URL: 'https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png',\r\n    TEST_SDK: 'https://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js'\r\n  },\r\n  CYBERTONICA: {\r\n    CYBERTONICA_LIVE_URL: 'https://cyber.securetrading.net/js/v2/afeasdwqwdasd.js'\r\n  },\r\n  production: true,\r\n  testEnvironment: false,\r\n  overrideDomain: '',\r\n  SENTRY_DSN: 'https://6319b9ff1fb14ba48cd2c9025d67bd2d@o402164.ingest.sentry.io/5262818',\r\n  SENTRY_WHITELIST_URLS: ['https://webservices.securetrading.net']\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\environments\\environment.ts":{"language":"typescript","mutants":[{"id":"3344","location":{"end":{"column":69,"line":4},"start":{"column":34,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3343","location":{"end":{"column":73,"line":3},"start":{"column":29,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3345","location":{"end":{"column":2,"line":48},"start":{"column":28,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3346","location":{"end":{"column":4,"line":10},"start":{"column":14,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3347","location":{"end":{"column":26,"line":8},"start":{"column":16,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3349","location":{"end":{"column":4,"line":13},"start":{"column":19,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3348","location":{"end":{"column":34,"line":9},"start":{"column":20,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3350","location":{"end":{"column":74,"line":12},"start":{"column":20,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3351","location":{"end":{"column":4,"line":23},"start":{"column":22,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3353","location":{"end":{"column":31,"line":16},"start":{"column":16,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3354","location":{"end":{"column":29,"line":16},"start":{"column":25,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3352","location":{"end":{"column":6,"line":17},"start":{"column":13,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3355","location":{"end":{"column":6,"line":20},"start":{"column":11,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3356","location":{"end":{"column":76,"line":19},"start":{"column":30,"line":19}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"3357","location":{"end":{"column":83,"line":21},"start":{"column":24,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3358","location":{"end":{"column":87,"line":22},"start":{"column":24,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3359","location":{"end":{"column":4,"line":26},"start":{"column":29,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3360","location":{"end":{"column":29,"line":25},"start":{"column":14,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3361","location":{"end":{"column":27,"line":25},"start":{"column":23,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3362","location":{"end":{"column":34,"line":30},"start":{"column":22,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3363","location":{"end":{"column":71,"line":31},"start":{"column":18,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3364","location":{"end":{"column":4,"line":39},"start":{"column":23,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3365","location":{"end":{"column":90,"line":34},"start":{"column":22,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3366","location":{"end":{"column":100,"line":35},"start":{"column":15,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3367","location":{"end":{"column":59,"line":36},"start":{"column":20,"line":36}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"3368","location":{"end":{"column":98,"line":37},"start":{"column":22,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3369","location":{"end":{"column":115,"line":38},"start":{"column":15,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3370","location":{"end":{"column":4,"line":42},"start":{"column":16,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3371","location":{"end":{"column":83,"line":41},"start":{"column":27,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3372","location":{"end":{"column":20,"line":43},"start":{"column":15,"line":43}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3373","location":{"end":{"column":25,"line":44},"start":{"column":20,"line":44}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3374","location":{"end":{"column":21,"line":45},"start":{"column":19,"line":45}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3375","location":{"end":{"column":67,"line":47},"start":{"column":26,"line":47}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"3376","location":{"end":{"column":66,"line":47},"start":{"column":27,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"declare const WEBSERVICES_URL: string;\r\n\r\nconst GATEWAY_URL: string = 'https://webservices.securetrading.net/jwt/';\r\nconst MOCK_GATEWAY_URL: string = 'https://merchant.example.com:8443';\r\n\r\nexport const environment = {\r\n  APM_NAMES: {\r\n    APPLE_PAY: 'APPLEPAY',\r\n    VISA_CHECKOUT: 'VISACHECKOUT'\r\n  },\r\n  APPLE_PAY_URLS: {\r\n    MOCK_DATA_URL: 'https://merchant.example.com:8443/applePaymentStatus'\r\n  },\r\n  CARDINAL_COMMERCE: {\r\n    CONFIG: {\r\n      logging: { level: 'on' }\r\n    },\r\n    MOCK: {\r\n      AUTHENTICATE_CARD_URL: `${MOCK_GATEWAY_URL}/cardinalAuthenticateCard`\r\n    },\r\n    SONGBIRD_LIVE_URL: 'https://songbird.cardinalcommerce.com/edge/v1/songbird.js',\r\n    SONGBIRD_TEST_URL: 'https://songbirdstag.cardinalcommerce.com/edge/v1/songbird.js'\r\n  },\r\n  CARDINAL_COMMERCE_CONFIG: {\r\n    logging: { level: 'on' }\r\n  },\r\n  // @ts-ignore\r\n  FRAME_URL: WEBSERVICES_URL,\r\n  GATEWAY_URL,\r\n  GA_MEASUREMENT_ID: '42057093-5',\r\n  GA_SCRIPT_SRC: 'https://www.google-analytics.com/analytics_debug.js',\r\n  NOTIFICATION_TTL: 7000,\r\n  VISA_CHECKOUT_URLS: {\r\n    LIVE_BUTTON_URL: 'https://secure.checkout.visa.com/wallet-services-web/xo/button.png',\r\n    LIVE_SDK: 'https://secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js',\r\n    MOCK_DATA_URL: `${MOCK_GATEWAY_URL}/visaPaymentStatus`,\r\n    TEST_BUTTON_URL: 'https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png',\r\n    TEST_SDK: 'https://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js'\r\n  },\r\n  CYBERTONICA: {\r\n    CYBERTONICA_LIVE_URL: 'https://cyber.securetrading.net/js/v2/afeasdwqwdasd.js'\r\n  },\r\n  production: false,\r\n  testEnvironment: false,\r\n  overrideDomain: '',\r\n  SENTRY_DSN: null as string,\r\n  SENTRY_WHITELIST_URLS: ['https://webservices.securetrading.net']\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\Debug.ts":{"language":"typescript","mutants":[{"id":"3377","location":{"end":{"column":4,"line":8},"start":{"column":40,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3378","location":{"end":{"column":32,"line":5},"start":{"column":9,"line":5}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3380","location":{"end":{"column":32,"line":5},"start":{"column":9,"line":5}},"mutatorName":"BooleanLiteral","replacement":"environment.production","status":"Survived"},{"id":"3379","location":{"end":{"column":32,"line":5},"start":{"column":9,"line":5}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3381","location":{"end":{"column":6,"line":7},"start":{"column":34,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3382","location":{"end":{"column":4,"line":14},"start":{"column":39,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3383","location":{"end":{"column":32,"line":11},"start":{"column":9,"line":11}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3384","location":{"end":{"column":32,"line":11},"start":{"column":9,"line":11}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3385","location":{"end":{"column":32,"line":11},"start":{"column":9,"line":11}},"mutatorName":"BooleanLiteral","replacement":"environment.production","status":"Survived"},{"id":"3386","location":{"end":{"column":6,"line":13},"start":{"column":34,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3387","location":{"end":{"column":4,"line":20},"start":{"column":38,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3388","location":{"end":{"column":32,"line":17},"start":{"column":9,"line":17}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3389","location":{"end":{"column":32,"line":17},"start":{"column":9,"line":17}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3390","location":{"end":{"column":32,"line":17},"start":{"column":9,"line":17}},"mutatorName":"BooleanLiteral","replacement":"environment.production","status":"Survived"},{"id":"3391","location":{"end":{"column":6,"line":19},"start":{"column":34,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { environment } from '../environments/environment';\r\n\r\nexport class Debug {\r\n  public static error(data: any): void {\r\n    if (!environment.production) {\r\n      console.error(data);\r\n    }\r\n  }\r\n\r\n  public static warn(data: any): void {\r\n    if (!environment.production) {\r\n      console.warn(data);\r\n    }\r\n  }\r\n\r\n  public static log(data: any): void {\r\n    if (!environment.production) {\r\n      console.log(data);\r\n    }\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\browser-detector\\BrowserDetector.ts":{"language":"typescript","mutants":[{"id":"3394","location":{"end":{"column":8,"line":28},"start":{"column":16,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3392","location":{"end":{"column":4,"line":37},"start":{"column":34,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3393","location":{"end":{"column":6,"line":36},"start":{"column":12,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3395","location":{"end":{"column":8,"line":33},"start":{"column":11,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3397","location":{"end":{"column":59,"line":35},"start":{"column":20,"line":35}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3396","location":{"end":{"column":59,"line":35},"start":{"column":20,"line":35}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3398","location":{"end":{"column":59,"line":35},"start":{"column":20,"line":35}},"mutatorName":"LogicalOperator","replacement":"isBrowserSupported || isDeviceSupported","status":"Survived"}],"source":"import Bowser from 'bowser';\r\nimport { Inject, Service } from 'typedi';\r\nimport { WINDOW } from '../../dependency-injection/InjectionTokens';\r\nimport { IBrowserInfo } from './IBrowserInfo';\r\nimport { BrowserSupport } from './browser-support/BrowserSupport';\r\nimport { DeviceSupport } from './device-support/DeviceSupport';\r\n\r\n@Service()\r\nexport class BrowserDetector {\r\n  constructor(\r\n    @Inject(WINDOW) private window: Window,\r\n    private browserSupport: BrowserSupport,\r\n    private deviceSupport: DeviceSupport\r\n  ) {}\r\n\r\n  getBrowserInfo(): IBrowserInfo {\r\n    const browserDetails = Bowser.parse(this.window.navigator.userAgent);\r\n    const isBrowserSupported = this.browserSupport.isBrowserSupported(\r\n      browserDetails.browser.version,\r\n      browserDetails.browser.name\r\n    );\r\n    const isDeviceSupported = this.deviceSupport.isDeviceSupported(browserDetails.os.version, browserDetails.os.name);\r\n\r\n    return {\r\n      browser: {\r\n        ...browserDetails.browser,\r\n        isSupported: isBrowserSupported\r\n      },\r\n      engine: browserDetails.engine,\r\n      os: {\r\n        ...browserDetails.os,\r\n        isSupported: isDeviceSupported\r\n      },\r\n      platform: browserDetails.platform,\r\n      isSupported: isBrowserSupported && isDeviceSupported\r\n    };\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\browser-detector\\BrowserMap.ts":{"language":"typescript","mutants":[{"id":"3400","location":{"end":{"column":19,"line":2},"start":{"column":11,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3399","location":{"end":{"column":2,"line":9},"start":{"column":54,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3401","location":{"end":{"column":21,"line":3},"start":{"column":12,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3403","location":{"end":{"column":25,"line":5},"start":{"column":9,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3402","location":{"end":{"column":26,"line":4},"start":{"column":7,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3404","location":{"end":{"column":17,"line":6},"start":{"column":10,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3405","location":{"end":{"column":19,"line":7},"start":{"column":11,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3406","location":{"end":{"column":17,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const BrowserMap: { [key: string]: string } = {\r\n  chrome: 'Chrome',\r\n  firefox: 'Firefox',\r\n  ie: 'Internet Explorer',\r\n  edge: 'Microsoft Edge',\r\n  opera: 'Opera',\r\n  safari: 'Safari',\r\n  ios_saf: 'iOS'\r\n};\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\browser-detector\\BrowsersList.ts":{"language":"typescript","mutants":[{"id":"3407","location":{"end":{"column":4,"line":8},"start":{"column":41,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3408","location":{"end":{"column":4,"line":13},"start":{"column":26,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3409","location":{"end":{"column":86,"line":12},"start":{"column":60,"line":12}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3410","location":{"end":{"column":81,"line":12},"start":{"column":79,"line":12}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"}],"source":"import browserslist from 'browserslist';\r\nimport { Service } from 'typedi';\r\n\r\n@Service()\r\nexport class BrowsersList {\r\n  getBrowsers(list: string[]): string[] {\r\n    return browserslist(list);\r\n  }\r\n\r\n  getSupportedBrowsers() {\r\n    // @ts-ignore\r\n    return Object.keys(browserslist.versionAliases).reduce((a, b) => ((a[b] = []), a), {});\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\browser-detector\\SupportedOSs.ts":{"language":"typescript","mutants":[{"id":"3412","location":{"end":{"column":57,"line":2},"start":{"column":37,"line":2}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"3411","location":{"end":{"column":54,"line":1},"start":{"column":41,"line":1}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"export const SupportedAndroidVersions = [7, 8, 9, 10];\r\nexport const SupportedIOSVersions = [10, 11, 12, 13, 14];\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\browser-detector\\browser-support\\BrowserSupport.ts":{"language":"typescript","mutants":[{"id":"3413","location":{"end":{"column":4,"line":22},"start":{"column":62,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3414","location":{"end":{"column":27,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3416","location":{"end":{"column":27,"line":13},"start":{"column":9,"line":13}},"mutatorName":"BooleanLiteral","replacement":"supportedVersions","status":"Survived"},{"id":"3415","location":{"end":{"column":27,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3418","location":{"end":{"column":19,"line":14},"start":{"column":14,"line":14}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3417","location":{"end":{"column":6,"line":15},"start":{"column":29,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3419","location":{"end":{"column":41,"line":17},"start":{"column":9,"line":17}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3420","location":{"end":{"column":41,"line":17},"start":{"column":9,"line":17}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3422","location":{"end":{"column":69,"line":18},"start":{"column":37,"line":18}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3421","location":{"end":{"column":6,"line":19},"start":{"column":43,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3423","location":{"end":{"column":69,"line":18},"start":{"column":42,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3424","location":{"end":{"column":69,"line":18},"start":{"column":42,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3425","location":{"end":{"column":69,"line":18},"start":{"column":42,"line":18}},"mutatorName":"EqualityOperator","replacement":"Number(v) < currentVersion","status":"Survived"},{"id":"3426","location":{"end":{"column":69,"line":18},"start":{"column":42,"line":18}},"mutatorName":"EqualityOperator","replacement":"Number(v) > currentVersion","status":"Survived"},{"id":"3427","location":{"end":{"column":55,"line":21},"start":{"column":12,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3428","location":{"end":{"column":55,"line":21},"start":{"column":12,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3429","location":{"end":{"column":55,"line":21},"start":{"column":12,"line":21}},"mutatorName":"EqualityOperator","replacement":"Number(supportedVersions) < currentVersion","status":"Survived"},{"id":"3430","location":{"end":{"column":55,"line":21},"start":{"column":12,"line":21}},"mutatorName":"EqualityOperator","replacement":"Number(supportedVersions) > currentVersion","status":"Survived"},{"id":"3432","location":{"end":{"column":72,"line":25},"start":{"column":41,"line":25}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3431","location":{"end":{"column":4,"line":26},"start":{"column":48,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3433","location":{"end":{"column":72,"line":25},"start":{"column":48,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3434","location":{"end":{"column":72,"line":25},"start":{"column":48,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3435","location":{"end":{"column":72,"line":25},"start":{"column":48,"line":25}},"mutatorName":"EqualityOperator","replacement":"BrowserMap[key] !== name","status":"Survived"},{"id":"3436","location":{"end":{"column":4,"line":42},"start":{"column":63,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3437","location":{"end":{"column":6,"line":38},"start":{"column":54,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3438","location":{"end":{"column":55,"line":35},"start":{"column":52,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { BrowsersList } from '../BrowsersList';\r\nimport { BrowserMap } from '../BrowserMap';\r\n\r\n@Service()\r\nexport class BrowserSupport {\r\n  constructor(private _browserList: BrowsersList) {}\r\n\r\n  isBrowserSupported(version: string, name: string): boolean {\r\n    const supportedVersions: string[] = this.getSupportedBrowserVersions(this.mapBrowserName(name));\r\n    const currentVersion = Number(version.substring(0, 2));\r\n\r\n    if (!supportedVersions) {\r\n      return false;\r\n    }\r\n\r\n    if (Array.isArray(supportedVersions)) {\r\n      return supportedVersions.some(v => Number(v) <= currentVersion);\r\n    }\r\n\r\n    return Number(supportedVersions) <= currentVersion;\r\n  }\r\n\r\n  private mapBrowserName(name: string): string {\r\n    return Object.keys(BrowserMap).find(key => BrowserMap[key] === name);\r\n  }\r\n\r\n  private getSupportedBrowserVersions(name: string): string[] {\r\n    // tslint:disable-next-line:no-var-requires\r\n    const { browserslist: browserlist } = require('./../../../../../package.json');\r\n    const browsersFromPackageJson = this._browserList.getBrowsers(browserlist);\r\n    const supportedBrowsers = this._browserList.getSupportedBrowsers();\r\n\r\n    browsersFromPackageJson.map((browser: string) => {\r\n      const browserNameVersionPair = browser.split(' ');\r\n      // @ts-ignore\r\n      return supportedBrowsers[browserNameVersionPair[0]].push(browserNameVersionPair[1]);\r\n    });\r\n\r\n    // @ts-ignore\r\n    return supportedBrowsers[name.toLowerCase()];\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\browser-detector\\device-support\\DeviceSupport.ts":{"language":"typescript","mutants":[{"id":"3439","location":{"end":{"column":4,"line":27},"start":{"column":61,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3440","location":{"end":{"column":30,"line":7},"start":{"column":9,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3443","location":{"end":{"column":6,"line":9},"start":{"column":32,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3441","location":{"end":{"column":30,"line":7},"start":{"column":9,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3442","location":{"end":{"column":30,"line":7},"start":{"column":9,"line":7}},"mutatorName":"EqualityOperator","replacement":"version !== undefined","status":"Survived"},{"id":"3444","location":{"end":{"column":19,"line":8},"start":{"column":14,"line":8}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3445","location":{"end":{"column":49,"line":11},"start":{"column":46,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3446","location":{"end":{"column":46,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3447","location":{"end":{"column":46,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3448","location":{"end":{"column":46,"line":13},"start":{"column":9,"line":13}},"mutatorName":"LogicalOperator","replacement":"name === 'Android' || dotIndex === -1","status":"Survived"},{"id":"3450","location":{"end":{"column":27,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3449","location":{"end":{"column":27,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3451","location":{"end":{"column":27,"line":13},"start":{"column":9,"line":13}},"mutatorName":"EqualityOperator","replacement":"name !== 'Android'","status":"Survived"},{"id":"3452","location":{"end":{"column":27,"line":13},"start":{"column":18,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3453","location":{"end":{"column":46,"line":13},"start":{"column":31,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3454","location":{"end":{"column":46,"line":13},"start":{"column":31,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3456","location":{"end":{"column":46,"line":13},"start":{"column":44,"line":13}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"3455","location":{"end":{"column":46,"line":13},"start":{"column":31,"line":13}},"mutatorName":"EqualityOperator","replacement":"dotIndex !== -1","status":"Survived"},{"id":"3457","location":{"end":{"column":6,"line":15},"start":{"column":48,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3459","location":{"end":{"column":46,"line":16},"start":{"column":9,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3458","location":{"end":{"column":46,"line":16},"start":{"column":9,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3461","location":{"end":{"column":27,"line":16},"start":{"column":9,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3460","location":{"end":{"column":46,"line":16},"start":{"column":9,"line":16}},"mutatorName":"LogicalOperator","replacement":"name === 'Android' || dotIndex !== -1","status":"Survived"},{"id":"3463","location":{"end":{"column":27,"line":16},"start":{"column":9,"line":16}},"mutatorName":"EqualityOperator","replacement":"name !== 'Android'","status":"Survived"},{"id":"3462","location":{"end":{"column":27,"line":16},"start":{"column":9,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3464","location":{"end":{"column":27,"line":16},"start":{"column":18,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3465","location":{"end":{"column":46,"line":16},"start":{"column":31,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3466","location":{"end":{"column":46,"line":16},"start":{"column":31,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3468","location":{"end":{"column":46,"line":16},"start":{"column":44,"line":16}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"3467","location":{"end":{"column":46,"line":16},"start":{"column":31,"line":16}},"mutatorName":"EqualityOperator","replacement":"dotIndex === -1","status":"Survived"},{"id":"3469","location":{"end":{"column":6,"line":18},"start":{"column":48,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3470","location":{"end":{"column":42,"line":19},"start":{"column":9,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3471","location":{"end":{"column":42,"line":19},"start":{"column":9,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3473","location":{"end":{"column":23,"line":19},"start":{"column":9,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3472","location":{"end":{"column":42,"line":19},"start":{"column":9,"line":19}},"mutatorName":"LogicalOperator","replacement":"name === 'iOS' || dotIndex === -1","status":"Survived"},{"id":"3474","location":{"end":{"column":23,"line":19},"start":{"column":9,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3475","location":{"end":{"column":23,"line":19},"start":{"column":9,"line":19}},"mutatorName":"EqualityOperator","replacement":"name !== 'iOS'","status":"Survived"},{"id":"3476","location":{"end":{"column":23,"line":19},"start":{"column":18,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3477","location":{"end":{"column":42,"line":19},"start":{"column":27,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3478","location":{"end":{"column":42,"line":19},"start":{"column":27,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3479","location":{"end":{"column":42,"line":19},"start":{"column":27,"line":19}},"mutatorName":"EqualityOperator","replacement":"dotIndex !== -1","status":"Survived"},{"id":"3480","location":{"end":{"column":42,"line":19},"start":{"column":40,"line":19}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"3481","location":{"end":{"column":6,"line":21},"start":{"column":44,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3482","location":{"end":{"column":42,"line":22},"start":{"column":9,"line":22}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3483","location":{"end":{"column":42,"line":22},"start":{"column":9,"line":22}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3484","location":{"end":{"column":42,"line":22},"start":{"column":9,"line":22}},"mutatorName":"LogicalOperator","replacement":"name === 'iOS' || dotIndex !== -1","status":"Survived"},{"id":"3485","location":{"end":{"column":23,"line":22},"start":{"column":9,"line":22}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3486","location":{"end":{"column":23,"line":22},"start":{"column":9,"line":22}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3487","location":{"end":{"column":23,"line":22},"start":{"column":9,"line":22}},"mutatorName":"EqualityOperator","replacement":"name !== 'iOS'","status":"Survived"},{"id":"3488","location":{"end":{"column":23,"line":22},"start":{"column":18,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3489","location":{"end":{"column":42,"line":22},"start":{"column":27,"line":22}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3490","location":{"end":{"column":42,"line":22},"start":{"column":27,"line":22}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3491","location":{"end":{"column":42,"line":22},"start":{"column":27,"line":22}},"mutatorName":"EqualityOperator","replacement":"dotIndex === -1","status":"Survived"},{"id":"3492","location":{"end":{"column":42,"line":22},"start":{"column":40,"line":22}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"3493","location":{"end":{"column":6,"line":24},"start":{"column":44,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3494","location":{"end":{"column":16,"line":26},"start":{"column":12,"line":26}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3495","location":{"end":{"column":4,"line":31},"start":{"column":69,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3496","location":{"end":{"column":4,"line":35},"start":{"column":91,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { SupportedAndroidVersions, SupportedIOSVersions } from '../SupportedOSs';\r\n\r\n@Service()\r\nexport class DeviceSupport {\r\n  isDeviceSupported(version: string, name: string): boolean {\r\n    if (version === undefined) {\r\n      return false;\r\n    }\r\n\r\n    const dotIndex: number = version.indexOf('.');\r\n\r\n    if (name === 'Android' && dotIndex === -1) {\r\n      return this.hasMainVersion(SupportedAndroidVersions, version);\r\n    }\r\n    if (name === 'Android' && dotIndex !== -1) {\r\n      return this.hasSpecificVersion(SupportedAndroidVersions, version, dotIndex);\r\n    }\r\n    if (name === 'iOS' && dotIndex === -1) {\r\n      return this.hasMainVersion(SupportedIOSVersions, version);\r\n    }\r\n    if (name === 'iOS' && dotIndex !== -1) {\r\n      return this.hasSpecificVersion(SupportedIOSVersions, version, dotIndex);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private hasMainVersion(array: number[], version: string): boolean {\r\n    return array.includes(Number(Number(version).toFixed(0)));\r\n  }\r\n\r\n  private hasSpecificVersion(array: number[], version: string, dotIndex: number): boolean {\r\n    return array.includes(Number(Number(version.substr(0, dotIndex)).toFixed(0)));\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\config-resolver\\ConfigResolver.ts":{"language":"typescript","mutants":[{"id":"3497","location":{"end":{"column":4,"line":60},"start":{"column":44,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3500","location":{"end":{"column":32,"line":56},"start":{"column":9,"line":56}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3499","location":{"end":{"column":75,"line":49},"start":{"column":70,"line":49}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3498","location":{"end":{"column":6,"line":55},"start":{"column":38,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3501","location":{"end":{"column":32,"line":56},"start":{"column":9,"line":56}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3503","location":{"end":{"column":6,"line":58},"start":{"column":34,"line":56}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3502","location":{"end":{"column":32,"line":56},"start":{"column":9,"line":56}},"mutatorName":"BooleanLiteral","replacement":"environment.production","status":"Survived"},{"id":"3504","location":{"end":{"column":4,"line":71},"start":{"column":11,"line":65}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3507","location":{"end":{"column":6,"line":70},"start":{"column":16,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3506","location":{"end":{"column":14,"line":68},"start":{"column":9,"line":68}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3505","location":{"end":{"column":14,"line":68},"start":{"column":9,"line":68}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3508","location":{"end":{"column":4,"line":94},"start":{"column":75,"line":73}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3509","location":{"end":{"column":29,"line":76},"start":{"column":7,"line":75}},"mutatorName":"ConditionalExpression","replacement":"case 'undefined':","status":"Survived"},{"id":"3510","location":{"end":{"column":23,"line":75},"start":{"column":12,"line":75}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3512","location":{"end":{"column":20,"line":77},"start":{"column":12,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3511","location":{"end":{"column":52,"line":78},"start":{"column":7,"line":77}},"mutatorName":"ConditionalExpression","replacement":"case 'string':","status":"Survived"},{"id":"3513","location":{"end":{"column":62,"line":80},"start":{"column":7,"line":79}},"mutatorName":"ConditionalExpression","replacement":"case 'number':","status":"Survived"},{"id":"3515","location":{"end":{"column":22,"line":82},"start":{"column":7,"line":81}},"mutatorName":"ConditionalExpression","replacement":"case 'boolean':","status":"Survived"},{"id":"3514","location":{"end":{"column":20,"line":79},"start":{"column":12,"line":79}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3516","location":{"end":{"column":21,"line":81},"start":{"column":12,"line":81}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3517","location":{"end":{"column":65,"line":90},"start":{"column":7,"line":83}},"mutatorName":"ConditionalExpression","replacement":"case 'object':","status":"Survived"},{"id":"3518","location":{"end":{"column":20,"line":83},"start":{"column":12,"line":83}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3519","location":{"end":{"column":27,"line":84},"start":{"column":13,"line":84}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3520","location":{"end":{"column":27,"line":84},"start":{"column":13,"line":84}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3521","location":{"end":{"column":27,"line":84},"start":{"column":13,"line":84}},"mutatorName":"EqualityOperator","replacement":"value !== null","status":"Survived"},{"id":"3522","location":{"end":{"column":10,"line":86},"start":{"column":29,"line":84}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3523","location":{"end":{"column":33,"line":87},"start":{"column":13,"line":87}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3524","location":{"end":{"column":33,"line":87},"start":{"column":13,"line":87}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3526","location":{"end":{"column":54,"line":92},"start":{"column":7,"line":91}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Survived"},{"id":"3525","location":{"end":{"column":10,"line":89},"start":{"column":35,"line":87}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3527","location":{"end":{"column":4,"line":105},"start":{"column":101,"line":96}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3528","location":{"end":{"column":47,"line":97},"start":{"column":9,"line":97}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3529","location":{"end":{"column":47,"line":97},"start":{"column":9,"line":97}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3531","location":{"end":{"column":16,"line":97},"start":{"column":9,"line":97}},"mutatorName":"BooleanLiteral","replacement":"config","status":"Survived"},{"id":"3530","location":{"end":{"column":47,"line":97},"start":{"column":9,"line":97}},"mutatorName":"LogicalOperator","replacement":"!config && !Object.keys(config).length","status":"Survived"},{"id":"3533","location":{"end":{"column":6,"line":99},"start":{"column":49,"line":97}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3532","location":{"end":{"column":47,"line":97},"start":{"column":20,"line":97}},"mutatorName":"BooleanLiteral","replacement":"Object.keys(config).length","status":"Survived"},{"id":"3534","location":{"end":{"column":6,"line":104},"start":{"column":12,"line":100}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3535","location":{"end":{"column":4,"line":121},"start":{"column":89,"line":107}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3536","location":{"end":{"column":47,"line":108},"start":{"column":9,"line":108}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3537","location":{"end":{"column":47,"line":108},"start":{"column":9,"line":108}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3538","location":{"end":{"column":47,"line":108},"start":{"column":9,"line":108}},"mutatorName":"LogicalOperator","replacement":"!config && !Object.keys(config).length","status":"Survived"},{"id":"3539","location":{"end":{"column":16,"line":108},"start":{"column":9,"line":108}},"mutatorName":"BooleanLiteral","replacement":"config","status":"Survived"},{"id":"3541","location":{"end":{"column":6,"line":110},"start":{"column":49,"line":108}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3540","location":{"end":{"column":47,"line":108},"start":{"column":20,"line":108}},"mutatorName":"BooleanLiteral","replacement":"Object.keys(config).length","status":"Survived"},{"id":"3542","location":{"end":{"column":6,"line":120},"start":{"column":12,"line":118}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3543","location":{"end":{"column":4,"line":134},"start":{"column":68,"line":123}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3544","location":{"end":{"column":47,"line":124},"start":{"column":9,"line":124}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3545","location":{"end":{"column":47,"line":124},"start":{"column":9,"line":124}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3546","location":{"end":{"column":47,"line":124},"start":{"column":9,"line":124}},"mutatorName":"LogicalOperator","replacement":"!config && !Object.keys(config).length","status":"Survived"},{"id":"3547","location":{"end":{"column":16,"line":124},"start":{"column":9,"line":124}},"mutatorName":"BooleanLiteral","replacement":"config","status":"Survived"},{"id":"3549","location":{"end":{"column":6,"line":126},"start":{"column":49,"line":124}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3548","location":{"end":{"column":47,"line":124},"start":{"column":20,"line":124}},"mutatorName":"BooleanLiteral","replacement":"Object.keys(config).length","status":"Survived"},{"id":"3550","location":{"end":{"column":6,"line":133},"start":{"column":12,"line":127}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3551","location":{"end":{"column":4,"line":146},"start":{"column":82,"line":136}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3552","location":{"end":{"column":47,"line":137},"start":{"column":9,"line":137}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3553","location":{"end":{"column":47,"line":137},"start":{"column":9,"line":137}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3554","location":{"end":{"column":47,"line":137},"start":{"column":9,"line":137}},"mutatorName":"LogicalOperator","replacement":"!config && !Object.keys(config).length","status":"Survived"},{"id":"3555","location":{"end":{"column":16,"line":137},"start":{"column":9,"line":137}},"mutatorName":"BooleanLiteral","replacement":"config","status":"Survived"},{"id":"3556","location":{"end":{"column":47,"line":137},"start":{"column":20,"line":137}},"mutatorName":"BooleanLiteral","replacement":"Object.keys(config).length","status":"Survived"},{"id":"3557","location":{"end":{"column":6,"line":139},"start":{"column":49,"line":137}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3559","location":{"end":{"column":4,"line":157},"start":{"column":78,"line":148}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3558","location":{"end":{"column":6,"line":145},"start":{"column":12,"line":140}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3560","location":{"end":{"column":47,"line":149},"start":{"column":9,"line":149}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3561","location":{"end":{"column":47,"line":149},"start":{"column":9,"line":149}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3562","location":{"end":{"column":47,"line":149},"start":{"column":9,"line":149}},"mutatorName":"LogicalOperator","replacement":"!config && !Object.keys(config).length","status":"Survived"},{"id":"3563","location":{"end":{"column":16,"line":149},"start":{"column":9,"line":149}},"mutatorName":"BooleanLiteral","replacement":"config","status":"Survived"},{"id":"3565","location":{"end":{"column":6,"line":151},"start":{"column":49,"line":149}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3564","location":{"end":{"column":47,"line":149},"start":{"column":20,"line":149}},"mutatorName":"BooleanLiteral","replacement":"Object.keys(config).length","status":"Survived"},{"id":"3566","location":{"end":{"column":6,"line":156},"start":{"column":12,"line":152}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3569","location":{"end":{"column":21,"line":160},"start":{"column":9,"line":160}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3567","location":{"end":{"column":4,"line":165},"start":{"column":60,"line":159}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3568","location":{"end":{"column":21,"line":160},"start":{"column":9,"line":160}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3570","location":{"end":{"column":21,"line":160},"start":{"column":9,"line":160}},"mutatorName":"EqualityOperator","replacement":"value !== ''","status":"Survived"},{"id":"3571","location":{"end":{"column":21,"line":160},"start":{"column":19,"line":160}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3572","location":{"end":{"column":6,"line":162},"start":{"column":23,"line":160}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3573","location":{"end":{"column":16,"line":161},"start":{"column":14,"line":161}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"import Joi from 'joi';\nimport { IConfig } from '../../model/config/IConfig';\nimport { Service } from 'typedi';\nimport { IComponentsIds } from '../../model/config/IComponentsIds';\nimport { IComponentsConfig } from '../../model/config/IComponentsConfig';\nimport { ConfigSchema } from '../storage/ConfigSchema';\nimport { DefaultSubmitFields } from '../../../application/core/models/constants/config-resolver/DefaultSubmitFields';\nimport { DefaultComponentsRequestTypes } from '../../../application/core/models/constants/config-resolver/DefaultComponentsRequestTypes';\nimport { DefaultComponentsIds } from '../../../application/core/models/constants/config-resolver/DefaultComponentsIds';\nimport { DefaultApmsRequestTypes } from '../../../application/core/models/constants/config-resolver/DefaultApmsRequestTypes';\nimport { DefaultConfig } from '../../../application/core/models/constants/config-resolver/DefaultConfig';\nimport { DefaultComponents } from '../../../application/core/models/constants/config-resolver/DefaultComponents';\nimport { IApplePay } from '../../../application/core/models/IApplePay';\nimport { IVisaCheckout } from '../../../application/core/models/constants/IVisaCheckout';\nimport { IPlaceholdersConfig } from '../../../application/core/models/IPlaceholdersConfig';\nimport { DefaultPlaceholders } from '../../../application/core/models/constants/config-resolver/DefaultPlaceholders';\nimport { environment } from '../../../environments/environment';\n\n@Service()\nexport class ConfigResolver {\n  public resolve(config: IConfig): IConfig {\n    this._validate(config, ConfigSchema);\n    const validatedConfig: IConfig = {\n      analytics: this._getValueOrDefault(config.analytics, DefaultConfig.analytics),\n      animatedCard: this._getValueOrDefault(config.animatedCard, DefaultConfig.animatedCard),\n      applePay: this._setApplePayConfig(config.applePay, DefaultConfig.applePay),\n      buttonId: this._getValueOrDefault(config.buttonId, DefaultConfig.buttonId),\n      bypassCards: this._getValueOrDefault(config.bypassCards, DefaultConfig.bypassCards),\n      cancelCallback: this._getValueOrDefault(config.cancelCallback, DefaultConfig.cancelCallback),\n      componentIds: this._setComponentIds(config.componentIds),\n      components: this._setComponentsProperties(config.components),\n      cybertonicaApiKey: this._resolveCybertonicaApiKey(config.cybertonicaApiKey),\n      datacenterurl: this._getValueOrDefault(config.datacenterurl, DefaultConfig.datacenterurl),\n      deferInit: this._getValueOrDefault(config.deferInit, DefaultConfig.deferInit),\n      disableNotification: this._getValueOrDefault(config.disableNotification, DefaultConfig.disableNotification),\n      errorCallback: this._getValueOrDefault(config.errorCallback, DefaultConfig.errorCallback),\n      errorReporting: this._getValueOrDefault(config.errorReporting, DefaultConfig.errorReporting),\n      fieldsToSubmit: this._getValueOrDefault(config.fieldsToSubmit, DefaultConfig.fieldsToSubmit),\n      formId: this._getValueOrDefault(config.formId, DefaultConfig.formId),\n      init: this._getValueOrDefault(config.init, DefaultConfig.init),\n      jwt: this._getValueOrDefault(config.jwt, DefaultConfig.jwt),\n      livestatus: this._getValueOrDefault(config.livestatus, DefaultConfig.livestatus),\n      origin: this._getValueOrDefault(config.origin, DefaultConfig.origin),\n      panIcon: this._getValueOrDefault(config.panIcon, DefaultConfig.panIcon),\n      placeholders: this._setPlaceholders(config.placeholders),\n      styles: this._getValueOrDefault(config.styles, DefaultConfig.styles),\n      submitCallback: this._getValueOrDefault(config.submitCallback, DefaultConfig.submitCallback),\n      submitFields: this._getValueOrDefault(config.submitFields, DefaultSubmitFields),\n      submitOnCancel: this._getValueOrDefault(config.submitOnCancel, false),\n      submitOnError: this._getValueOrDefault(config.submitOnError, DefaultConfig.submitOnError),\n      submitOnSuccess: this._getValueOrDefault(config.submitOnSuccess, DefaultConfig.submitOnSuccess),\n      successCallback: this._getValueOrDefault(config.successCallback, DefaultConfig.successCallback),\n      translations: this._getValueOrDefault(config.translations, DefaultConfig.translations),\n      visaCheckout: this._setVisaCheckoutConfig(config.visaCheckout, DefaultConfig.visaCheckout)\n    };\n    if (!environment.production) {\n      console.error(validatedConfig);\n    }\n    return validatedConfig;\n  }\n\n  private _validate(\n    config: IConfig | IComponentsConfig | IComponentsIds | IApplePay | IVisaCheckout,\n    schema: Joi.ObjectSchema\n  ): void {\n    const { error } = schema.validate(config);\n\n    if (error) {\n      throw error;\n    }\n  }\n\n  private _getValueOrDefault<T>(value: T | undefined, defaultValue: T): T {\n    switch (typeof value) {\n      case 'undefined':\n        return defaultValue;\n      case 'string':\n        return value.length ? value : defaultValue;\n      case 'number':\n        return Number.isFinite(value) ? value : defaultValue;\n      case 'boolean':\n        return value;\n      case 'object':\n        if (value === null) {\n          return defaultValue;\n        }\n        if (Array.isArray(value)) {\n          return value.length ? value : defaultValue;\n        }\n        return Object.keys(value).length ? value : defaultValue;\n      default:\n        return Boolean(value) ? value : defaultValue;\n    }\n  }\n\n  private _setVisaCheckoutConfig(config: IVisaCheckout | {}, defaultConfig: {}): IVisaCheckout | {} {\n    if (!config || !Object.keys(config).length) {\n      return defaultConfig;\n    }\n    return {\n      ...config,\n      // @ts-ignore\n      requestTypes: this._getValueOrDefault(config.requestTypes, DefaultApmsRequestTypes)\n    };\n  }\n\n  private _setApplePayConfig(config: IApplePay | {}, defaultConfig: {}): IApplePay | {} {\n    if (!config || !Object.keys(config).length) {\n      return defaultConfig;\n    }\n\n    // @ts-ignore\n    config.paymentRequest.requestTypes = this._getValueOrDefault(\n      // @ts-ignore\n      config.paymentRequest.requestTypes,\n      DefaultApmsRequestTypes\n    );\n    return {\n      ...config\n    };\n  }\n\n  private _setComponentIds(config: IComponentsIds): IComponentsIds {\n    if (!config || !Object.keys(config).length) {\n      return DefaultComponentsIds;\n    }\n    return {\n      animatedCard: this._getValueOrDefault(config.animatedCard, DefaultComponentsIds.animatedCard),\n      cardNumber: this._getValueOrDefault(config.cardNumber, DefaultComponentsIds.cardNumber),\n      expirationDate: this._getValueOrDefault(config.expirationDate, DefaultComponentsIds.expirationDate),\n      notificationFrame: this._getValueOrDefault(config.notificationFrame, DefaultComponentsIds.notificationFrame),\n      securityCode: this._getValueOrDefault(config.securityCode, DefaultComponentsIds.securityCode)\n    };\n  }\n\n  private _setComponentsProperties(config: IComponentsConfig): IComponentsConfig {\n    if (!config || !Object.keys(config).length) {\n      return DefaultComponents;\n    }\n    return {\n      defaultPaymentType: this._getValueOrDefault(config.defaultPaymentType, DefaultComponents.defaultPaymentType),\n      paymentTypes: this._getValueOrDefault(config.paymentTypes, DefaultComponents.paymentTypes),\n      requestTypes: this._getValueOrDefault(config.requestTypes, DefaultComponentsRequestTypes),\n      startOnLoad: this._getValueOrDefault(config.startOnLoad, DefaultComponents.startOnLoad)\n    };\n  }\n\n  private _setPlaceholders(config: IPlaceholdersConfig): IPlaceholdersConfig {\n    if (!config || !Object.keys(config).length) {\n      return DefaultPlaceholders;\n    }\n    return {\n      pan: this._getValueOrDefault(config.pan, DefaultPlaceholders.pan),\n      expirydate: this._getValueOrDefault(config.expirydate, DefaultPlaceholders.expirydate),\n      securitycode: this._getValueOrDefault(config.securitycode, DefaultPlaceholders.securitycode)\n    };\n  }\n\n  private _resolveCybertonicaApiKey(value: string): string {\n    if (value === '') {\n      return '';\n    }\n\n    return this._getValueOrDefault(value, DefaultConfig.cybertonicaApiKey);\n  }\n}\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\config-service\\ConfigService.ts":{"language":"typescript","mutants":[{"id":"3574","location":{"end":{"column":4,"line":31},"start":{"column":38,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3575","location":{"end":{"column":4,"line":39},"start":{"column":39,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3576","location":{"end":{"column":27,"line":34},"start":{"column":9,"line":34}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3577","location":{"end":{"column":27,"line":34},"start":{"column":9,"line":34}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3579","location":{"end":{"column":4,"line":43},"start":{"column":35,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3578","location":{"end":{"column":6,"line":36},"start":{"column":29,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3580","location":{"end":{"column":58,"line":42},"start":{"column":30,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3581","location":{"end":{"column":4,"line":59},"start":{"column":14,"line":48}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3582","location":{"end":{"column":27,"line":49},"start":{"column":9,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3584","location":{"end":{"column":6,"line":51},"start":{"column":29,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3583","location":{"end":{"column":27,"line":49},"start":{"column":9,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3585","location":{"end":{"column":70,"line":55},"start":{"column":29,"line":55}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3586","location":{"end":{"column":67,"line":55},"start":{"column":55,"line":55}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3587","location":{"end":{"column":67,"line":55},"start":{"column":55,"line":55}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3588","location":{"end":{"column":67,"line":55},"start":{"column":55,"line":55}},"mutatorName":"LogicalOperator","replacement":"config && {}","status":"Survived"},{"id":"3589","location":{"end":{"column":71,"line":56},"start":{"column":27,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3590","location":{"end":{"column":4,"line":63},"start":{"column":24,"line":61}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3591","location":{"end":{"column":4,"line":71},"start":{"column":62,"line":65}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3592","location":{"end":{"column":24,"line":66},"start":{"column":9,"line":66}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3593","location":{"end":{"column":24,"line":66},"start":{"column":9,"line":66}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3594","location":{"end":{"column":6,"line":68},"start":{"column":26,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3595","location":{"end":{"column":4,"line":91},"start":{"column":50,"line":73}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3596","location":{"end":{"column":24,"line":77},"start":{"column":9,"line":77}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3597","location":{"end":{"column":24,"line":77},"start":{"column":9,"line":77}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3598","location":{"end":{"column":6,"line":79},"start":{"column":26,"line":77}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3600","location":{"end":{"column":4,"line":118},"start":{"column":105,"line":93}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3599","location":{"end":{"column":6,"line":86},"start":{"column":29,"line":83}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3601","location":{"end":{"column":24,"line":96},"start":{"column":9,"line":96}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3602","location":{"end":{"column":24,"line":96},"start":{"column":9,"line":96}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3603","location":{"end":{"column":24,"line":96},"start":{"column":9,"line":96}},"mutatorName":"BooleanLiteral","replacement":"payload.config","status":"Survived"},{"id":"3604","location":{"end":{"column":6,"line":101},"start":{"column":26,"line":96}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3607","location":{"end":{"column":104,"line":103},"start":{"column":25,"line":103}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"3605","location":{"end":{"column":8,"line":100},"start":{"column":14,"line":97}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3606","location":{"end":{"column":29,"line":98},"start":{"column":24,"line":98}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3608","location":{"end":{"column":31,"line":103},"start":{"column":26,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3609","location":{"end":{"column":49,"line":103},"start":{"column":33,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3610","location":{"end":{"column":68,"line":103},"start":{"column":51,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3611","location":{"end":{"column":85,"line":103},"start":{"column":70,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3612","location":{"end":{"column":103,"line":103},"start":{"column":87,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3613","location":{"end":{"column":90,"line":105},"start":{"column":33,"line":105}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3614","location":{"end":{"column":90,"line":105},"start":{"column":40,"line":105}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3615","location":{"end":{"column":90,"line":105},"start":{"column":40,"line":105}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3616","location":{"end":{"column":90,"line":105},"start":{"column":40,"line":105}},"mutatorName":"LogicalOperator","replacement":"allowedKeys.includes(key) && this.cannotOverride()","status":"Survived"},{"id":"3617","location":{"end":{"column":6,"line":117},"start":{"column":12,"line":107}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3618","location":{"end":{"column":26,"line":108},"start":{"column":22,"line":108}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3620","location":{"end":{"column":4,"line":125},"start":{"column":34,"line":120}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3619","location":{"end":{"column":8,"line":116},"start":{"column":15,"line":109}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3622","location":{"end":{"column":65,"line":122},"start":{"column":7,"line":122}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3621","location":{"end":{"column":84,"line":123},"start":{"column":7,"line":122}},"mutatorName":"ArithmeticOperator","replacement":"'Cannot override the configuration specified in the JWT. ' - 'The config object should contain only the JWT and callbacks (optionally).'","status":"Survived"},{"id":"3623","location":{"end":{"column":84,"line":123},"start":{"column":9,"line":123}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { Container, Service } from 'typedi';\r\nimport { IConfig } from '../../model/config/IConfig';\r\nimport { ConfigResolver } from '../config-resolver/ConfigResolver';\r\nimport { ConfigValidator } from '../config-validator/ConfigValidator';\r\nimport { MessageBus } from '../../../application/core/shared/message-bus/MessageBus';\r\nimport { PUBLIC_EVENTS } from '../../../application/core/models/constants/EventTypes';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ConfigProvider } from '../config-provider/ConfigProvider';\r\nimport { filter, first } from 'rxjs/operators';\r\nimport { CONFIG } from '../../dependency-injection/InjectionTokens';\r\nimport { JwtDecoder } from '../jwt-decoder/JwtDecoder';\r\n\r\n@Service()\r\nexport class ConfigService implements ConfigProvider {\r\n  private config$: BehaviorSubject<IConfig> = new BehaviorSubject(null);\r\n  private configFromJwt: boolean;\r\n\r\n  constructor(\r\n    private resolver: ConfigResolver,\r\n    private validator: ConfigValidator,\r\n    private messageBus: MessageBus,\r\n    private jwtDecoder: JwtDecoder\r\n  ) {}\r\n\r\n  setup(configObj: IConfig): IConfig {\r\n    const { config, configFromJwt } = this.getConfigurationFromConfigOrJwt(configObj);\r\n\r\n    this.configFromJwt = configFromJwt;\r\n\r\n    return this.updateConfig(config);\r\n  }\r\n\r\n  update(configObj: IConfig): IConfig {\r\n    if (this.configFromJwt) {\r\n      this.cannotOverride();\r\n    }\r\n\r\n    return this.updateConfig(configObj);\r\n  }\r\n\r\n  updateJwt(jwt: string): IConfig {\r\n    return this.updateConfig({ ...this.getConfig(), jwt });\r\n  }\r\n\r\n  updateFragment<K extends 'components' | 'visaCheckout' | 'applePay', C extends IConfig[K]>(\r\n    key: K,\r\n    config: C\r\n  ): IConfig {\r\n    if (this.configFromJwt) {\r\n      this.cannotOverride();\r\n    }\r\n\r\n    const currentConfig = this.getConfig();\r\n    const currentFragment = currentConfig[key];\r\n    const updatedFragment = { ...currentFragment, ...(config || {}) };\r\n    const updatedConfig = { ...currentConfig, [key]: updatedFragment };\r\n\r\n    return this.updateConfig(updatedConfig);\r\n  }\r\n\r\n  getConfig(): IConfig {\r\n    return this.config$.getValue();\r\n  }\r\n\r\n  getConfig$(watchForChanges?: boolean): Observable<IConfig> {\r\n    if (watchForChanges) {\r\n      return this.config$.pipe(filter<IConfig>(Boolean));\r\n    }\r\n\r\n    return this.config$.pipe(filter<IConfig>(Boolean), first());\r\n  }\r\n\r\n  private updateConfig(config: IConfig): IConfig {\r\n    const fullConfig = this.resolver.resolve(config);\r\n    const validationError = this.validator.validate(fullConfig);\r\n\r\n    if (validationError) {\r\n      throw validationError;\r\n    }\r\n\r\n    this.config$.next(fullConfig);\r\n\r\n    this.messageBus.publish({\r\n      type: PUBLIC_EVENTS.CONFIG_CHANGED,\r\n      data: JSON.parse(JSON.stringify(fullConfig))\r\n    });\r\n\r\n    Container.set(CONFIG, fullConfig);\r\n\r\n    return fullConfig;\r\n  }\r\n\r\n  private getConfigurationFromConfigOrJwt(config: IConfig): { config: IConfig; configFromJwt: boolean } {\r\n    const { payload } = this.jwtDecoder.decode(config.jwt);\r\n\r\n    if (!payload.config) {\r\n      return {\r\n        configFromJwt: false,\r\n        config\r\n      };\r\n    }\r\n\r\n    const allowedKeys = ['jwt', 'submitCallback', 'successCallback', 'errorCallback', 'cancelCallback'];\r\n\r\n    Object.keys(config).forEach(key => allowedKeys.includes(key) || this.cannotOverride());\r\n\r\n    return {\r\n      configFromJwt: true,\r\n      config: {\r\n        ...payload.config,\r\n        jwt: config.jwt,\r\n        submitCallback: config.submitCallback,\r\n        successCallback: config.successCallback,\r\n        errorCallback: config.errorCallback,\r\n        cancelCallback: config.cancelCallback\r\n      }\r\n    };\r\n  }\r\n\r\n  private cannotOverride(): void {\r\n    throw new Error(\r\n      'Cannot override the configuration specified in the JWT. ' +\r\n        'The config object should contain only the JWT and callbacks (optionally).'\r\n    );\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\config-validator\\ConfigValidator.ts":{"language":"typescript","mutants":[{"id":"3624","location":{"end":{"column":4,"line":10},"start":{"column":53,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3625","location":{"end":{"column":55,"line":9},"start":{"column":12,"line":9}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3626","location":{"end":{"column":55,"line":9},"start":{"column":12,"line":9}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3627","location":{"end":{"column":55,"line":9},"start":{"column":12,"line":9}},"mutatorName":"LogicalOperator","replacement":"ConfigSchema.validate(config).error && null","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { IConfig } from '../../model/config/IConfig';\r\nimport { ValidationError } from 'joi';\r\nimport { ConfigSchema } from '../storage/ConfigSchema';\r\n\r\n@Service()\r\nexport class ConfigValidator {\r\n  validate(config: IConfig): ValidationError | null {\r\n    return ConfigSchema.validate(config).error || null;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\jwt-decoder\\JwtDecoder.ts":{"language":"typescript","mutants":[{"id":"3628","location":{"end":{"column":4,"line":17},"start":{"column":47,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3629","location":{"end":{"column":13,"line":8},"start":{"column":9,"line":8}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3630","location":{"end":{"column":13,"line":8},"start":{"column":9,"line":8}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3631","location":{"end":{"column":13,"line":8},"start":{"column":9,"line":8}},"mutatorName":"BooleanLiteral","replacement":"jwt","status":"Survived"},{"id":"3633","location":{"end":{"column":64,"line":9},"start":{"column":23,"line":9}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"3632","location":{"end":{"column":6,"line":10},"start":{"column":15,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3635","location":{"end":{"column":6,"line":16},"start":{"column":17,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3634","location":{"end":{"column":6,"line":14},"start":{"column":9,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3636","location":{"end":{"column":59,"line":15},"start":{"column":23,"line":15}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"}],"source":"import JwtDecode from 'jwt-decode';\r\nimport { IStJwtObj } from '../../../application/core/models/IStJwtObj';\r\nimport { Service } from 'typedi';\r\n\r\n@Service()\r\nexport class JwtDecoder {\r\n  decode<T extends IStJwtObj>(jwt: string): T {\r\n    if (!jwt) {\r\n      throw new Error(`Invalid JWT, undefined or empty string.`);\r\n    }\r\n\r\n    try {\r\n      return JwtDecode<T>(jwt);\r\n    } catch (e) {\r\n      throw new Error(`Invalid JWT, cannot parse: ${jwt}.`);\r\n    }\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\message-bus\\FrameAccessor.ts":{"language":"typescript","mutants":[{"id":"3637","location":{"end":{"column":4,"line":18},"start":{"column":28,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3638","location":{"end":{"column":40,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3640","location":{"end":{"column":6,"line":15},"start":{"column":42,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3639","location":{"end":{"column":40,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3641","location":{"end":{"column":4,"line":26},"start":{"column":54,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3642","location":{"end":{"column":41,"line":21},"start":{"column":9,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3643","location":{"end":{"column":41,"line":21},"start":{"column":9,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3644","location":{"end":{"column":6,"line":23},"start":{"column":43,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3645","location":{"end":{"column":4,"line":30},"start":{"column":41,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Inject, Service } from 'typedi';\r\nimport { FrameIdentifier } from './FrameIdentifier';\r\nimport { FrameCollection } from './interfaces/FrameCollection';\r\nimport { WINDOW } from '../../dependency-injection/InjectionTokens';\r\nimport { IControlFrameWindow } from '../../interfaces/IControlFrameWindow';\r\nimport { CONTROL_FRAME_IFRAME } from '../../../application/core/models/constants/Selectors';\r\n\r\n@Service()\r\nexport class FrameAccessor {\r\n  constructor(private identifier: FrameIdentifier, @Inject(WINDOW) private window: Window) {}\r\n\r\n  getParentFrame(): Window {\r\n    if (this.identifier.isParentFrame()) {\r\n      return this.window;\r\n    }\r\n\r\n    return this.window.parent;\r\n  }\r\n\r\n  getControlFrame(): IControlFrameWindow | undefined {\r\n    if (this.identifier.isControlFrame()) {\r\n      return this.window;\r\n    }\r\n\r\n    return this.getFrameCollection()[CONTROL_FRAME_IFRAME];\r\n  }\r\n\r\n  getFrameCollection(): FrameCollection {\r\n    return this.getParentFrame().frames as FrameCollection;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\message-bus\\FrameIdentifier.ts":{"language":"typescript","mutants":[{"id":"3646","location":{"end":{"column":39,"line":7},"start":{"column":34,"line":7}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3647","location":{"end":{"column":4,"line":11},"start":{"column":26,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3648","location":{"end":{"column":4,"line":16},"start":{"column":41,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3649","location":{"end":{"column":59,"line":15},"start":{"column":24,"line":15}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3651","location":{"end":{"column":59,"line":15},"start":{"column":24,"line":15}},"mutatorName":"EqualityOperator","replacement":"frameName !== MERCHANT_PARENT_FRAME","status":"Survived"},{"id":"3650","location":{"end":{"column":59,"line":15},"start":{"column":24,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3652","location":{"end":{"column":4,"line":20},"start":{"column":28,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3653","location":{"end":{"column":4,"line":24},"start":{"column":29,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3654","location":{"end":{"column":56,"line":23},"start":{"column":12,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3655","location":{"end":{"column":56,"line":23},"start":{"column":12,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3656","location":{"end":{"column":56,"line":23},"start":{"column":12,"line":23}},"mutatorName":"EqualityOperator","replacement":"this.getFrameName() !== CONTROL_FRAME_IFRAME","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { CONTROL_FRAME_IFRAME, MERCHANT_PARENT_FRAME } from '../../../application/core/models/constants/Selectors';\r\n\r\n@Service()\r\nexport class FrameIdentifier {\r\n  private frameName: string;\r\n  private parentFrame: boolean = false;\r\n\r\n  getFrameName(): string {\r\n    return this.frameName;\r\n  }\r\n\r\n  setFrameName(frameName: string): void {\r\n    this.frameName = frameName;\r\n    this.parentFrame = frameName === MERCHANT_PARENT_FRAME;\r\n  }\r\n\r\n  isParentFrame(): boolean {\r\n    return this.parentFrame;\r\n  }\r\n\r\n  isControlFrame(): boolean {\r\n    return this.getFrameName() === CONTROL_FRAME_IFRAME;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\message-bus\\FramesHub.ts":{"language":"typescript","mutants":[{"id":"3657","location":{"end":{"column":63,"line":14},"start":{"column":47,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3659","location":{"end":{"column":67,"line":16},"start":{"column":65,"line":16}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"3660","location":{"end":{"column":4,"line":43},"start":{"column":98,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3658","location":{"end":{"column":68,"line":15},"start":{"column":46,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3661","location":{"end":{"column":98,"line":19},"start":{"column":75,"line":19}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3662","location":{"end":{"column":77,"line":21},"start":{"column":39,"line":21}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3663","location":{"end":{"column":62,"line":25},"start":{"column":14,"line":25}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3664","location":{"end":{"column":50,"line":26},"start":{"column":11,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3665","location":{"end":{"column":89,"line":32},"start":{"column":13,"line":32}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3667","location":{"end":{"column":89,"line":38},"start":{"column":18,"line":38}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3666","location":{"end":{"column":88,"line":32},"start":{"column":61,"line":32}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"3668","location":{"end":{"column":52,"line":41},"start":{"column":50,"line":41}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"3669","location":{"end":{"column":56,"line":42},"start":{"column":18,"line":42}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3670","location":{"end":{"column":4,"line":50},"start":{"column":59,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3672","location":{"end":{"column":48,"line":47},"start":{"column":21,"line":47}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3671","location":{"end":{"column":48,"line":47},"start":{"column":11,"line":47}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3673","location":{"end":{"column":48,"line":47},"start":{"column":21,"line":47}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3674","location":{"end":{"column":48,"line":47},"start":{"column":21,"line":47}},"mutatorName":"EqualityOperator","replacement":"frames.indexOf(name) === -1","status":"Survived"},{"id":"3675","location":{"end":{"column":48,"line":47},"start":{"column":46,"line":47}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"3676","location":{"end":{"column":4,"line":54},"start":{"column":57,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3677","location":{"end":{"column":4,"line":64},"start":{"column":35,"line":56}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3678","location":{"end":{"column":44,"line":59},"start":{"column":9,"line":59}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3680","location":{"end":{"column":44,"line":59},"start":{"column":9,"line":59}},"mutatorName":"EqualityOperator","replacement":"frameName !== MERCHANT_PARENT_FRAME","status":"Survived"},{"id":"3679","location":{"end":{"column":44,"line":59},"start":{"column":9,"line":59}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3681","location":{"end":{"column":6,"line":61},"start":{"column":46,"line":59}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3682","location":{"end":{"column":82,"line":63},"start":{"column":28,"line":63}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3683","location":{"end":{"column":4,"line":72},"start":{"column":35,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3684","location":{"end":{"column":40,"line":67},"start":{"column":9,"line":67}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3685","location":{"end":{"column":40,"line":67},"start":{"column":9,"line":67}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3686","location":{"end":{"column":6,"line":69},"start":{"column":42,"line":67}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3688","location":{"end":{"column":30,"line":75},"start":{"column":28,"line":75}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"3687","location":{"end":{"column":4,"line":76},"start":{"column":18,"line":74}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3689","location":{"end":{"column":4,"line":84},"start":{"column":52,"line":78}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3690","location":{"end":{"column":40,"line":79},"start":{"column":9,"line":79}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3691","location":{"end":{"column":40,"line":79},"start":{"column":9,"line":79}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3692","location":{"end":{"column":6,"line":81},"start":{"column":42,"line":79}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3693","location":{"end":{"column":19,"line":80},"start":{"column":17,"line":80}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"3695","location":{"end":{"column":4,"line":97},"start":{"column":72,"line":86}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3694","location":{"end":{"column":87,"line":83},"start":{"column":51,"line":83}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3696","location":{"end":{"column":41,"line":87},"start":{"column":9,"line":87}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3697","location":{"end":{"column":41,"line":87},"start":{"column":9,"line":87}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3698","location":{"end":{"column":41,"line":87},"start":{"column":9,"line":87}},"mutatorName":"BooleanLiteral","replacement":"this.identifier.isParentFrame()","status":"Survived"},{"id":"3699","location":{"end":{"column":6,"line":89},"start":{"column":43,"line":87}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3700","location":{"end":{"column":6,"line":94},"start":{"column":37,"line":91}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3701","location":{"end":{"column":71,"line":96},"start":{"column":26,"line":96}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { InterFrameCommunicator } from './InterFrameCommunicator';\r\nimport { BehaviorSubject, from, Observable, of, Subject } from 'rxjs';\r\nimport { ofType } from './operators/ofType';\r\nimport { distinctUntilChanged, filter, first, map, mapTo, withLatestFrom } from 'rxjs/operators';\r\nimport { IMessageBusEvent } from '../../../application/core/models/IMessageBusEvent';\r\nimport { MERCHANT_PARENT_FRAME } from '../../../application/core/models/constants/Selectors';\r\nimport { FrameIdentifier } from './FrameIdentifier';\r\nimport { ArrayUtils } from '../../../application/core/shared/array-utils/ArrayUtils';\r\nimport { PUBLIC_EVENTS } from '../../../application/core/models/constants/EventTypes';\r\n\r\n@Service()\r\nexport class FramesHub {\r\n  private static readonly FRAME_READY_EVENT = 'ST_FRAME_READY';\r\n  private static readonly GET_FRAMES_EVENT = 'ST_GET_ACTIVE_FRAMES';\r\n  private activeFrame$: Subject<string[]> = new BehaviorSubject([]);\r\n\r\n  constructor(private communicator: InterFrameCommunicator, private identifier: FrameIdentifier) {\r\n    this.communicator.whenReceive(FramesHub.GET_FRAMES_EVENT).thenRespond(() => this.activeFrame$);\r\n\r\n    this.getInitialFrames().subscribe(value => this.activeFrame$.next(value));\r\n\r\n    const fromEventFrame$ = this.communicator.incomingEvent$.pipe(\r\n      ofType(FramesHub.FRAME_READY_EVENT),\r\n      filter((event: IMessageBusEvent) => Boolean(event.data)),\r\n      map((event: IMessageBusEvent) => event.data)\r\n    );\r\n\r\n    fromEventFrame$\r\n      .pipe(\r\n        withLatestFrom(this.activeFrame$),\r\n        map(([newFrame, activeFrames]) => ArrayUtils.unique([...activeFrames, newFrame]))\r\n      )\r\n      .subscribe(this.activeFrame$);\r\n\r\n    fromEventFrame$\r\n      .pipe(withLatestFrom(this.activeFrame$))\r\n      .subscribe(([newFrame, activeFrames]) => this.onFrameReady(newFrame, activeFrames));\r\n\r\n    this.communicator.incomingEvent$\r\n      .pipe(ofType(PUBLIC_EVENTS.DESTROY), mapTo([]))\r\n      .subscribe(value => this.activeFrame$.next(value));\r\n  }\r\n\r\n  public isFrameActive(name: string): Observable<boolean> {\r\n    return this.activeFrame$.pipe(\r\n      map(frames => frames.indexOf(name) !== -1),\r\n      distinctUntilChanged()\r\n    );\r\n  }\r\n\r\n  public waitForFrame(name: string): Observable<string> {\r\n    return this.isFrameActive(name).pipe(filter(Boolean), first(), mapTo(name));\r\n  }\r\n\r\n  public notifyReadyState(): void {\r\n    const frameName = this.identifier.getFrameName();\r\n\r\n    if (frameName === MERCHANT_PARENT_FRAME) {\r\n      return;\r\n    }\r\n\r\n    this.communicator.send({ type: FramesHub.FRAME_READY_EVENT, data: frameName }, MERCHANT_PARENT_FRAME);\r\n  }\r\n\r\n  public getParentFrame(): Window {\r\n    if (this.identifier.isParentFrame()) {\r\n      return window;\r\n    }\r\n\r\n    return window.parent;\r\n  }\r\n\r\n  public reset() {\r\n    this.activeFrame$.next([]);\r\n  }\r\n\r\n  private getInitialFrames(): Observable<string[]> {\r\n    if (this.identifier.isParentFrame()) {\r\n      return of([]);\r\n    }\r\n\r\n    return from(this.communicator.query<string[]>({ type: FramesHub.GET_FRAMES_EVENT }, MERCHANT_PARENT_FRAME));\r\n  }\r\n\r\n  private onFrameReady(newFrame: string, activeFrames: string[]): void {\r\n    if (!this.identifier.isParentFrame()) {\r\n      return;\r\n    }\r\n\r\n    const event: IMessageBusEvent = {\r\n      type: FramesHub.FRAME_READY_EVENT,\r\n      data: newFrame\r\n    };\r\n\r\n    activeFrames.forEach(frame => this.communicator.send(event, frame));\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\message-bus\\InterFrameCommunicator.ts":{"language":"typescript","mutants":[{"id":"3702","location":{"end":{"column":52,"line":19},"start":{"column":43,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3704","location":{"end":{"column":4,"line":39},"start":{"column":90,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3705","location":{"end":{"column":94,"line":29},"start":{"column":7,"line":29}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3703","location":{"end":{"column":47,"line":20},"start":{"column":44,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3706","location":{"end":{"column":93,"line":29},"start":{"column":89,"line":29}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3708","location":{"end":{"column":38,"line":32},"start":{"column":14,"line":32}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3707","location":{"end":{"column":91,"line":30},"start":{"column":7,"line":30}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3709","location":{"end":{"column":30,"line":33},"start":{"column":11,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3710","location":{"end":{"column":4,"line":55},"start":{"column":73,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3711","location":{"end":{"column":6,"line":48},"start":{"column":9,"line":42}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3712","location":{"end":{"column":54,"line":45},"start":{"column":27,"line":45}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3713","location":{"end":{"column":54,"line":45},"start":{"column":27,"line":45}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3714","location":{"end":{"column":54,"line":45},"start":{"column":27,"line":45}},"mutatorName":"EqualityOperator","replacement":"targetFrame !== parentFrame","status":"Survived"},{"id":"3715","location":{"end":{"column":6,"line":54},"start":{"column":17,"line":48}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3716","location":{"end":{"column":37,"line":49},"start":{"column":11,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3717","location":{"end":{"column":37,"line":49},"start":{"column":11,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3718","location":{"end":{"column":8,"line":51},"start":{"column":39,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3720","location":{"end":{"column":6,"line":79},"start":{"column":45,"line":58}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3721","location":{"end":{"column":82,"line":59},"start":{"column":27,"line":59}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3719","location":{"end":{"column":4,"line":80},"start":{"column":83,"line":57}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3723","location":{"end":{"column":82,"line":59},"start":{"column":27,"line":59}},"mutatorName":"LogicalOperator","replacement":"this.identifier.getFrameName() && MERCHANT_PARENT_FRAME","status":"Survived"},{"id":"3722","location":{"end":{"column":82,"line":59},"start":{"column":27,"line":59}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3724","location":{"end":{"column":80,"line":65},"start":{"column":18,"line":65}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3726","location":{"end":{"column":80,"line":65},"start":{"column":49,"line":65}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3725","location":{"end":{"column":80,"line":65},"start":{"column":49,"line":65}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3727","location":{"end":{"column":80,"line":65},"start":{"column":49,"line":65}},"mutatorName":"EqualityOperator","replacement":"event.queryId !== query.queryId","status":"Survived"},{"id":"3728","location":{"end":{"column":56,"line":66},"start":{"column":15,"line":66}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3729","location":{"end":{"column":10,"line":76},"start":{"column":20,"line":69}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3730","location":{"end":{"column":12,"line":72},"start":{"column":24,"line":70}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3731","location":{"end":{"column":12,"line":75},"start":{"column":24,"line":73}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3732","location":{"end":{"column":4,"line":101},"start":{"column":41,"line":82}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3733","location":{"end":{"column":6,"line":100},"start":{"column":12,"line":83}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3734","location":{"end":{"column":8,"line":99},"start":{"column":87,"line":84}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3735","location":{"end":{"column":84,"line":88},"start":{"column":20,"line":88}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3738","location":{"end":{"column":84,"line":88},"start":{"column":50,"line":88}},"mutatorName":"EqualityOperator","replacement":"queryEvent.data.type !== eventType","status":"Survived"},{"id":"3736","location":{"end":{"column":84,"line":88},"start":{"column":50,"line":88}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3737","location":{"end":{"column":84,"line":88},"start":{"column":50,"line":88}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3739","location":{"end":{"column":16,"line":93},"start":{"column":23,"line":89}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3740","location":{"end":{"column":111,"line":92},"start":{"column":21,"line":92}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3741","location":{"end":{"column":12,"line":98},"start":{"column":56,"line":96}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3742","location":{"end":{"column":4,"line":106},"start":{"column":24,"line":103}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3743","location":{"end":{"column":4,"line":124},"start":{"column":63,"line":108}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3744","location":{"end":{"column":33,"line":109},"start":{"column":9,"line":109}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3745","location":{"end":{"column":33,"line":109},"start":{"column":9,"line":109}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3746","location":{"end":{"column":6,"line":111},"start":{"column":35,"line":109}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3748","location":{"end":{"column":41,"line":113},"start":{"column":9,"line":113}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3747","location":{"end":{"column":41,"line":113},"start":{"column":9,"line":113}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3750","location":{"end":{"column":6,"line":115},"start":{"column":43,"line":113}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3749","location":{"end":{"column":41,"line":113},"start":{"column":9,"line":113}},"mutatorName":"EqualityOperator","replacement":"target !== MERCHANT_PARENT_FRAME","status":"Survived"},{"id":"3751","location":{"end":{"column":41,"line":119},"start":{"column":9,"line":119}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3752","location":{"end":{"column":41,"line":119},"start":{"column":9,"line":119}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3753","location":{"end":{"column":41,"line":119},"start":{"column":9,"line":119}},"mutatorName":"LogicalOperator","replacement":"target === '' && !frames[target]","status":"Survived"},{"id":"3754","location":{"end":{"column":22,"line":119},"start":{"column":9,"line":119}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3755","location":{"end":{"column":22,"line":119},"start":{"column":9,"line":119}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3756","location":{"end":{"column":22,"line":119},"start":{"column":9,"line":119}},"mutatorName":"EqualityOperator","replacement":"target !== ''","status":"Survived"},{"id":"3757","location":{"end":{"column":22,"line":119},"start":{"column":20,"line":119}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3758","location":{"end":{"column":41,"line":119},"start":{"column":26,"line":119}},"mutatorName":"BooleanLiteral","replacement":"frames[target]","status":"Survived"},{"id":"3759","location":{"end":{"column":6,"line":121},"start":{"column":43,"line":119}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3760","location":{"end":{"column":68,"line":120},"start":{"column":31,"line":120}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"3761","location":{"end":{"column":4,"line":138},"start":{"column":37,"line":126}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3762","location":{"end":{"column":26,"line":127},"start":{"column":9,"line":127}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3763","location":{"end":{"column":26,"line":127},"start":{"column":9,"line":127}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3764","location":{"end":{"column":6,"line":129},"start":{"column":28,"line":127}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3766","location":{"end":{"column":30,"line":131},"start":{"column":9,"line":131}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3765","location":{"end":{"column":30,"line":131},"start":{"column":9,"line":131}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3767","location":{"end":{"column":6,"line":135},"start":{"column":32,"line":131}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3770","location":{"end":{"column":96,"line":132},"start":{"column":27,"line":132}},"mutatorName":"LogicalOperator","replacement":"Container.get(CONFIG).origin && InterFrameCommunicator.DEFAULT_ORIGIN","status":"Survived"},{"id":"3768","location":{"end":{"column":96,"line":132},"start":{"column":27,"line":132}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3769","location":{"end":{"column":96,"line":132},"start":{"column":27,"line":132}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"}],"source":"import { Container, Service } from 'typedi';\nimport { fromEventPattern, Observable, Subject } from 'rxjs';\nimport { IMessageBusEvent } from '../../../application/core/models/IMessageBusEvent';\nimport { filter, map, share, switchMap, take } from 'rxjs/operators';\nimport { ofType } from './operators/ofType';\nimport { QueryMessage } from './messages/QueryMessage';\nimport { ResponseMessage } from './messages/ResponseMessage';\nimport { environment } from '../../../environments/environment';\nimport { FrameCollection } from './interfaces/FrameCollection';\nimport { MERCHANT_PARENT_FRAME } from '../../../application/core/models/constants/Selectors';\nimport { FrameIdentifier } from './FrameIdentifier';\nimport { FrameAccessor } from './FrameAccessor';\nimport { FrameNotFound } from './errors/FrameNotFound';\nimport { Debug } from '../../Debug';\nimport { CONFIG } from '../../dependency-injection/InjectionTokens';\n\n@Service()\nexport class InterFrameCommunicator {\n  private static readonly MESSAGE_EVENT = 'message';\n  private static readonly DEFAULT_ORIGIN = '*';\n  public readonly incomingEvent$: Observable<IMessageBusEvent>;\n  public readonly communicationClosed$: Observable<void>;\n  private readonly close$ = new Subject<void>();\n  private readonly frameOrigin: string;\n  private parentOrigin: string;\n\n  constructor(private identifier: FrameIdentifier, private frameAccessor: FrameAccessor) {\n    this.incomingEvent$ = fromEventPattern<MessageEvent>(\n      handler => window.addEventListener(InterFrameCommunicator.MESSAGE_EVENT, handler, true),\n      handler => window.removeEventListener(InterFrameCommunicator.MESSAGE_EVENT, handler)\n    ).pipe(\n      filter(event => event.data.type),\n      map(event => event.data),\n      share()\n    );\n\n    this.communicationClosed$ = this.close$.asObservable();\n    this.frameOrigin = new URL(environment.FRAME_URL).origin;\n  }\n\n  public send(message: IMessageBusEvent, target: Window | string): void {\n    try {\n      const parentFrame = this.frameAccessor.getParentFrame();\n      const targetFrame = this.resolveTargetFrame(target);\n      const frameOrigin = targetFrame === parentFrame ? this.getParentOrigin() : this.frameOrigin;\n\n      targetFrame.postMessage(message, frameOrigin);\n    } catch (e) {\n      if (e instanceof FrameNotFound) {\n        return Debug.warn(e.message);\n      }\n\n      throw e;\n    }\n  }\n\n  public query<T>(message: IMessageBusEvent, target: Window | string): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const sourceFrame = this.identifier.getFrameName() || MERCHANT_PARENT_FRAME;\n      const query = new QueryMessage(message, sourceFrame);\n\n      this.incomingEvent$\n        .pipe(\n          ofType(ResponseMessage.MESSAGE_TYPE),\n          filter((event: ResponseMessage<T>) => event.queryId === query.queryId),\n          map((event: ResponseMessage<T>) => event.data),\n          take(1)\n        )\n        .subscribe({\n          next(result) {\n            resolve(result);\n          },\n          error(error) {\n            reject(error);\n          }\n        });\n\n      this.send(query, target);\n    });\n  }\n\n  public whenReceive(eventType: string) {\n    return {\n      thenRespond: <T>(responder: (queryEvent: IMessageBusEvent) => Observable<T>) => {\n        this.incomingEvent$\n          .pipe(\n            ofType(QueryMessage.MESSAGE_TYPE),\n            filter((queryEvent: QueryMessage) => queryEvent.data.type === eventType),\n            switchMap((queryEvent: QueryMessage) =>\n              responder(queryEvent.data).pipe(\n                take(1),\n                map((response: T) => new ResponseMessage(response, queryEvent.queryId, queryEvent.sourceFrame))\n              )\n            )\n          )\n          .subscribe((response: ResponseMessage<T>) => {\n            this.send(response, response.queryFrame);\n          });\n      }\n    };\n  }\n\n  public close(): void {\n    this.close$.next();\n    this.close$.complete();\n  }\n\n  private resolveTargetFrame(target: Window | string): Window {\n    if (target instanceof Window) {\n      return target;\n    }\n\n    if (target === MERCHANT_PARENT_FRAME) {\n      return this.frameAccessor.getParentFrame();\n    }\n\n    const frames: FrameCollection = this.frameAccessor.getFrameCollection();\n\n    if (target === '' || !frames[target]) {\n      throw new FrameNotFound(`Target frame \"${target}\" not found.`);\n    }\n\n    return frames[target];\n  }\n\n  private getParentOrigin(): string {\n    if (this.parentOrigin) {\n      return this.parentOrigin;\n    }\n\n    if (Container.has(CONFIG)) {\n      this.parentOrigin = Container.get(CONFIG).origin || InterFrameCommunicator.DEFAULT_ORIGIN;\n\n      return this.parentOrigin;\n    }\n\n    return InterFrameCommunicator.DEFAULT_ORIGIN;\n  }\n}\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\message-bus\\MessageSubscriberRegistry.ts":{"language":"typescript","mutants":[{"id":"3771","location":{"end":{"column":4,"line":11},"start":{"column":63,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3772","location":{"end":{"column":82,"line":10},"start":{"column":32,"line":10}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import { IMessageSubscriber } from './interfaces/IMessageSubscriber';\nimport { Service } from 'typedi';\nimport { MessageBus } from '../../../application/core/shared/message-bus/MessageBus';\n\n@Service()\nexport class MessageSubscriberRegistry {\n  constructor(private messageBus: MessageBus) {}\n\n  register(...messageSubscribers: IMessageSubscriber[]): void {\n    messageSubscribers.forEach(subscriber => subscriber.register(this.messageBus));\n  }\n}\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\message-bus\\messages\\QueryMessage.ts":{"language":"typescript","mutants":[{"id":"3773","location":{"end":{"column":44,"line":5},"start":{"column":34,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3774","location":{"end":{"column":4,"line":11},"start":{"column":78,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { IMessageBusEvent } from '../../../../application/core/models/IMessageBusEvent';\r\nimport { Uuid } from '../../../../application/core/shared/uuid/Uuid';\r\n\r\nexport class QueryMessage implements IMessageBusEvent {\r\n  static readonly MESSAGE_TYPE = 'ST_QUERY';\r\n  readonly type = QueryMessage.MESSAGE_TYPE;\r\n  readonly queryId: string;\r\n\r\n  constructor(readonly data: IMessageBusEvent, readonly sourceFrame: string) {\r\n    this.queryId = Uuid.uuidv4();\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\message-bus\\messages\\ResponseMessage.ts":{"language":"typescript","mutants":[{"id":"3775","location":{"end":{"column":47,"line":4},"start":{"column":34,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { IMessageBusEvent } from '../../../../application/core/models/IMessageBusEvent';\r\n\r\nexport class ResponseMessage<T> implements IMessageBusEvent {\r\n  static readonly MESSAGE_TYPE = 'ST_RESPONSE';\r\n  readonly type = ResponseMessage.MESSAGE_TYPE;\r\n\r\n  constructor(readonly data: T, readonly queryId: string, readonly queryFrame: string) {}\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\message-bus\\operators\\ofType.ts":{"language":"typescript","mutants":[{"id":"3776","location":{"end":{"column":2,"line":7},"start":{"column":66,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3777","location":{"end":{"column":101,"line":6},"start":{"column":10,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3778","location":{"end":{"column":99,"line":6},"start":{"column":71,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3780","location":{"end":{"column":99,"line":6},"start":{"column":80,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3779","location":{"end":{"column":99,"line":6},"start":{"column":80,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3781","location":{"end":{"column":99,"line":6},"start":{"column":80,"line":6}},"mutatorName":"EqualityOperator","replacement":"event.type !== type","status":"Survived"}],"source":"import { Observable } from 'rxjs';\r\nimport { IMessageBusEvent } from '../../../../application/core/models/IMessageBusEvent';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nexport function ofType<T extends IMessageBusEvent>(type: string) {\r\n  return (source: Observable<T>): Observable<T> => source.pipe(filter(event => event.type === type));\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\sentry\\EventScrubber.ts":{"language":"typescript","mutants":[{"id":"3782","location":{"end":{"column":4,"line":20},"start":{"column":30,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3783","location":{"end":{"column":42,"line":7},"start":{"column":9,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3785","location":{"end":{"column":42,"line":7},"start":{"column":9,"line":7}},"mutatorName":"LogicalOperator","replacement":"event.extra || event.extra.config","status":"Survived"},{"id":"3784","location":{"end":{"column":42,"line":7},"start":{"column":9,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3786","location":{"end":{"column":6,"line":9},"start":{"column":44,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3787","location":{"end":{"column":67,"line":8},"start":{"column":28,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3788","location":{"end":{"column":65,"line":8},"start":{"column":58,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3789","location":{"end":{"column":43,"line":11},"start":{"column":9,"line":11}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3790","location":{"end":{"column":43,"line":11},"start":{"column":9,"line":11}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3791","location":{"end":{"column":43,"line":11},"start":{"column":9,"line":11}},"mutatorName":"LogicalOperator","replacement":"event.request || event.request.url","status":"Survived"},{"id":"3792","location":{"end":{"column":6,"line":13},"start":{"column":45,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3793","location":{"end":{"column":52,"line":15},"start":{"column":9,"line":15}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3794","location":{"end":{"column":52,"line":15},"start":{"column":9,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3795","location":{"end":{"column":52,"line":15},"start":{"column":9,"line":15}},"mutatorName":"LogicalOperator","replacement":"event.request || event.request.query_string","status":"Survived"},{"id":"3796","location":{"end":{"column":6,"line":17},"start":{"column":54,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3797","location":{"end":{"column":4,"line":24},"start":{"column":48,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3798","location":{"end":{"column":71,"line":23},"start":{"column":56,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { Event } from '@sentry/types';\r\n\r\n@Service()\r\nexport class EventScrubber {\r\n  scrub(event: Event): Event {\r\n    if (event.extra && event.extra.config) {\r\n      event.extra.config = { ...event.extra.config, jwt: '*****' };\r\n    }\r\n\r\n    if (event.request && event.request.url) {\r\n      event.request.url = this.maskJwt(event.request.url);\r\n    }\r\n\r\n    if (event.request && event.request.query_string) {\r\n      event.request.query_string = this.maskJwt(event.request.query_string);\r\n    }\r\n\r\n    return event;\r\n  }\r\n\r\n  private maskJwt(queryString: string): string {\r\n    return queryString.replace(/(^|\\?|&)jwt=.*?(&|$)/, '$1jwt=*****$2');\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\sentry\\Sentry.ts":{"language":"typescript","mutants":[{"id":"3799","location":{"end":{"column":4,"line":8},"start":{"column":40,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3800","location":{"end":{"column":4,"line":12},"start":{"column":44,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3801","location":{"end":{"column":4,"line":16},"start":{"column":37,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { init, setTag, setExtra, BrowserOptions } from '@sentry/browser';\r\n\r\n@Service()\r\nexport class Sentry {\r\n  init(options?: BrowserOptions): void {\r\n    init(options);\r\n  }\r\n\r\n  setTag(key: string, value: string): void {\r\n    setTag(key, value);\r\n  }\r\n\r\n  setExtra(key: string, extra: any) {\r\n    setExtra(key, extra);\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\sentry\\SentryContext.ts":{"language":"typescript","mutants":[{"id":"3802","location":{"end":{"column":4,"line":13},"start":{"column":26,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3803","location":{"end":{"column":4,"line":17},"start":{"column":25,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3804","location":{"end":{"column":4,"line":21},"start":{"column":41,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3805","location":{"end":{"column":43,"line":20},"start":{"column":37,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3807","location":{"end":{"column":4,"line":25},"start":{"column":31,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3806","location":{"end":{"column":51,"line":20},"start":{"column":46,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { FrameIdentifier } from '../message-bus/FrameIdentifier';\r\nimport { environment } from '../../../environments/environment';\r\n\r\ntype EnvironmentName = 'dev' | 'prod';\r\n\r\n@Service()\r\nexport class SentryContext {\r\n  constructor(private frameIdentifier: FrameIdentifier) {}\r\n\r\n  getFrameName(): string {\r\n    return this.frameIdentifier.getFrameName();\r\n  }\r\n\r\n  getHostName(): string {\r\n    return window.location.hostname;\r\n  }\r\n\r\n  getEnvironmentName(): EnvironmentName {\r\n    return environment.production ? 'prod' : 'dev';\r\n  }\r\n\r\n  getReleaseVersion(): string {\r\n    return require('../../../../package.json').version;\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\sentry\\SentryService.ts":{"language":"typescript","mutants":[{"id":"3808","location":{"end":{"column":4,"line":22},"start":{"column":5,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3809","location":{"end":{"column":50,"line":21},"start":{"column":46,"line":21}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3810","location":{"end":{"column":49,"line":24},"start":{"column":47,"line":24}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"3812","location":{"end":{"column":13,"line":25},"start":{"column":9,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3811","location":{"end":{"column":4,"line":37},"start":{"column":57,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3813","location":{"end":{"column":13,"line":25},"start":{"column":9,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3814","location":{"end":{"column":13,"line":25},"start":{"column":9,"line":25}},"mutatorName":"BooleanLiteral","replacement":"dsn","status":"Survived"},{"id":"3815","location":{"end":{"column":6,"line":27},"start":{"column":15,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3816","location":{"end":{"column":47,"line":32},"start":{"column":16,"line":32}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3817","location":{"end":{"column":54,"line":33},"start":{"column":13,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3818","location":{"end":{"column":37,"line":34},"start":{"column":19,"line":34}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3819","location":{"end":{"column":66,"line":36},"start":{"column":18,"line":36}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3820","location":{"end":{"column":57,"line":36},"start":{"column":49,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3821","location":{"end":{"column":4,"line":50},"start":{"column":66,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3822","location":{"end":{"column":34,"line":40},"start":{"column":24,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3823","location":{"end":{"column":35,"line":41},"start":{"column":24,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3824","location":{"end":{"column":6,"line":49},"start":{"column":22,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3825","location":{"end":{"column":68,"line":48},"start":{"column":19,"line":48}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import { ConfigProvider } from '../config-provider/ConfigProvider';\r\nimport { Service } from 'typedi';\r\nimport { SentryContext } from './SentryContext';\r\nimport { Event } from '@sentry/types';\r\nimport { EventScrubber } from './EventScrubber';\r\nimport { Sentry } from './Sentry';\r\nimport { Observable } from 'rxjs';\r\nimport { IConfig } from '../../model/config/IConfig';\r\nimport { filter, first, switchMap, tap } from 'rxjs/operators';\r\n\r\n@Service()\r\nexport class SentryService {\r\n  private config$: Observable<IConfig>;\r\n\r\n  constructor(\r\n    private configProvider: ConfigProvider,\r\n    private sentry: Sentry,\r\n    private sentryContext: SentryContext,\r\n    private eventScrubber: EventScrubber\r\n  ) {\r\n    this.config$ = configProvider.getConfig$(true);\r\n  }\r\n\r\n  init(dsn: string, whitelistUrls: string[] = []): void {\r\n    if (!dsn) {\r\n      return;\r\n    }\r\n\r\n    this.config$\r\n      .pipe(\r\n        first(),\r\n        filter(config => config.errorReporting),\r\n        tap(() => this.initSentry(dsn, whitelistUrls)),\r\n        switchMap(() => this.config$)\r\n      )\r\n      .subscribe(config => this.sentry.setExtra('config', config));\r\n  }\r\n\r\n  private initSentry(dsn: string, whitelistUrls: string[]): void {\r\n    this.sentry.setTag('hostName', this.sentryContext.getHostName());\r\n    this.sentry.setTag('frameName', this.sentryContext.getFrameName());\r\n\r\n    this.sentry.init({\r\n      dsn,\r\n      whitelistUrls,\r\n      environment: this.sentryContext.getEnvironmentName(),\r\n      release: this.sentryContext.getReleaseVersion(),\r\n      beforeSend: (event: Event) => this.eventScrubber.scrub(event)\r\n    });\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\storage\\AbstractStorage.ts":{"language":"typescript","mutants":[{"id":"3826","location":{"end":{"column":52,"line":12},"start":{"column":43,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3829","location":{"end":{"column":86,"line":24},"start":{"column":82,"line":24}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3827","location":{"end":{"column":4,"line":39},"start":{"column":5,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3828","location":{"end":{"column":87,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3830","location":{"end":{"column":84,"line":25},"start":{"column":7,"line":25}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3831","location":{"end":{"column":42,"line":27},"start":{"column":17,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3832","location":{"end":{"column":44,"line":28},"start":{"column":11,"line":28}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3833","location":{"end":{"column":43,"line":28},"start":{"column":18,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3834","location":{"end":{"column":6,"line":38},"start":{"column":105,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3835","location":{"end":{"column":4,"line":43},"start":{"column":40,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3836","location":{"end":{"column":74,"line":45},"start":{"column":70,"line":45}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3837","location":{"end":{"column":4,"line":52},"start":{"column":82,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3839","location":{"end":{"column":20,"line":49},"start":{"column":9,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3838","location":{"end":{"column":20,"line":49},"start":{"column":9,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3840","location":{"end":{"column":6,"line":51},"start":{"column":22,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3841","location":{"end":{"column":4,"line":59},"start":{"column":85,"line":54}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3842","location":{"end":{"column":39,"line":56},"start":{"column":11,"line":56}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3843","location":{"end":{"column":4,"line":74},"start":{"column":36,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3844","location":{"end":{"column":6,"line":68},"start":{"column":9,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3845","location":{"end":{"column":50,"line":67},"start":{"column":36,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3847","location":{"end":{"column":49,"line":69},"start":{"column":36,"line":69}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3846","location":{"end":{"column":6,"line":70},"start":{"column":17,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3848","location":{"end":{"column":56,"line":72},"start":{"column":52,"line":72}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3849","location":{"end":{"column":62,"line":72},"start":{"column":58,"line":72}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"3850","location":{"end":{"column":4,"line":89},"start":{"column":64,"line":76}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3852","location":{"end":{"column":27,"line":79},"start":{"column":13,"line":79}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3851","location":{"end":{"column":6,"line":80},"start":{"column":37,"line":77}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3853","location":{"end":{"column":41,"line":82},"start":{"column":9,"line":82}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3855","location":{"end":{"column":41,"line":82},"start":{"column":9,"line":82}},"mutatorName":"BooleanLiteral","replacement":"this.identifier.isParentFrame()","status":"Survived"},{"id":"3854","location":{"end":{"column":41,"line":82},"start":{"column":9,"line":82}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3856","location":{"end":{"column":6,"line":84},"start":{"column":43,"line":82}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3857","location":{"end":{"column":77,"line":88},"start":{"column":18,"line":88}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import { IStorage } from './IStorage';\r\nimport { fromEventPattern, Observable, Subscribable } from 'rxjs';\r\nimport { map, shareReplay, startWith } from 'rxjs/operators';\r\nimport { InterFrameCommunicator } from '../message-bus/InterFrameCommunicator';\r\nimport { ofType } from '../message-bus/operators/ofType';\r\nimport { FramesHub } from '../message-bus/FramesHub';\r\nimport { IMessageBusEvent } from '../../../application/core/models/IMessageBusEvent';\r\nimport { FrameIdentifier } from '../message-bus/FrameIdentifier';\r\nimport { CONTROL_FRAME_IFRAME, MERCHANT_PARENT_FRAME } from '../../../application/core/models/constants/Selectors';\r\n\r\nexport abstract class AbstractStorage implements IStorage, Subscribable<any> {\r\n  private static readonly STORAGE_EVENT = 'storage';\r\n  public readonly pipe: Observable<any>['pipe'];\r\n  public readonly subscribe: Observable<any>['subscribe'];\r\n  private readonly observable$: Observable<any>;\r\n\r\n  protected constructor(\r\n    private nativeStorage: Storage,\r\n    private communicator: InterFrameCommunicator,\r\n    private framesHub: FramesHub,\r\n    private identifier: FrameIdentifier\r\n  ) {\r\n    this.observable$ = fromEventPattern(\r\n      handler => window.addEventListener(AbstractStorage.STORAGE_EVENT, handler, true),\r\n      handler => window.removeEventListener(AbstractStorage.STORAGE_EVENT, handler)\r\n    ).pipe(\r\n      startWith({ ...this.nativeStorage }),\r\n      map(() => ({ ...this.nativeStorage })),\r\n      shareReplay(1)\r\n    );\r\n    this.pipe = this.observable$.pipe.bind(this.observable$);\r\n    this.subscribe = this.observable$.subscribe.bind(this.observable$);\r\n\r\n    this.communicator.incomingEvent$.pipe(ofType(this.getSychronizationEventName())).subscribe(event => {\r\n      const { key, value } = event.data;\r\n      this.nativeStorage.setItem(key, value);\r\n      this.emitStorageEvent();\r\n    });\r\n  }\r\n\r\n  public getItem(name: string): string {\r\n    return this.nativeStorage.getItem(name);\r\n  }\r\n\r\n  public setItem(name: string, value: string, synchronize: boolean = true): void {\r\n    this.nativeStorage.setItem(name, value);\r\n    this.emitStorageEvent();\r\n\r\n    if (synchronize) {\r\n      this.synchronizeStorage(name, value);\r\n    }\r\n  }\r\n\r\n  public select<T>(selector: (storage: { [key: string]: any }) => T): Observable<T> {\r\n    return this.observable$.pipe(\r\n      map(storage => selector(storage)),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  protected abstract getSychronizationEventName(): string;\r\n\r\n  private emitStorageEvent(): void {\r\n    let event: Event;\r\n\r\n    try {\r\n      event = document.createEvent('StorageEvent');\r\n    } catch (e) {\r\n      event = document.createEvent('customevent');\r\n    }\r\n\r\n    event.initEvent(AbstractStorage.STORAGE_EVENT, true, true);\r\n    window.dispatchEvent(event);\r\n  }\r\n\r\n  private synchronizeStorage(key: string, value: string): void {\r\n    const event: IMessageBusEvent = {\r\n      type: this.getSychronizationEventName(),\r\n      data: { key, value }\r\n    };\r\n\r\n    if (!this.identifier.isParentFrame()) {\r\n      return this.communicator.send(event, MERCHANT_PARENT_FRAME);\r\n    }\r\n\r\n    this.framesHub\r\n      .waitForFrame(CONTROL_FRAME_IFRAME)\r\n      .subscribe(controlFrame => this.communicator.send(event, controlFrame));\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\storage\\BrowserLocalStorage.ts":{"language":"typescript","mutants":[{"id":"3858","location":{"end":{"column":4,"line":15},"start":{"column":52,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3860","location":{"end":{"column":37,"line":18},"start":{"column":9,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3861","location":{"end":{"column":37,"line":18},"start":{"column":9,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3859","location":{"end":{"column":4,"line":21},"start":{"column":16,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3862","location":{"end":{"column":6,"line":20},"start":{"column":39,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3864","location":{"end":{"column":4,"line":29},"start":{"column":43,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3863","location":{"end":{"column":4,"line":25},"start":{"column":30,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3865","location":{"end":{"column":4,"line":33},"start":{"column":76,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Container, Service } from 'typedi';\r\nimport { FrameIdentifier } from '../message-bus/FrameIdentifier';\r\nimport { ParentFrameStorage } from './ParentFrameStorage';\r\nimport { StoreBasedStorage } from './StoreBasedStorage';\r\nimport { IStorage } from './IStorage';\r\nimport { Observable } from 'rxjs';\r\nimport { isSynchronized } from './ISynchronizedStorage';\r\n\r\n@Service()\r\nexport class BrowserLocalStorage implements IStorage {\r\n  private readonly storage: IStorage;\r\n\r\n  constructor(private identifier: FrameIdentifier) {\r\n    this.storage = identifier.isParentFrame() ? Container.get(ParentFrameStorage) : Container.get(StoreBasedStorage);\r\n  }\r\n\r\n  init(): void {\r\n    if (isSynchronized(this.storage)) {\r\n      this.storage.initSynchronization();\r\n    }\r\n  }\r\n\r\n  getItem(name: string): any {\r\n    return this.storage.getItem(name);\r\n  }\r\n\r\n  setItem(name: string, value: any): void {\r\n    this.storage.setItem(name, value);\r\n  }\r\n\r\n  select<T>(selector: (storage: { [p: string]: any }) => T): Observable<T> {\r\n    return this.storage.select(selector);\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\storage\\BrowserSessionStorage.ts":{"language":"typescript","mutants":[{"id":"3867","location":{"end":{"column":4,"line":15},"start":{"column":50,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3866","location":{"end":{"column":4,"line":11},"start":{"column":104,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3868","location":{"end":{"column":41,"line":14},"start":{"column":12,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { AbstractStorage } from './AbstractStorage';\r\nimport { InterFrameCommunicator } from '../message-bus/InterFrameCommunicator';\r\nimport { FramesHub } from '../message-bus/FramesHub';\r\nimport { FrameIdentifier } from '../message-bus/FrameIdentifier';\r\n\r\n@Service()\r\nexport class BrowserSessionStorage extends AbstractStorage {\r\n  constructor(communicator: InterFrameCommunicator, framesHub: FramesHub, identifier: FrameIdentifier) {\r\n    super(window.sessionStorage, communicator, framesHub, identifier);\r\n  }\r\n\r\n  protected getSychronizationEventName(): string {\r\n    return 'ST_SET_SESSION_STORAGE_ITEM';\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\storage\\ComponentsConfigSchema.ts":{"language":"typescript","mutants":[{"id":"3869","location":{"end":{"column":2,"line":8},"start":{"column":57,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3870","location":{"end":{"column":67,"line":5},"start":{"column":54,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3871","location":{"end":{"column":75,"line":5},"start":{"column":69,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import Joi from 'joi';\r\n\r\nexport const ComponentsConfigSchema = Joi.object().keys({\r\n  defaultPaymentType: Joi.string(),\r\n  requestTypes: Joi.array().items(Joi.string().valid('THREEDQUERY', 'AUTH')),\r\n  paymentTypes: Joi.array().items(Joi.string()),\r\n  startOnLoad: Joi.boolean()\r\n});\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\storage\\ConfigSchema.ts":{"language":"typescript","mutants":[{"id":"3874","location":{"end":{"column":44,"line":7},"start":{"column":37,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3872","location":{"end":{"column":2,"line":158},"start":{"column":65,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3873","location":{"end":{"column":4,"line":44},"start":{"column":13,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3875","location":{"end":{"column":53,"line":7},"start":{"column":46,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3876","location":{"end":{"column":70,"line":7},"start":{"column":55,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3877","location":{"end":{"column":43,"line":8},"start":{"column":36,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3878","location":{"end":{"column":50,"line":8},"start":{"column":45,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3879","location":{"end":{"column":58,"line":8},"start":{"column":52,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3881","location":{"end":{"column":81,"line":8},"start":{"column":70,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3880","location":{"end":{"column":68,"line":8},"start":{"column":60,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3884","location":{"end":{"column":41,"line":14},"start":{"column":28,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3882","location":{"end":{"column":94,"line":8},"start":{"column":83,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3883","location":{"end":{"column":6,"line":42},"start":{"column":21,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3885","location":{"end":{"column":59,"line":14},"start":{"column":43,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3887","location":{"end":{"column":91,"line":14},"start":{"column":78,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3886","location":{"end":{"column":76,"line":14},"start":{"column":61,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3890","location":{"end":{"column":21,"line":20},"start":{"column":11,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3889","location":{"end":{"column":26,"line":19},"start":{"column":11,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3888","location":{"end":{"column":17,"line":18},"start":{"column":11,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3892","location":{"end":{"column":16,"line":22},"start":{"column":11,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3891","location":{"end":{"column":20,"line":21},"start":{"column":11,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3893","location":{"end":{"column":23,"line":23},"start":{"column":11,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3894","location":{"end":{"column":25,"line":24},"start":{"column":11,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3895","location":{"end":{"column":17,"line":25},"start":{"column":11,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3896","location":{"end":{"column":28,"line":26},"start":{"column":11,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3897","location":{"end":{"column":19,"line":27},"start":{"column":11,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3899","location":{"end":{"column":20,"line":29},"start":{"column":11,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3898","location":{"end":{"column":21,"line":28},"start":{"column":11,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3900","location":{"end":{"column":17,"line":30},"start":{"column":11,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3901","location":{"end":{"column":16,"line":31},"start":{"column":11,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3903","location":{"end":{"column":8,"line":38},"start":{"column":14,"line":35}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3902","location":{"end":{"column":17,"line":32},"start":{"column":11,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3904","location":{"end":{"column":72,"line":41},"start":{"column":58,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3905","location":{"end":{"column":80,"line":41},"start":{"column":74,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3906","location":{"end":{"column":91,"line":41},"start":{"column":82,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3907","location":{"end":{"column":107,"line":41},"start":{"column":93,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3908","location":{"end":{"column":34,"line":45},"start":{"column":32,"line":45}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3909","location":{"end":{"column":30,"line":47},"start":{"column":24,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3910","location":{"end":{"column":46,"line":47},"start":{"column":32,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3911","location":{"end":{"column":56,"line":47},"start":{"column":48,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3912","location":{"end":{"column":68,"line":47},"start":{"column":58,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3914","location":{"end":{"column":89,"line":47},"start":{"column":77,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3913","location":{"end":{"column":75,"line":47},"start":{"column":70,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3915","location":{"end":{"column":100,"line":47},"start":{"column":91,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3916","location":{"end":{"column":108,"line":47},"start":{"column":102,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3917","location":{"end":{"column":116,"line":47},"start":{"column":110,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3918","location":{"end":{"column":6,"line":57},"start":{"column":11,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3919","location":{"end":{"column":42,"line":52},"start":{"column":40,"line":52}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3920","location":{"end":{"column":70,"line":52},"start":{"column":52,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3921","location":{"end":{"column":40,"line":53},"start":{"column":38,"line":53}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3922","location":{"end":{"column":66,"line":53},"start":{"column":50,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3923","location":{"end":{"column":44,"line":54},"start":{"column":42,"line":54}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3924","location":{"end":{"column":74,"line":54},"start":{"column":54,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3925","location":{"end":{"column":47,"line":55},"start":{"column":45,"line":55}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3926","location":{"end":{"column":80,"line":55},"start":{"column":57,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3928","location":{"end":{"column":70,"line":56},"start":{"column":52,"line":56}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3927","location":{"end":{"column":42,"line":56},"start":{"column":40,"line":56}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3929","location":{"end":{"column":6,"line":68},"start":{"column":11,"line":61}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3930","location":{"end":{"column":48,"line":62},"start":{"column":46,"line":62}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3931","location":{"end":{"column":42,"line":64},"start":{"column":28,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3933","location":{"end":{"column":60,"line":64},"start":{"column":52,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3932","location":{"end":{"column":50,"line":64},"start":{"column":44,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3934","location":{"end":{"column":71,"line":64},"start":{"column":62,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3935","location":{"end":{"column":87,"line":64},"start":{"column":73,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3936","location":{"end":{"column":102,"line":64},"start":{"column":89,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3937","location":{"end":{"column":60,"line":66},"start":{"column":58,"line":66}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3938","location":{"end":{"column":42,"line":67},"start":{"column":40,"line":67}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3939","location":{"end":{"column":43,"line":70},"start":{"column":41,"line":70}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3941","location":{"end":{"column":51,"line":73},"start":{"column":46,"line":73}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"3940","location":{"end":{"column":39,"line":71},"start":{"column":37,"line":71}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3943","location":{"end":{"column":75,"line":76},"start":{"column":63,"line":76}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3942","location":{"end":{"column":61,"line":76},"start":{"column":56,"line":76}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3944","location":{"end":{"column":91,"line":76},"start":{"column":77,"line":76}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3945","location":{"end":{"column":6,"line":82},"start":{"column":11,"line":79}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3946","location":{"end":{"column":40,"line":80},"start":{"column":38,"line":80}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3948","location":{"end":{"column":32,"line":86},"start":{"column":30,"line":86}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3947","location":{"end":{"column":40,"line":81},"start":{"column":38,"line":81}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3950","location":{"end":{"column":31,"line":89},"start":{"column":29,"line":89}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3949","location":{"end":{"column":4,"line":92},"start":{"column":35,"line":88}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3951","location":{"end":{"column":40,"line":90},"start":{"column":38,"line":90}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3952","location":{"end":{"column":38,"line":91},"start":{"column":36,"line":91}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3954","location":{"end":{"column":6,"line":111},"start":{"column":39,"line":102}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3953","location":{"end":{"column":4,"line":157},"start":{"column":17,"line":101}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3955","location":{"end":{"column":42,"line":103},"start":{"column":33,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3957","location":{"end":{"column":6,"line":128},"start":{"column":39,"line":114}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3956","location":{"end":{"column":54,"line":103},"start":{"column":44,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3958","location":{"end":{"column":47,"line":115},"start":{"column":45,"line":115}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3960","location":{"end":{"column":38,"line":117},"start":{"column":36,"line":117}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3959","location":{"end":{"column":42,"line":116},"start":{"column":40,"line":116}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3961","location":{"end":{"column":46,"line":118},"start":{"column":44,"line":118}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3964","location":{"end":{"column":38,"line":121},"start":{"column":36,"line":121}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3962","location":{"end":{"column":33,"line":119},"start":{"column":31,"line":119}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3963","location":{"end":{"column":38,"line":120},"start":{"column":36,"line":120}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3965","location":{"end":{"column":34,"line":122},"start":{"column":32,"line":122}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3966","location":{"end":{"column":35,"line":123},"start":{"column":33,"line":123}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3967","location":{"end":{"column":37,"line":124},"start":{"column":35,"line":124}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3968","location":{"end":{"column":41,"line":125},"start":{"column":39,"line":125}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3969","location":{"end":{"column":39,"line":126},"start":{"column":37,"line":126}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3971","location":{"end":{"column":78,"line":130},"start":{"column":72,"line":130}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3970","location":{"end":{"column":70,"line":130},"start":{"column":56,"line":130}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3972","location":{"end":{"column":89,"line":130},"start":{"column":80,"line":130}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3974","location":{"end":{"column":6,"line":156},"start":{"column":33,"line":131}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3973","location":{"end":{"column":105,"line":130},"start":{"column":91,"line":130}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3975","location":{"end":{"column":8,"line":141},"start":{"column":35,"line":138}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3977","location":{"end":{"column":60,"line":140},"start":{"column":53,"line":140}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3976","location":{"end":{"column":51,"line":140},"start":{"column":45,"line":140}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3979","location":{"end":{"column":59,"line":144},"start":{"column":53,"line":144}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3980","location":{"end":{"column":68,"line":144},"start":{"column":61,"line":144}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3978","location":{"end":{"column":8,"line":146},"start":{"column":34,"line":142}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3982","location":{"end":{"column":8,"line":154},"start":{"column":39,"line":151}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3981","location":{"end":{"column":8,"line":150},"start":{"column":33,"line":147}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3983","location":{"end":{"column":49,"line":152},"start":{"column":43,"line":152}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3985","location":{"end":{"column":60,"line":153},"start":{"column":54,"line":153}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3984","location":{"end":{"column":58,"line":152},"start":{"column":51,"line":152}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3986","location":{"end":{"column":69,"line":153},"start":{"column":62,"line":153}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import Joi from 'joi';\n\nexport const ConfigSchema: Joi.ObjectSchema = Joi.object().keys({\n  analytics: Joi.boolean(),\n  animatedCard: Joi.boolean(),\n  applePay: {\n    buttonStyle: Joi.string().valid('black', 'white', 'white-outline'),\n    buttonText: Joi.string().valid('plain', 'buy', 'book', 'donate', 'check-out', 'subscribe'),\n    merchantId: Joi.string(),\n    paymentRequest: {\n      countryCode: Joi.string(),\n      currencyCode: Joi.string(),\n      merchantCapabilities: Joi.array().items(\n        Joi.string().valid('supports3DS', 'supportsCredit', 'supportsDebit', 'supportsEMV')\n      ),\n      supportedNetworks: Joi.array().items(\n        Joi.string().valid(\n          'amex',\n          'chinaUnionPay',\n          'discover',\n          'interac',\n          'jcb',\n          'masterCard',\n          'privateLabel',\n          'visa',\n          'cartesBancaires',\n          'eftpos',\n          'electron',\n          'maestro',\n          'vPay',\n          'elo',\n          'mada'\n        )\n      ),\n      total: {\n        amount: Joi.string(),\n        label: Joi.string()\n      },\n      requiredBillingContactFields: Joi.array().items(Joi.string()),\n      requiredShippingContactFields: Joi.array().items(Joi.string()),\n      requestTypes: Joi.array().items(Joi.string().valid('ACCOUNTCHECK', 'AUTH', 'RISKDEC', 'SUBSCRIPTION'))\n    },\n    placement: Joi.string()\n  },\n  buttonId: Joi.string().allow(''),\n  bypassCards: Joi.array().items(\n    Joi.string().valid('AMEX', 'ASTROPAYCARD', 'DINERS', 'DISCOVER', 'JCB', 'MASTERCARD', 'MAESTRO', 'PIBA', 'VISA')\n  ),\n  cancelCallback: Joi.any(),\n  componentIds: Joi.object()\n    .keys({\n      animatedCard: Joi.string().allow('').default('st-animated-card'),\n      cardNumber: Joi.string().allow('').default('st-card-number'),\n      expirationDate: Joi.string().allow('').default('st-expiration-date'),\n      notificationFrame: Joi.string().allow('').default('st-notification-frame'),\n      securityCode: Joi.string().allow('').default('st-security-code')\n    })\n    .allow({})\n    .default({}),\n  components: Joi.object()\n    .keys({\n      defaultPaymentType: Joi.string().allow(''),\n      requestTypes: Joi.array().items(\n        Joi.string().valid('ACCOUNTCHECK', 'AUTH', 'JSINIT', 'RISKDEC', 'SUBSCRIPTION', 'THREEDQUERY')\n      ),\n      paymentTypes: Joi.array().items(Joi.string().allow('')),\n      startOnLoad: Joi.boolean().allow('')\n    })\n    .default({}),\n  cybertonicaApiKey: Joi.string().allow(''),\n  datacenterurl: Joi.string().allow(''),\n  deferInit: Joi.boolean(),\n  disableNotification: Joi.boolean().default(false),\n  errorCallback: Joi.any(),\n  errorReporting: Joi.boolean(),\n  fieldsToSubmit: Joi.array().items(Joi.string().valid('pan', 'expirydate', 'securitycode')),\n  formId: Joi.string(),\n  init: Joi.object()\n    .keys({\n      cachetoken: Joi.string().allow(''),\n      threedinit: Joi.string().allow('')\n    })\n    .allow(null),\n  jwt: Joi.string().required(),\n  livestatus: Joi.number().valid(0, 1),\n  origin: Joi.string().allow(''),\n  panIcon: Joi.boolean(),\n  placeholders: Joi.object().keys({\n    pan: Joi.string().allow(''),\n    securitycode: Joi.string().allow(''),\n    expirydate: Joi.string().allow('')\n  }),\n  styles: Joi.object(),\n  submitCallback: Joi.any(),\n  successCallback: Joi.any(),\n  submitFields: Joi.array(),\n  submitOnCancel: Joi.boolean(),\n  submitOnError: Joi.boolean(),\n  submitOnSuccess: Joi.boolean(),\n  translations: Joi.object(),\n  visaCheckout: {\n    buttonSettings: Joi.object().keys({\n      color: Joi.string().allow('neutral', 'standard'),\n      size: Joi.number(),\n      height: Joi.number(),\n      width: Joi.number(),\n      locale: Joi.string(),\n      cardBrands: Joi.string(),\n      acceptCanadianVisaDebit: Joi.string(),\n      cobrand: Joi.string()\n    }),\n    livestatus: Joi.number().valid(0, 1),\n    merchantId: Joi.string(),\n    paymentRequest: Joi.object().keys({\n      merchantRequestId: Joi.string().allow(''),\n      currencyCode: Joi.string().allow(''),\n      subtotal: Joi.string().allow(''),\n      shippingHandling: Joi.string().allow(''),\n      tax: Joi.string().allow(''),\n      discount: Joi.string().allow(''),\n      giftWrap: Joi.string().allow(''),\n      misc: Joi.string().allow(''),\n      total: Joi.string().allow(''),\n      orderId: Joi.string().allow(''),\n      description: Joi.string().allow(''),\n      promoCode: Joi.string().allow(''),\n      customData: Joi.any()\n    }),\n    placement: Joi.string(),\n    requestTypes: Joi.array().items(Joi.string().valid('ACCOUNTCHECK', 'AUTH', 'RISKDEC', 'SUBSCRIPTION')),\n    settings: Joi.object().keys({\n      locale: Joi.string(),\n      countryCode: Joi.string(),\n      displayName: Joi.string(),\n      websiteUrl: Joi.string(),\n      customerSupportUrl: Joi.string(),\n      enableUserDataPrefill: Joi.boolean(),\n      shipping: Joi.object().keys({\n        acceptedRegions: Joi.array(),\n        collectShipping: Joi.string().allow('true', 'false')\n      }),\n      payment: Joi.object().keys({\n        cardBrands: Joi.array(),\n        acceptCanadianVisaDebit: Joi.string().allow('true', 'false'),\n        billingCountries: Joi.array()\n      }),\n      review: Joi.object().keys({\n        message: Joi.string(),\n        buttonAction: Joi.string()\n      }),\n      threeDSSetup: Joi.object().keys({\n        threeDSActive: Joi.string().allow('true', 'false'),\n        threeDSSuppressChallenge: Joi.string().allow('true', 'false')\n      }),\n      dataLevel: Joi.string()\n    })\n  }\n});\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\storage\\ISynchronizedStorage.ts":{"language":"typescript","mutants":[{"id":"3987","location":{"end":{"column":2,"line":9},"start":{"column":84,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3988","location":{"end":{"column":68,"line":8},"start":{"column":10,"line":8}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3989","location":{"end":{"column":68,"line":8},"start":{"column":10,"line":8}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"3990","location":{"end":{"column":68,"line":8},"start":{"column":10,"line":8}},"mutatorName":"EqualityOperator","replacement":"typeof (storage as any).initSynchronization !== 'function'","status":"Survived"},{"id":"3991","location":{"end":{"column":68,"line":8},"start":{"column":58,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { IStorage } from './IStorage';\r\n\r\nexport interface ISynchronizedStorage extends IStorage {\r\n  initSynchronization(): void;\r\n}\r\n\r\nexport function isSynchronized(storage: IStorage): storage is ISynchronizedStorage {\r\n  return typeof (storage as any).initSynchronization === 'function';\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\storage\\ParentFrameStorage.ts":{"language":"typescript","mutants":[{"id":"3993","location":{"end":{"column":4,"line":37},"start":{"column":43,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3992","location":{"end":{"column":4,"line":24},"start":{"column":30,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3994","location":{"end":{"column":6,"line":36},"start":{"column":81,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3995","location":{"end":{"column":10,"line":33},"start":{"column":9,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3998","location":{"end":{"column":4,"line":50},"start":{"column":31,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3996","location":{"end":{"column":60,"line":32},"start":{"column":17,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3997","location":{"end":{"column":4,"line":41},"start":{"column":76,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"3999","location":{"end":{"column":8,"line":49},"start":{"column":27,"line":46}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4000","location":{"end":{"column":4,"line":55},"start":{"column":62,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4001","location":{"end":{"column":53,"line":54},"start":{"column":24,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"4002","location":{"end":{"column":4,"line":63},"start":{"column":49,"line":57}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4004","location":{"end":{"column":6,"line":62},"start":{"column":17,"line":60}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4003","location":{"end":{"column":6,"line":60},"start":{"column":9,"line":58}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { InterFrameCommunicator } from '../message-bus/InterFrameCommunicator';\r\nimport { FramesHub } from '../message-bus/FramesHub';\r\nimport { CONTROL_FRAME_IFRAME } from '../../../application/core/models/constants/Selectors';\r\nimport { PUBLIC_EVENTS } from '../../../application/core/models/constants/EventTypes';\r\nimport { ofType } from '../message-bus/operators/ofType';\r\nimport { IStorage } from './IStorage';\r\nimport { ISynchronizedStorage } from './ISynchronizedStorage';\r\n\r\ninterface StorageData {\r\n  [index: string]: any;\r\n}\r\n\r\n@Service()\r\nexport class ParentFrameStorage implements IStorage, ISynchronizedStorage {\r\n  private storage$: BehaviorSubject<StorageData> = new BehaviorSubject({});\r\n\r\n  constructor(private interFrameCommunicator: InterFrameCommunicator, private framesHub: FramesHub) {}\r\n\r\n  getItem(name: string): any {\r\n    return this.storage$.getValue()[name];\r\n  }\r\n\r\n  setItem(name: string, value: any): void {\r\n    this.setItemWithoutSync(name, value);\r\n    this.framesHub.waitForFrame(CONTROL_FRAME_IFRAME).subscribe(controlFrame => {\r\n      this.interFrameCommunicator.send(\r\n        {\r\n          type: PUBLIC_EVENTS.STORAGE_SYNC,\r\n          data: { key: name, value: JSON.stringify(value) }\r\n        },\r\n        controlFrame\r\n      );\r\n    });\r\n  }\r\n\r\n  select<T>(selector: (storage: { [p: string]: any }) => T): Observable<T> {\r\n    return this.storage$.pipe(map(selector));\r\n  }\r\n\r\n  initSynchronization(): void {\r\n    this.interFrameCommunicator.incomingEvent$\r\n      .pipe(ofType(PUBLIC_EVENTS.STORAGE_SYNC), takeUntil(this.interFrameCommunicator.communicationClosed$))\r\n      .subscribe(event => {\r\n        const { key, value } = event.data;\r\n        this.setItemWithoutSync(key, this.parseEventData(value));\r\n      });\r\n  }\r\n\r\n  private setItemWithoutSync(name: string, value: any): void {\r\n    const storage = this.storage$.getValue();\r\n    this.storage$.next({ ...storage, [name]: value });\r\n  }\r\n\r\n  private parseEventData(jsonData: string): any {\r\n    try {\r\n      return JSON.parse(jsonData);\r\n    } catch (e) {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\storage\\SimpleStorage.ts":{"language":"typescript","mutants":[{"id":"4005","location":{"end":{"column":4,"line":16},"start":{"column":30,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4006","location":{"end":{"column":4,"line":21},"start":{"column":43,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4007","location":{"end":{"column":53,"line":20},"start":{"column":24,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"4008","location":{"end":{"column":4,"line":25},"start":{"column":76,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { IStorage } from './IStorage';\r\n\r\ninterface StorageData {\r\n  [index: string]: any;\r\n}\r\n\r\n@Service()\r\nexport class SimpleStorage implements IStorage {\r\n  private storage$: BehaviorSubject<StorageData> = new BehaviorSubject({});\r\n\r\n  getItem(name: string): any {\r\n    return this.storage$.getValue()[name];\r\n  }\r\n\r\n  setItem(name: string, value: any): void {\r\n    const storage = this.storage$.getValue();\r\n    this.storage$.next({ ...storage, [name]: value });\r\n  }\r\n\r\n  select<T>(selector: (storage: { [p: string]: any }) => T): Observable<T> {\r\n    return this.storage$.pipe(map(selector));\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\storage\\StorageConfigProvider.ts":{"language":"typescript","mutants":[{"id":"4009","location":{"end":{"column":62,"line":10},"start":{"column":41,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4010","location":{"end":{"column":4,"line":16},"start":{"column":24,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4011","location":{"end":{"column":46,"line":18},"start":{"column":41,"line":18}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"4012","location":{"end":{"column":4,"line":24},"start":{"column":69,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4013","location":{"end":{"column":68,"line":20},"start":{"column":15,"line":20}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import { IConfig } from '../../model/config/IConfig';\r\nimport { BrowserLocalStorage } from './BrowserLocalStorage';\r\nimport { Service } from 'typedi';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, filter, first, shareReplay } from 'rxjs/operators';\r\nimport { ConfigProvider } from '../config-provider/ConfigProvider';\r\n\r\n@Service()\r\nexport class StorageConfigProvider implements ConfigProvider {\r\n  private static readonly STORAGE_KEY = 'app.config-provider';\r\n\r\n  constructor(private storage: BrowserLocalStorage) {}\r\n\r\n  getConfig(): IConfig {\r\n    return this.storage.getItem(StorageConfigProvider.STORAGE_KEY);\r\n  }\r\n\r\n  getConfig$(watchForChanges: boolean = false): Observable<IConfig> {\r\n    const config$ = this.storage\r\n      .select(storage => storage[StorageConfigProvider.STORAGE_KEY])\r\n      .pipe(distinctUntilChanged(), filter<IConfig>(Boolean), shareReplay(1));\r\n\r\n    return watchForChanges ? config$ : config$.pipe(first());\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\shared\\services\\storage\\StoreBasedStorage.ts":{"language":"typescript","mutants":[{"id":"4014","location":{"end":{"column":4,"line":19},"start":{"column":30,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4015","location":{"end":{"column":4,"line":30},"start":{"column":43,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4016","location":{"end":{"column":8,"line":27},"start":{"column":7,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"4018","location":{"end":{"column":4,"line":34},"start":{"column":76,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4017","location":{"end":{"column":58,"line":26},"start":{"column":15,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"4020","location":{"end":{"column":4,"line":41},"start":{"column":25,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4021","location":{"end":{"column":6,"line":40},"start":{"column":108,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4019","location":{"end":{"column":63,"line":33},"start":{"column":31,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"4022","location":{"end":{"column":4,"line":48},"start":{"column":65,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4023","location":{"end":{"column":6,"line":47},"start":{"column":25,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"4024","location":{"end":{"column":31,"line":45},"start":{"column":13,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4025","location":{"end":{"column":36,"line":46},"start":{"column":16,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"4026","location":{"end":{"column":4,"line":56},"start":{"column":49,"line":50}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4028","location":{"end":{"column":6,"line":55},"start":{"column":17,"line":53}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4027","location":{"end":{"column":6,"line":53},"start":{"column":9,"line":51}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Observable } from 'rxjs';\r\nimport { Store } from '../../../application/core/store/Store';\r\nimport { Service } from 'typedi';\r\nimport { InterFrameCommunicator } from '../message-bus/InterFrameCommunicator';\r\nimport { PUBLIC_EVENTS } from '../../../application/core/models/constants/EventTypes';\r\nimport { ofType } from '../message-bus/operators/ofType';\r\nimport { IStorage } from './IStorage';\r\nimport { ISynchronizedStorage } from './ISynchronizedStorage';\r\nimport { MERCHANT_PARENT_FRAME } from '../../../application/core/models/constants/Selectors';\r\n\r\n@Service()\r\nexport class StoreBasedStorage implements IStorage, ISynchronizedStorage {\r\n  constructor(private store: Store, private interFrameCommunicator: InterFrameCommunicator) {}\r\n\r\n  getItem(name: string): any {\r\n    const { storage } = this.store.getState();\r\n\r\n    return storage[name];\r\n  }\r\n\r\n  setItem(name: string, value: any): void {\r\n    this.setItemWithoutSync(name, value);\r\n    this.interFrameCommunicator.send(\r\n      {\r\n        type: PUBLIC_EVENTS.STORAGE_SYNC,\r\n        data: { key: name, value: JSON.stringify(value) }\r\n      },\r\n      MERCHANT_PARENT_FRAME\r\n    );\r\n  }\r\n\r\n  select<T>(selector: (storage: { [p: string]: any }) => T): Observable<T> {\r\n    return this.store.select$(state => selector(state.storage));\r\n  }\r\n\r\n  initSynchronization() {\r\n    this.interFrameCommunicator.incomingEvent$.pipe(ofType(PUBLIC_EVENTS.STORAGE_SYNC)).subscribe(event => {\r\n      const { key, value } = event.data;\r\n      this.setItemWithoutSync(key, this.parseEventData(value));\r\n    });\r\n  }\r\n\r\n  private setItemWithoutSync(name: string, value: string): void {\r\n    this.store.dispatch({\r\n      type: 'STORAGE/SET_ITEM',\r\n      payload: { key: name, value }\r\n    });\r\n  }\r\n\r\n  private parseEventData(jsonData: string): any {\r\n    try {\r\n      return JSON.parse(jsonData);\r\n    } catch (e) {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\testing\\ServicesOverrides.ts":{"language":"typescript","mutants":[{"id":"4029","location":{"end":{"column":32,"line":8},"start":{"column":5,"line":8}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"4030","location":{"end":{"column":32,"line":8},"start":{"column":5,"line":8}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"4031","location":{"end":{"column":2,"line":11},"start":{"column":34,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4032","location":{"end":{"column":59,"line":9},"start":{"column":17,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"4033","location":{"end":{"column":69,"line":10},"start":{"column":17,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { Container } from 'typedi';\r\nimport { Cybertonica } from '../application/core/integrations/cybertonica/Cybertonica';\r\nimport { CybertonicaMock } from './mocks/CybertonicaMock';\r\nimport { environment } from '../environments/environment';\r\nimport { CardinalProvider } from '../application/core/integrations/cardinal-commerce/CardinalProvider';\r\nimport { MockCardinalProvider } from './mocks/MockCardinalProvider';\r\n\r\nif (environment.testEnvironment) {\r\n  Container.set({ id: Cybertonica, type: CybertonicaMock });\r\n  Container.set({ id: CardinalProvider, type: MockCardinalProvider });\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\testing\\mocks\\CardinalMock.ts":{"language":"typescript","mutants":[{"id":"4034","location":{"end":{"column":4,"line":13},"start":{"column":23,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"4035","location":{"end":{"column":68,"line":9},"start":{"column":37,"line":9}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"4036","location":{"end":{"column":63,"line":10},"start":{"column":32,"line":10}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"4037","location":{"end":{"column":73,"line":11},"start":{"column":42,"line":11}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"4038","location":{"end":{"column":72,"line":12},"start":{"column":41,"line":12}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"4039","location":{"end":{"column":4,"line":24},"start":{"column":96,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4042","location":{"end":{"column":4,"line":36},"start":{"column":87,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4040","location":{"end":{"column":6,"line":23},"start":{"column":93,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4041","location":{"end":{"column":4,"line":32},"start":{"column":66,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4043","location":{"end":{"column":68,"line":35},"start":{"column":16,"line":35}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"4044","location":{"end":{"column":4,"line":42},"start":{"column":46,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4045","location":{"end":{"column":34,"line":39},"start":{"column":9,"line":39}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"4046","location":{"end":{"column":34,"line":39},"start":{"column":9,"line":39}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"4047","location":{"end":{"column":6,"line":41},"start":{"column":36,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4048","location":{"end":{"column":4,"line":54},"start":{"column":72,"line":44}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4049","location":{"end":{"column":8,"line":51},"start":{"column":7,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"4050","location":{"end":{"column":28,"line":47},"start":{"column":21,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4051","location":{"end":{"column":29,"line":48},"start":{"column":27,"line":48}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"4052","location":{"end":{"column":25,"line":50},"start":{"column":20,"line":50}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"4053","location":{"end":{"column":9,"line":52},"start":{"column":7,"line":52}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"import { ICardinal, IOrderObject } from '../../application/core/integrations/cardinal-commerce/ICardinal';\r\nimport { PaymentEvents } from '../../application/core/models/constants/PaymentEvents';\r\nimport { CardinalCommerce } from '../../application/core/integrations/cardinal-commerce/CardinalCommerce';\r\nimport { ajaxGet } from 'rxjs/internal-compatibility';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport class CardinalMock implements ICardinal {\r\n  private callbacks = {\r\n    [PaymentEvents.SETUP_COMPLETE]: (...args: any[]): any => void 0,\r\n    [PaymentEvents.VALIDATED]: (...args: any[]): any => void 0,\r\n    [CardinalCommerce.UI_EVENTS.RENDER]: (...args: any[]): any => void 0,\r\n    [CardinalCommerce.UI_EVENTS.CLOSE]: (...args: any[]): any => void 0\r\n  };\r\n\r\n  configure(config: any) {\r\n    // @ts-ignore\r\n  }\r\n\r\n  continue(paymentBrand: string, continueObject: any, orderObject?: any, cardinalJwt?: string) {\r\n    ajaxGet(environment.CARDINAL_COMMERCE.MOCK.AUTHENTICATE_CARD_URL).subscribe(response => {\r\n      const { data, jwt } = response.response;\r\n      this.callbacks[PaymentEvents.VALIDATED](data, jwt);\r\n    });\r\n  }\r\n\r\n  off(event: string) {\r\n    // @ts-ignore\r\n  }\r\n\r\n  on(eventName: string, callback: (...eventData: any[]) => void) {\r\n    this.callbacks[eventName] = callback;\r\n  }\r\n\r\n  setup(initializationType: 'init' | 'complete' | 'confirm', initializationData: any) {\r\n    setTimeout(() => this.callbacks[PaymentEvents.SETUP_COMPLETE](), 100);\r\n  }\r\n\r\n  trigger(eventName: string, ...data: any[]) {\r\n    if (this.callbacks[eventName]) {\r\n      this.callbacks[eventName].apply(this, data);\r\n    }\r\n  }\r\n\r\n  start(paymentBrand: string, orderObject: IOrderObject, jwt?: string) {\r\n    this.callbacks[PaymentEvents.VALIDATED](\r\n      {\r\n        ActionCode: 'ERROR',\r\n        ErrorDescription: '',\r\n        ErrorNumber: 4000,\r\n        Validated: false\r\n      },\r\n      ''\r\n    );\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\testing\\mocks\\CybertonicaMock.ts":{"language":"typescript","mutants":[{"id":"4055","location":{"end":{"column":78,"line":8},"start":{"column":40,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4054","location":{"end":{"column":45,"line":7},"start":{"column":36,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4056","location":{"end":{"column":4,"line":22},"start":{"column":46,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4057","location":{"end":{"column":21,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"4058","location":{"end":{"column":21,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"4059","location":{"end":{"column":21,"line":13},"start":{"column":9,"line":13}},"mutatorName":"BooleanLiteral","replacement":"apiUserName","status":"Survived"},{"id":"4060","location":{"end":{"column":6,"line":15},"start":{"column":23,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4061","location":{"end":{"column":4,"line":26},"start":{"column":39,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { ICybertonica } from '../../application/core/integrations/cybertonica/ICybertonica';\r\nimport { Service } from 'typedi';\r\nimport { BrowserLocalStorage } from '../../shared/services/storage/BrowserLocalStorage';\r\n\r\n@Service()\r\nexport class CybertonicaMock implements ICybertonica {\r\n  private static TID_KEY: string = 'app.tid';\r\n  private static readonly MOCKED_TID = '63d1d099-d635-41b6-bb82-96017f7da6bb';\r\n\r\n  constructor(private storage: BrowserLocalStorage) {}\r\n\r\n  init(apiUserName: string): Promise<string> {\r\n    if (!apiUserName) {\r\n      return Promise.resolve(undefined);\r\n    }\r\n\r\n    const tid = CybertonicaMock.MOCKED_TID;\r\n\r\n    this.storage.setItem(CybertonicaMock.TID_KEY, tid);\r\n\r\n    return Promise.resolve(tid);\r\n  }\r\n\r\n  getTransactionId(): Promise<string> {\r\n    return Promise.resolve(this.storage.getItem(CybertonicaMock.TID_KEY));\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\testing\\mocks\\MessageBusMock.ts":{"language":"typescript","mutants":[{"id":"4063","location":{"end":{"column":4,"line":18},"start":{"column":82,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4062","location":{"end":{"column":4,"line":14},"start":{"column":17,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4064","location":{"end":{"column":4,"line":33},"start":{"column":55,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4065","location":{"end":{"column":69,"line":21},"start":{"column":9,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"4066","location":{"end":{"column":69,"line":21},"start":{"column":9,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"4067","location":{"end":{"column":69,"line":21},"start":{"column":9,"line":21}},"mutatorName":"LogicalOperator","replacement":"typeof args[0] === 'string' || typeof args[1] === 'function'","status":"Survived"},{"id":"4068","location":{"end":{"column":36,"line":21},"start":{"column":9,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"4069","location":{"end":{"column":36,"line":21},"start":{"column":9,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"4070","location":{"end":{"column":36,"line":21},"start":{"column":9,"line":21}},"mutatorName":"EqualityOperator","replacement":"typeof args[0] !== 'string'","status":"Survived"},{"id":"4071","location":{"end":{"column":36,"line":21},"start":{"column":28,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4072","location":{"end":{"column":69,"line":21},"start":{"column":40,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"4074","location":{"end":{"column":69,"line":21},"start":{"column":40,"line":21}},"mutatorName":"EqualityOperator","replacement":"typeof args[1] !== 'function'","status":"Survived"},{"id":"4073","location":{"end":{"column":69,"line":21},"start":{"column":40,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"4075","location":{"end":{"column":69,"line":21},"start":{"column":59,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4076","location":{"end":{"column":6,"line":30},"start":{"column":71,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4077","location":{"end":{"column":57,"line":27},"start":{"column":15,"line":27}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import { Observable, Subject, Subscribable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Unsubscribable } from 'rxjs/src/internal/types';\r\nimport { IMessageBusEvent } from '../../application/core/models/IMessageBusEvent';\r\nimport { ofType } from '../../shared/services/message-bus/operators/ofType';\r\n\r\nexport class MessageBusMock implements Subscribable<IMessageBusEvent> {\r\n  private readonly source: Subject<IMessageBusEvent>;\r\n  public readonly pipe: Observable<any>['pipe'];\r\n\r\n  constructor() {\r\n    this.source = new Subject<IMessageBusEvent>();\r\n    this.pipe = this.source.pipe.bind(this.source);\r\n  }\r\n\r\n  public publish<T>(event: IMessageBusEvent<T>, publishToParent?: boolean): void {\r\n    this.source.next(event);\r\n  }\r\n\r\n  public subscribe<T>(...args: any[]): Unsubscribable {\r\n    if (typeof args[0] === 'string' && typeof args[1] === 'function') {\r\n      const [eventType, callback] = args;\r\n\r\n      return this.source\r\n        .pipe(\r\n          ofType(eventType),\r\n          map((event: IMessageBusEvent<T>) => event.data)\r\n        )\r\n        .subscribe(callback);\r\n    }\r\n\r\n    return this.source.subscribe.apply(this.source, args);\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\testing\\mocks\\MockCardinalProvider.ts":{"language":"typescript","mutants":[{"id":"4078","location":{"end":{"column":4,"line":11},"start":{"column":60,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Service } from 'typedi';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ICardinal } from '../../application/core/integrations/cardinal-commerce/ICardinal';\r\nimport { CardinalMock } from './CardinalMock';\r\nimport { ICardinalProvider } from '../../application/core/integrations/cardinal-commerce/ICardinalProvider';\r\n\r\n@Service()\r\nexport class MockCardinalProvider implements ICardinalProvider {\r\n  getCardinal$(liveStatus: boolean): Observable<ICardinal> {\r\n    return of(new CardinalMock());\r\n  }\r\n}\r\n"},"C:\\workspace\\trust-payments\\js-payments\\src\\testing\\mocks\\TestConfigProvider.ts":{"language":"typescript","mutants":[{"id":"4079","location":{"end":{"column":326,"line":10},"start":{"column":5,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4080","location":{"end":{"column":4,"line":14},"start":{"column":67,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"4082","location":{"end":{"column":4,"line":22},"start":{"column":62,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4081","location":{"end":{"column":4,"line":18},"start":{"column":24,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4083","location":{"end":{"column":4,"line":26},"start":{"column":36,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { ConfigProvider } from '../../shared/services/config-provider/ConfigProvider';\r\nimport { IConfig } from '../../shared/model/config/IConfig';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Service } from 'typedi';\r\nimport { DefaultConfig } from '../../application/core/models/constants/config-resolver/DefaultConfig';\r\n\r\n@Service()\r\nexport class TestConfigProvider implements ConfigProvider {\r\n  private static readonly SAMPLE_JWT =\r\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1OTQwNDk5MzIsImlzcyI6ImFtMDMxMC5hdXRvYXBpIiwicGF5bG9hZCI6eyJiYXNlYW1vdW50IjoiMjAwMCIsImFjY291bnR0eXBlZGVzY3JpcHRpb24iOiJFQ09NIiwiY3VycmVuY3lpc28zYSI6IkdCUCIsInNpdGVyZWZlcmVuY2UiOiJ0ZXN0X2phbWVzMzg2NDEiLCJsb2NhbGUiOiJlbl9HQiJ9fQ.PW9Fb358_OukUIhD_ubU-_h4IwyHScf6RWqbomgGTnc';\r\n  private config$: BehaviorSubject<IConfig> = new BehaviorSubject({\r\n    ...DefaultConfig,\r\n    jwt: TestConfigProvider.SAMPLE_JWT\r\n  });\r\n\r\n  getConfig(): IConfig {\r\n    return this.config$.getValue();\r\n  }\r\n\r\n  getConfig$(watchForChanges?: boolean): Observable<IConfig> {\r\n    return this.config$.asObservable();\r\n  }\r\n\r\n  setConfig(config: IConfig): void {\r\n    this.config$.next(config);\r\n  }\r\n}\r\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};